{
.appVersion = "3112";
.formatVersion = 3;
customParameters = (
{
name = panose;
value = (
0,
0,
7,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
29,
31,
36,
42,
79,
86
);
},
{
name = codePageRanges;
value = (
"1252",
"1250",
"1254",
"1257"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
space,
A,
Aacute,
Abreve,
Acircumflex,
Adieresis,
Agrave,
Amacron,
Aogonek,
Aring,
Aringacute,
Atilde,
AE,
AEacute,
uni01E2,
B,
C,
Cacute,
Ccaron,
Ccedilla,
Ccircumflex,
Cdotaccent,
D,
Eth,
Dcaron,
Dcroat,
E,
Eacute,
Ebreve,
Ecaron,
Ecircumflex,
Edieresis,
Edotaccent,
Egrave,
Emacron,
Eogonek,
F,
G,
Gbreve,
Gcaron,
Gcircumflex,
uni0122,
Gdotaccent,
uni021C,
H,
Hbar,
Hcircumflex,
I,
IJ,
Iacute,
Ibreve,
Icircumflex,
Idieresis,
Idotaccent,
Igrave,
Imacron,
Iogonek,
Itilde,
J,
Jcircumflex,
K,
uni0136,
L,
Lacute,
Lcaron,
uni013B,
Ldot,
Lslash,
M,
N,
Nacute,
Ncaron,
uni0145,
Eng,
Ntilde,
O,
Oacute,
Obreve,
Ocircumflex,
Odieresis,
Ograve,
Ohungarumlaut,
Omacron,
uni01EA,
Oslash,
Oslashacute,
Otilde,
OE,
P,
Thorn,
Q,
R,
Racute,
Rcaron,
uni0156,
S,
Sacute,
Scaron,
Scedilla,
Scircumflex,
uni0218,
uni1E9E,
T,
Tcaron,
uni0162,
U,
Uacute,
Ubreve,
Ucircumflex,
Udieresis,
Ugrave,
Uhungarumlaut,
Umacron,
Uogonek,
Uring,
Utilde,
V,
W,
Wcircumflex,
X,
Y,
Yacute,
Ycircumflex,
Ydieresis,
Z,
Zacute,
Zcaron,
Zdotaccent,
uni0186,
uni0190,
uni019D,
uni01C4,
uni01C5,
uni01C7,
uni01C8,
uni01CA,
uni01CB,
uni01CD,
uni01CF,
uni01D1,
uni01D3,
uni01D5,
uni01D7,
uni01D9,
uni01DB,
uni01DE,
uni01E0,
uni01E4,
uni01E8,
uni01EC,
uni01F1,
uni01F2,
uni01F4,
uni01F6,
uni01F7,
uni01F8,
uni0200,
uni0202,
uni0204,
uni0206,
uni0208,
uni020A,
uni020C,
uni020E,
uni0210,
uni0212,
uni0214,
uni0216,
uni021A,
uni021E,
uni0226,
uni0228,
uni022A,
uni022C,
uni022E,
uni0230,
uni0232,
uni1E0C,
uni1E0E,
uni1E20,
uni1E24,
uni1E2A,
uni1E32,
uni1E62,
uni1E6C,
uni1E6E,
uni1E8E,
uni1E92,
T.alt,
Thorn.nordic,
a,
aacute,
abreve,
acircumflex,
adieresis,
agrave,
amacron,
aogonek,
aring,
aringacute,
atilde,
ae,
aeacute,
uni01E3,
b,
c,
cacute,
ccaron,
ccedilla,
ccircumflex,
cdotaccent,
d,
eth,
dcaron,
dcroat,
e,
eacute,
ebreve,
ecaron,
ecircumflex,
edieresis,
edotaccent,
egrave,
emacron,
eogonek,
uni0259,
uni025A,
f,
g,
gbreve,
gcaron,
gcircumflex,
uni0123,
gdotaccent,
uni021D,
h,
hbar,
hcircumflex,
i,
dotlessi,
iacute,
ibreve,
icircumflex,
idieresis,
igrave,
ij,
imacron,
iogonek,
itilde,
j,
uni0237,
jcircumflex,
k,
uni0137,
l,
lacute,
lcaron,
uni013C,
ldot,
lslash,
m,
n,
nacute,
napostrophe,
ncaron,
uni0146,
eng,
ntilde,
o,
oacute,
obreve,
ocircumflex,
odieresis,
ograve,
ohungarumlaut,
omacron,
uni01EB,
oslash,
oslashacute,
otilde,
oe,
p,
thorn,
q,
r,
racute,
rcaron,
uni0157,
s,
sacute,
scaron,
scedilla,
scircumflex,
uni0219,
germandbls,
longs,
t,
tcaron,
uni0163,
u,
uacute,
ubreve,
ucircumflex,
udieresis,
ugrave,
uhungarumlaut,
umacron,
uni0180,
uni0195,
uni01BF,
uni01C6,
uni01C9,
uni01CC,
uni01CE,
uni01D0,
uni01D2,
uni01D4,
uni01D6,
uni01D8,
uni01DA,
uni01DC,
uni01DD,
uni01DF,
uni01E1,
uni01E5,
uni01E9,
uni01ED,
uni01F0,
uni01F3,
uni01F5,
uni01F9,
uni0201,
uni0203,
uni0205,
uni0207,
uni0209,
uni020B,
uni020D,
uni020F,
uni0211,
uni0213,
uni0215,
uni0217,
uni021B,
uni021F,
uni0227,
uni0229,
uni022B,
uni022D,
uni022F,
uni0231,
uni0233,
uni0250,
uni0251,
uni0252,
uni0253,
uni0254,
uni0255,
uni0256,
uni0257,
uni0258,
uni025B,
uni025C,
uni025D,
uni025E,
uni025F,
uni0260,
uni0261,
uni0262,
uni0263,
uni0264,
uni0265,
uni0266,
uni0267,
uni0268,
uni0269,
uni026A,
uni026B,
uni026C,
uni026D,
uni026E,
uni026F,
uni0270,
uni0271,
uni0272,
uni0273,
uni0274,
uni0275,
uni0276,
uni0277,
uni0278,
uni0279,
uni027A,
uni027B,
uni027C,
uni027D,
uni027E,
uni027F,
uni0280,
uni0281,
uni0282,
uni0283,
uni0284,
uni0285,
uni0286,
uni0287,
uni0288,
uni0289,
uni028A,
uni028B,
uni028C,
uni028D,
uni028E,
uni028F,
uni0290,
uni0291,
uni0292,
uni0293,
uni0294,
uni0295,
uni0296,
uni0297,
uni0298,
uni0299,
uni029A,
uni029B,
uni029C,
uni029D,
uni029E,
uni029F,
uni02A0,
uni02A1,
uni02A2,
uni02A3,
uni02A4,
uni02A5,
uni02A6,
uni02A7,
uni02A8,
uni02A9,
uni02AA,
uni02AB,
uni02AC,
uni02AD,
uni1D79,
uni1E0D,
uni1E0F,
uni1E21,
uni1E25,
uni1E2B,
uni1E33,
uni1E5B,
uni1E63,
uni1E6D,
uni1E6F,
uni1E8F,
uni1E93,
uni1E96,
uni1E9C,
uni1EBD,
uniA741,
uniA751,
uniA753,
uniA757,
uniA75D,
uniA76B,
uniA76F,
uniA77A,
uniA77C,
uniA783,
uniA785,
uniA787,
uogonek,
uring,
utilde,
v,
w,
wcircumflex,
x,
y,
yacute,
ycircumflex,
ydieresis,
z,
zacute,
zcaron,
zdotaccent,
eth.alt,
uniA77A.alt,
eogonek.alt,
f.alt,
uni0294.alt,
j.alt,
eth.nordic,
thorn.nordic,
i.sc1,
f_eth,
f_f_udieresis,
f_j,
f_odieresis,
f_thorn,
f_udieresis,
uniFB00,
uniFB01,
uniFB02,
uniFB03,
uniFB04,
f_f.alt,
f_eth.nordic,
f_thorn.nordic,
uni1E9E.sc,
a.sc,
aacute.sc,
acircumflex.sc,
adieresis.sc,
agrave.sc,
amacron.sc,
aogonek.sc,
aring.sc,
atilde.sc,
ae.sc,
uni01E3.sc,
b.sc,
c.sc,
cacute.sc,
ccaron.sc,
ccedilla.sc,
cdotaccent.sc,
d.sc,
eth.sc,
dcaron.sc,
e.sc,
eacute.sc,
ecaron.sc,
ecircumflex.sc,
edieresis.sc,
egrave.sc,
emacron.sc,
f.sc,
g.sc,
gcaron.sc,
gdotaccent.sc,
h.sc,
i.sc,
iacute.sc,
icircumflex.sc,
idieresis.sc,
igrave.sc,
imacron.sc,
j.sc,
k.sc,
l.sc,
lslash.sc,
m.sc,
n.sc,
nacute.sc,
ncaron.sc,
thorn.nordic.sc,
ntilde.sc,
o.sc,
oacute.sc,
ocircumflex.sc,
odieresis.sc,
ograve.sc,
omacron.sc,
oslash.sc,
otilde.sc,
oe.sc,
p.sc,
thorn.sc,
q.sc,
r.sc,
rcaron.sc,
s.sc,
sacute.sc,
scaron.sc,
scedilla.sc,
germandbls.sc,
t.sc,
tcaron.sc,
u.sc,
uacute.sc,
ucircumflex.sc,
udieresis.sc,
ugrave.sc,
umacron.sc,
uring.sc,
v.sc,
w.sc,
x.sc,
y.sc,
yacute.sc,
ydieresis.sc,
uni0233.sc,
z.sc,
zacute.sc,
zcaron.sc,
zdotaccent.sc,
ordfeminine,
ordmasculine,
uni02B0,
uni02B1,
uni02B2,
uni02B3,
uni02B4,
uni02B5,
uni02B6,
uni02B7,
uni02B8,
uni02E1,
uni02E2,
uni02E3,
beta,
chi,
uni03D1,
uniA770,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
zero.zero,
nine.oldstsyle,
zero.oldstyle,
one.oldstyle,
two.oldstyle,
three.oldstyle,
four.oldstyle,
five.oldstyle,
six.oldstyle,
seven.oldstyle,
eight.oldstyle,
zero.oldstylezero,
uni00B9,
uni00B2,
uni00B3,
fraction,
uni215F,
onehalf,
uni2153,
uni2154,
onequarter,
threequarters,
uni2155,
uni2156,
uni2157,
uni2158,
uni2159,
uni215A,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
uni2160,
uni2161,
uni2162,
uni2163,
uni2164,
uni2165,
uni2166,
uni2167,
uni2168,
uni2169,
uni216A,
uni216B,
uni216C,
uni216D,
uni216E,
uni216F,
uni2170,
uni2171,
uni2172,
uni2173,
uni2174,
uni2175,
uni2176,
uni2177,
uni2178,
uni2179,
uni217A,
uni217B,
uni217C,
uni217D,
uni217E,
uni217F,
period,
comma,
colon,
semicolon,
ellipsis,
exclam,
exclamdown,
question,
questiondown,
periodcentered,
bullet,
asterisk,
numbersign,
slash,
backslash,
uni2016,
uni2038,
uni2041,
uni204A,
uni2E0C,
uni2E0D,
uniFE5F,
uniFE6A,
colon.alt,
semicolon.alt,
exclam.alt,
question.alt,
parenleft,
parenright,
braceleft,
braceright,
bracketleft,
bracketright,
angleleft,
angleright,
hyphen,
endash,
emdash,
uni2015,
figuredash,
underscore,
underscoredbl,
uni2010,
uni2011,
quotesinglbase,
quotedblbase,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
guillemotleft,
guillemotright,
guilsinglleft,
guilsinglright,
quotedbl,
quotesingle,
quotedblleft.alt,
quotedblright.alt,
quoteleft.alt,
quoteright.alt,
parenleft.sc,
parenright.sc,
exclam.sc,
exclamdown.sc,
question.sc,
questiondown.sc,
quotedblleft.sc,
quotedblright.sc,
quoteleft.sc,
quoteright.sc,
numbersign.sc,
uni00A0,
uni2000,
uni2001,
uni2002,
uni2003,
uni2004,
uni2005,
uni2006,
uni2007,
uni2008,
uni2009,
uni200A,
uni200B,
uni200D,
uni200C,
uni000D,
Euro,
cent,
currency,
dollar,
florin,
sterling,
yen,
cent.oldstyle,
dollar.oldstyle,
plus,
minus,
multiply,
divide,
equal,
greater,
less,
plusminus,
asciitilde,
logicalnot,
asciicircum,
emptyset,
uni00B5,
percent,
perthousand,
arrowup,
arrowright,
arrowdown,
arrowleft,
at,
ampersand,
paragraph,
section,
copyright,
registered,
trademark,
degree,
bar,
brokenbar,
dagger,
daggerdbl,
uni02C2,
uni02C3,
uni02C4,
uni02C5,
uni02D2,
uni02D3,
uni02D4,
uni02D5,
uni02D6,
uni02D7,
uni02DE,
uni02DF,
uni02E5,
uni02E6,
uni02E7,
uni02E8,
uni02E9,
uni02EA,
uni02EB,
uni02EC,
uni02ED,
uni02EE,
uni02EF,
uni02F0,
uni02F1,
uni02F2,
uni02F3,
uni02F4,
uni02F5,
uni02F6,
uni02F7,
uni02F8,
uni02F9,
uni02FA,
uni02FB,
uni02FC,
uni02FD,
uni02FE,
uni02FF,
ampersand.sc,
percent.sc,
uni02E4,
uni02E0,
uni02BC,
uni02BD,
uni02B9,
uni02BA,
uni02BB,
uni02BE,
uni02BF,
uni02C0,
uni02C1,
uni02C8,
uni02C9,
uni02CA,
uni02CB,
uni02CC,
uni02CD,
uni02CE,
uni02CF,
uni02D0,
uni02D1,
uni0308,
uni0307,
gravecomb,
acutecomb,
uni030B,
uni0302,
uni030C,
uni0306,
uni030A,
tildecomb,
uni0304,
uni0305,
uni030F,
uni0311,
uni0312,
dotbelowcomb,
uni0325,
uni0326,
uni0327,
uni0328,
uni032E,
uni032F,
uni0330,
uni0331,
uni0337,
uni0338,
uni033D,
uni035B,
dieresis,
dotaccent,
grave,
acute,
hungarumlaut,
circumflex,
caron,
breve,
ring,
tilde,
macron,
cedilla,
ogonek,
uni1DCE,
caron.alt,
uni0308.case,
gravecomb.case,
acutecomb.case,
uni030B.case,
uni0302.case,
uni030C.case,
uni0304.case,
uni030F.case,
uni0308.sc,
gravecomb.sc,
acutecomb.sc,
uni0302.sc,
uni030C.sc,
tildecomb.sc,
uni0363,
uni0368,
uni0369,
uni0364,
uni1DD3,
uni036A,
uni0365,
uni036B,
uni0366,
uni036C,
uni036D,
uni0367,
uni036E,
uni036F,
uni0000,
u10330,
u10331,
u10332,
u10333,
u10334,
u10335,
u10336,
u10337,
u10338,
u10339,
u1033A,
u1033B,
u1033C,
u1033D,
u1033E,
u1033F,
u10340,
u10341,
u10342,
u10343,
u10344,
u10345,
u10346,
u10347,
u10348,
u10349,
u1034A,
uni16A0,
uni16A1,
uni16A2,
uni16A3,
uni16A4,
uni16A5,
uni16A6,
uni16A7,
uni16A8,
uni16A9,
uni16AA,
uni16AB,
uni16AC,
uni16AD,
uni16AE,
uni16AF,
uni16B0,
uni16B1,
uni16B2,
uni16B3,
uni16B4,
uni16B5,
uni16B6,
uni16B7,
uni16B8,
uni16B9,
uni16BA,
uni16BB,
uni16BC,
uni16BD,
uni16BE,
uni16BF,
uni16C0,
uni16C1,
uni16C2,
uni16C3,
uni16C4,
uni16C5,
uni16C6,
uni16C7,
uni16C8,
uni16C9,
uni16CA,
uni16CB,
uni16CC,
uni16CD,
uni16CE,
uni16CF,
uni16D0,
uni16D1,
uni16D2,
uni16D3,
uni16D4,
uni16D5,
uni16D6,
uni16D7,
uni16D8,
uni16D9,
uni16DA,
uni16DB,
uni16DC,
uni16DD,
uni16DE,
uni16DF,
uni16E0,
uni16E1,
uni16E2,
uni16E3,
uni16E4,
uni16E5,
uni16E6,
uni16E7,
uni16E8,
uni16E9,
uni16EA,
uni16EB,
uni16EC,
uni16ED,
uni16EE,
uni16EF,
uni16F0,
uniE0D1,
uniE120,
uniE18A,
uniE1A6,
uniE1A7,
uniE1A8,
uniE1A9,
uniE1AA,
uniE1AB,
uniE1AC,
uniE1AD,
uniE4D1,
uniEBA1,
uniF106,
uniF10A,
uniF10E,
uniF110,
uniF11A,
uniF126,
uniF127,
uniF13C,
uniF13D,
uniF140,
uniF141,
uniF149,
uniF150,
uniF153,
uniF160,
uniF161,
uniF162,
uniF193,
uniF194,
uniF195,
uniF196,
uniF198,
uniF199,
uniF19A,
uniF19B,
uniF1A0,
uniF6BE,
uniF701,
uniF702,
uniF721,
uniF726,
uniF730,
uniF731,
uniF732,
uniF733,
uniF734,
uniF735,
uniF736,
uniF737,
uniF738,
uniF739,
uniF73F,
uniF761,
uniF762,
uniF763,
uniF764,
uniF765,
uniF766,
uniF767,
uniF768,
uniF769,
uniF76A,
uniF76B,
uniF76C,
uniF76D,
uniF76E,
uniF76F,
uniF770,
uniF771,
uniF772,
uniF773,
uniF774,
uniF775,
uniF776,
uniF777,
uniF778,
uniF779,
uniF77A,
uniF7A1,
uniF7E0,
uniF7E1,
uniF7E2,
uniF7E3,
uniF7E4,
uniF7E5,
uniF7E6,
uniF7E7,
uniF7E8,
uniF7E9,
uniF7EA,
uniF7EB,
uniF7EC,
uniF7ED,
uniF7EE,
uniF7EF,
uniF7F0,
uniF7F1,
uniF7F2,
uniF7F3,
uniF7F4,
uniF7F5,
uniF7F6,
uniF7F8,
uniF7F9,
uniF7FA,
uniF7FB,
uniF7FC,
uniF7FD,
uniF7FE,
uniF7FF,
uniE499.alt,
uniE49E.alt,
uniE4BC.alt,
uniE4E8.alt,
uniE4EA.alt,
uniE4EB.alt,
uniE4EC.alt,
uniEBF3.alt,
PoisonMark,
longbackslash,
longslash
);
}
);
date = "2022-02-20 01:21:58 +0000";
familyName = Junicode;
featurePrefixes = (
{
code = "lookup SUB_0 {
	sub eth by eth.alt;
	sub f by f.alt;
	sub i by dotlessi;
	sub j by uni0237;
	sub uniFB00 by f_f.alt;
} SUB_0;
lookup SUB_22 {
	sub eth by eth.alt;
	sub j by j.alt;
} SUB_22;
";
name = Prefix;
},
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem goth dflt;

languagesystem latn dflt;
languagesystem latn ISL;
languagesystem latn TRK;

languagesystem runr dflt;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature sups;
feature onum;
feature zero;
feature swsh;
feature smcp;
feature c2sc;
feature locl;
feature hist;
feature ss01;
feature ss02;
feature ss09;
feature ss15;
feature ss17;
feature ss18;
feature ss19;
feature ss20;
feature salt;
feature frac;
feature calt;
feature ordn;
feature case;
";
tag = aalt;
},
{
code = "	@SUB_1_0_LA_0 = [acutecomb gravecomb tildecomb uni0302 uni0304 uni0305 uni0306 uni0307 uni0308 uni030A uni030B uni030C uni030F uni0311 uni0312 uni033D uni035B uni0363 uni0364 uni0365 uni0366 uni0367 uni0368 uni0369 uni036A uni036B uni036C uni036D uni036E uni036F uni1DCE uni1DD3];
	sub [i j]' lookup SUB_0 @SUB_1_0_LA_0;
";
tag = ccmp;
},
{
code = "
	sub one by uni00B9;
	sub two by uni00B2;
	sub three by uni00B3;

";
tag = sups;
},
{
code = "
	sub zero by zero.oldstyle;
	sub one by one.oldstyle;
	sub two by two.oldstyle;
	sub three by three.oldstyle;
	sub four by four.oldstyle;
	sub five by five.oldstyle;
	sub six by six.oldstyle;
	sub seven by seven.oldstyle;
	sub eight by eight.oldstyle;
	sub nine by nine.oldstsyle;
	sub cent by cent.oldstyle;
	sub dollar by dollar.oldstyle;

";
tag = onum;
},
{
code = "
	sub zero by zero.zero;
	sub zero.oldstyle by zero.oldstylezero;

";
tag = zero;
},
{
code = "
	sub c by uniF198;
	sub d by uniF193;
	sub f by uniF194;
	sub g by uniF196;
	sub k by uniF195;
	sub n by uniF19A;
	sub r by uniF19B;
	sub t by uniF199;

";
tag = swsh;
},
{
code = "
	sub a by a.sc;
	sub aacute by aacute.sc;
	sub acircumflex by acircumflex.sc;
	sub adieresis by adieresis.sc;
	sub agrave by agrave.sc;
	sub amacron by amacron.sc;
	sub aogonek by aogonek.sc;
	sub aring by aring.sc;
	sub atilde by atilde.sc;
	sub ae by ae.sc;
	sub uni01E3 by uni01E3.sc;
	sub b by b.sc;
	sub c by c.sc;
	sub cacute by cacute.sc;
	sub ccaron by ccaron.sc;
	sub ccedilla by ccedilla.sc;
	sub cdotaccent by cdotaccent.sc;
	sub d by d.sc;
	sub eth by eth.sc;
	sub dcaron by dcaron.sc;
	sub e by e.sc;
	sub eacute by eacute.sc;
	sub ecaron by ecaron.sc;
	sub ecircumflex by ecircumflex.sc;
	sub edieresis by edieresis.sc;
	sub egrave by egrave.sc;
	sub emacron by emacron.sc;
	sub f by f.sc;
	sub g by g.sc;
	sub gcaron by gcaron.sc;
	sub gdotaccent by gdotaccent.sc;
	sub h by h.sc;
	sub i by i.sc;
	sub iacute by iacute.sc;
	sub icircumflex by icircumflex.sc;
	sub idieresis by idieresis.sc;
	sub igrave by igrave.sc;
	sub imacron by imacron.sc;
	sub j by j.sc;
	sub k by k.sc;
	sub l by l.sc;
	sub lslash by lslash.sc;
	sub m by m.sc;
	sub n by n.sc;
	sub nacute by nacute.sc;
	sub ncaron by ncaron.sc;
	sub ntilde by ntilde.sc;
	sub o by o.sc;
	sub oacute by oacute.sc;
	sub ocircumflex by ocircumflex.sc;
	sub odieresis by odieresis.sc;
	sub ograve by ograve.sc;
	sub omacron by omacron.sc;
	sub oslash by oslash.sc;
	sub otilde by otilde.sc;
	sub oe by oe.sc;
	sub p by p.sc;
	sub thorn by thorn.sc;
	sub q by q.sc;
	sub r by r.sc;
	sub rcaron by rcaron.sc;
	sub s by s.sc;
	sub sacute by sacute.sc;
	sub scaron by scaron.sc;
	sub scedilla by scedilla.sc;
	sub germandbls by germandbls.sc;
	sub t by t.sc;
	sub tcaron by tcaron.sc;
	sub u by u.sc;
	sub uacute by uacute.sc;
	sub ucircumflex by ucircumflex.sc;
	sub udieresis by udieresis.sc;
	sub ugrave by ugrave.sc;
	sub umacron by umacron.sc;
	sub uni0233 by uni0233.sc;
	sub uring by uring.sc;
	sub v by v.sc;
	sub w by w.sc;
	sub x by x.sc;
	sub y by y.sc;
	sub yacute by yacute.sc;
	sub ydieresis by ydieresis.sc;
	sub z by z.sc;
	sub zacute by zacute.sc;
	sub zcaron by zcaron.sc;
	sub zdotaccent by zdotaccent.sc;
	sub uni0308 by uni0308.sc;
	sub gravecomb by gravecomb.sc;
	sub acutecomb by acutecomb.sc;
	sub uni0302 by uni0302.sc;
	sub uni030C by uni030C.sc;
	sub tildecomb by tildecomb.sc;

";
tag = smcp;
},
{
code = "	sub A by a.sc;
	sub Aacute by aacute.sc;
	sub Acircumflex by acircumflex.sc;
	sub Adieresis by adieresis.sc;
	sub Agrave by agrave.sc;
	sub Amacron by amacron.sc;
	sub Aogonek by aogonek.sc;
	sub Aring by aring.sc;
	sub Atilde by atilde.sc;
	sub AE by ae.sc;
	sub uni01E2 by uni01E3.sc;
	sub B by b.sc;
	sub C by c.sc;
	sub Cacute by cacute.sc;
	sub Ccaron by ccaron.sc;
	sub Ccedilla by ccedilla.sc;
	sub Cdotaccent by cdotaccent.sc;
	sub D by d.sc;
	sub Eth by eth.sc;
	sub Dcaron by dcaron.sc;
	sub E by e.sc;
	sub Eacute by eacute.sc;
	sub Ecaron by ecaron.sc;
	sub Ecircumflex by ecircumflex.sc;
	sub Edieresis by edieresis.sc;
	sub Egrave by egrave.sc;
	sub Emacron by emacron.sc;
	sub F by f.sc;
	sub G by g.sc;
	sub Gcaron by gcaron.sc;
	sub Gdotaccent by gdotaccent.sc;
	sub H by h.sc;
	sub I by i.sc;
	sub Iacute by iacute.sc;
	sub Icircumflex by icircumflex.sc;
	sub Idieresis by idieresis.sc;
	sub Igrave by igrave.sc;
	sub Imacron by imacron.sc;
	sub J by j.sc;
	sub K by k.sc;
	sub L by l.sc;
	sub Lslash by lslash.sc;
	sub M by m.sc;
	sub N by n.sc;
	sub Nacute by nacute.sc;
	sub Ncaron by ncaron.sc;
	sub Ntilde by ntilde.sc;
	sub O by o.sc;
	sub Oacute by oacute.sc;
	sub Ocircumflex by ocircumflex.sc;
	sub Odieresis by odieresis.sc;
	sub Ograve by ograve.sc;
	sub Omacron by omacron.sc;
	sub Oslash by oslash.sc;
	sub Otilde by otilde.sc;
	sub OE by oe.sc;
	sub P by p.sc;
	sub Thorn by thorn.sc;
	sub Q by q.sc;
	sub R by r.sc;
	sub Rcaron by rcaron.sc;
	sub S by s.sc;
	sub Sacute by sacute.sc;
	sub Scaron by scaron.sc;
	sub Scedilla by scedilla.sc;
	sub uni1E9E by uni1E9E.sc;
	sub T by t.sc;
	sub Tcaron by tcaron.sc;
	sub U by u.sc;
	sub Uacute by uacute.sc;
	sub Ucircumflex by ucircumflex.sc;
	sub Udieresis by udieresis.sc;
	sub Ugrave by ugrave.sc;
	sub Umacron by umacron.sc;
	sub Uring by uring.sc;
	sub V by v.sc;
	sub W by w.sc;
	sub X by x.sc;
	sub Y by y.sc;
	sub Yacute by yacute.sc;
	sub Ydieresis by ydieresis.sc;
	sub Z by z.sc;
	sub Zacute by zacute.sc;
	sub Zcaron by zcaron.sc;
	sub Zdotaccent by zdotaccent.sc;
	sub uni0232 by uni0233.sc;
	sub exclam by exclam.sc;
	sub exclamdown by exclamdown.sc;
	sub question by question.sc;
	sub questiondown by questiondown.sc;
	sub numbersign by numbersign.sc;
	sub parenleft by parenleft.sc;
	sub parenright by parenright.sc;
	sub quoteleft by quoteleft.sc;
	sub quoteright by quoteright.sc;
	sub quotedblleft.sc by quotedblright.sc;
	sub percent by percent.sc;
	sub ampersand by ampersand.sc;
";
tag = c2sc;
},
{
code = "script latn;
language ISL;
lookup SUB_8 {
	sub Thorn by Thorn.nordic;
	sub eth by eth.nordic;
	sub thorn by thorn.nordic;
	sub thorn.sc by thorn.nordic.sc;
} SUB_8;
language TRK;
lookup SUB_9 {
	sub i.sc by i.sc1;
} SUB_9;
";
tag = locl;
},
{
code = "	sub s by longs;
";
tag = hist;
},
{
code = "	sub Thorn by Thorn.nordic;
	sub eth by eth.nordic;
	sub thorn by thorn.nordic;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss01;
},
{
code = "
	sub W by uni01F7;
	sub d by uniA77A;
	sub f by uniA77C;
	sub g by uni1D79;
	sub r by uniA783;
	sub s by uniA785;
	sub t by uniA787;
	sub w by uni01BF;
	sub ampersand by uni204A;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss02;
},
{
code = "
	sub T by T.alt;
	sub uniA77A by uniA77A.alt;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss09;
},
{
code = "
	sub eogonek by eogonek.alt;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss15;
},
{
code = "	sub uni0294 by uni0294.alt;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss17;
},
{
code = "	sub colon by colon.alt;
	sub semicolon by semicolon.alt;
	sub exclam by exclam.alt;
	sub question by question.alt;
	sub quotedblleft by quotedblleft.alt;
	sub quotedblright by quotedblright.alt;
	sub quoteleft by quoteleft.alt;
	sub quoteright by quoteright.alt;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss18;
},
{
code = "
	sub A by u10330;
	sub B by u10331;
	sub D by u10333;
	sub E by u10334;
	sub F by u10346;
	sub G by u10332;
	sub H by u10337;
	sub I by u10339;
	sub J by u1033E;
	sub K by u1033A;
	sub L by u1033B;
	sub M by u1033C;
	sub N by u1033D;
	sub O by u10349;
	sub P by u10340;
	sub Thorn by u10338;
	sub Q by u10335;
	sub R by u10342;
	sub S by u10343;
	sub T by u10344;
	sub U by u1033F;
	sub W by u10345;
	sub X by u10347;
	sub Z by u10336;
	sub uni01F6 by u10348;
	sub a by u10330;
	sub b by u10331;
	sub d by u10333;
	sub e by u10334;
	sub f by u10346;
	sub g by u10332;
	sub h by u10337;
	sub i by u10339;
	sub j by u1033E;
	sub k by u1033A;
	sub l by u1033B;
	sub m by u1033C;
	sub n by u1033D;
	sub o by u10349;
	sub p by u10340;
	sub thorn by u10338;
	sub q by u10335;
	sub r by u10342;
	sub s by u10343;
	sub t by u10344;
	sub u by u1033F;
	sub uni0195 by u10348;
	sub w by u10345;
	sub x by u10347;
	sub z by u10336;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss19;
},
{
code = "	sub u10330 by a;
	sub u10331 by b;
	sub u10332 by g;
	sub u10333 by d;
	sub u10334 by e;
	sub u10335 by q;
	sub u10336 by z;
	sub u10337 by h;
	sub u10338 by thorn;
	sub u10339 by i;
	sub u1033A by k;
	sub u1033B by l;
	sub u1033C by m;
	sub u1033D by n;
	sub u1033E by j;
	sub u1033F by u;
	sub u10340 by p;
	sub u10342 by r;
	sub u10343 by s;
	sub u10344 by t;
	sub u10345 by w;
	sub u10346 by f;
	sub u10347 by x;
	sub u10348 by uni0195;
	sub u10349 by o;

";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss20;
},
{
code = "	sub C by uniF106;
	sub E by uniF10A;
	sub G by uniF10E;
	sub H by uniF110;
	sub M by uniF11A;
	sub S by uniF126;
	sub f by f.alt;
";
tag = salt;
},
{
code = "
	sub one fraction two by onehalf;
	sub one fraction three by uni2153;
	sub one fraction four by onequarter;
	sub one fraction five by uni2155;
	sub one fraction six by uni2159;
	sub one fraction eight by oneeighth;
	sub one slash two by onehalf;
	sub one slash three by uni2153;
	sub one slash four by onequarter;
	sub one slash five by uni2155;
	sub one slash six by uni2159;
	sub one slash eight by oneeighth;
	sub two fraction three by uni2154;
	sub two fraction five by uni2156;
	sub two slash three by uni2154;
	sub two slash five by uni2156;
	sub three fraction four by threequarters;
	sub three fraction five by uni2157;
	sub three fraction eight by threeeighths;
	sub three slash four by threequarters;
	sub three slash five by uni2157;
	sub three slash eight by threeeighths;
	sub four fraction five by uni2158;
	sub four slash five by uni2158;
	sub five fraction six by uni215A;
	sub five fraction eight by fiveeighths;
	sub five slash six by uni215A;
	sub five slash eight by fiveeighths;
	sub seven fraction eight by seveneighths;
	sub seven slash eight by seveneighths;
";
tag = frac;
},
{
code = "
	sub D Z by uni01F1;
	sub D Zcaron by uni01C4;
	sub D z by uni01F2;
	sub D zcaron by uni01C5;
	sub I J by IJ;
	sub L J by uni01C7;
	sub L j by uni01C8;
	sub N J by uni01CA;
	sub N j by uni01CB;
	sub d z by uni01F3;
	sub d zcaron by uni01C6;
	sub f f i by uniFB03;
	sub f f l by uniFB04;
	sub f f udieresis by f_f_udieresis;
	sub f eth by f_eth;
	sub f f by uniFB00;
	sub f i by uniFB01;
	sub f j by f_j;
	sub f l by uniFB02;
	sub f odieresis by f_odieresis;
	sub f thorn by f_thorn;
	sub f udieresis by f_udieresis;
	sub f eth.nordic by f_eth.nordic;
	sub f thorn.nordic by f_thorn.nordic;
	sub i j by ij;
	sub l j by uni01C9;
	sub n j by uni01CC;
	sub longs longs i by uniE1AC;
	sub longs longs l by uniE1AD;
	sub longs b by uniE1A6;
	sub longs h by uniEBA1;
	sub longs i by uniE1A8;
	sub longs k by uniE1A9;
	sub longs l by uniE1AA;
	sub longs longs by uniE1AB;
	sub period period period by ellipsis;
";
tag = liga;
},
{
code = "lookup SUB_23 {
	sub imacron eth' lookup SUB_22;
	@SUB_23_1_LA_0 = [abreve acircumflex adieresis agrave amacron aring atilde ebreve ecircumflex edieresis egrave emacron eth.nordic iacute ibreve icircumflex idieresis igrave imacron obreve ocircumflex odieresis ograve omacron otilde ubreve ucircumflex udieresis ugrave umacron uni01E3 uni0233 ydieresis];
	sub [f uniFB00]' lookup SUB_0 @SUB_23_1_LA_0;
} SUB_23;
lookup SUB_24 {
	@SUB_24_0_BT_0 = [Aogonek Eogonek aogonek eogonek g uogonek];
	sub @SUB_24_0_BT_0 j' lookup SUB_22;
} SUB_24;
";
tag = calt;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 1485;
},
{
name = typoDescender;
value = -563;
},
{
name = typoLineGap;
value = 900;
},
{
name = winAscent;
value = 2070;
},
{
name = winDescent;
value = 880;
},
{
name = hheaAscender;
value = 1485;
},
{
name = hheaDescender;
value = -563;
},
{
name = strikeoutPosition;
value = 513;
},
{
name = strikeoutSize;
value = 69;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 8 values pushed */\01293 77 61 0 0 0 6 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 14 values pushed */\01282 8 66 8 54 6 46 4 38 4 27 7 6 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 14 values pushed */\01290 6 74 6 60 4 50 2 42 2 34 2 6 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 13 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 8 values pushed */\0125312 4288 3520 3008 2496 1792 6 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 8 values pushed */\01264 64 64 64 64 256 6 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 14 values pushed */\01284 6 68 6 56 4 48 2 40 2 32 2 6 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    250,\012    250,\012    47,\012    47,\012    106,\012    36,\012    184,\012    934,\012    \"-18\",\012    977,\012    \"-18\",\012    50,\012    50,\012    50,\012    50,\012    1333,\012    \"-338\",\012    1333,\012    \"-338\",\012    253,\012    253,\012    82,\012    82,\012    932,\012    \"-18\",\012    950,\012    \"-18\",\012    253,\012    253,\012    82,\012    82,\012    936,\012    936,\012    \"-15\",\012    \"-18\",\012    936,\012    950,\012    \"-15\",\012    \"-18\",\012    253,\012    253,\012    80,\012    80,\012    1358,\012    \"-23\",\012    1487,\012    870,\012    \"-23\",\012    \"-559\",\012    1384,\012    \"-27\",\012    1487,\012    870,\012    \"-23\",\012    \"-559\",\012    50,\012    50,\012    50,\012    50,\012    1348,\012    520,\012    1417,\012    1038,\012    520,\012    203,\012    1348,\012    506,\012    1417,\012    1055,\012    518,\012    203\012)";
}
);
iconName = SemiBold;
id = m01;
metricValues = (
{
pos = 1485;
},
{
pos = 1363;
},
{
pos = 856;
},
{
},
{
pos = -563;
},
{
}
);
name = Bold;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(647,1194,o),
(645,995,qs),
(645,907,o),
(530,844,qs),
(424,788,ls),
(309,727,o),
(309,637,qs),
(309,561,o),
(385,426,q),
(393,418,o),
(408,420,qs),
(431,424,o),
(430,438,q),
(410,508,o),
(410,563,qs),
(410,612,o),
(483,653,qs),
(649,741,ls),
(731,784,o),
(731,930,qs),
(729,1090,o),
(614,1231,qs),
(499,1362,o),
(371,1362,qs),
(287,1362,o),
(287,1280,qs),
(286,1194,o),
(354,1194,q),
(354,1194,l)
);
},
{
closed = 1;
nodes = (
(535,125,o),
(514,158,qs),
(477,213,o),
(414,213,qs),
(375,213,o),
(346,193,qs),
(297,156,o),
(297,86,qs),
(297,49,o),
(317,18,q),
(354,-31,o),
(414,-31,qs),
(451,-31,o),
(479,-14,qs),
(535,18,o),
(535,86,q),
(535,86,l)
);
},
{
closed = 1;
nodes = (
(68,1507,l),
(932,1507,l),
(932,-131,l),
(68,-131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
17 15 2 3 0 1 76 6 1 0 1 3 1 0 3 128 0 3 2 1 3 2 126 0 4 0 1 0 4 1 105 0 2 5 5 2 89 0 2 2 5 95 7 1 5 2 5 79 46 46 1 0 46 49 46 49 48 47 42 40 34 32 5 3 0 28 1 27 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = ".notdef";
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 557;
}
);
note = space;
unicode = 32;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1237,86,o),
(1399,86,qs),
(1413,86,o),
(1413,-6,o),
(1399,-6,qs),
(1284,0,o),
(983,0,o),
(858,-6,qs),
(844,-6,o),
(844,86,o),
(858,86,qs),
(954,86,o),
(954,152,qs),
(954,172,o),
(944,203,qs),
(844,500,l),
(838,523,o),
(811,522,qs),
(436,522,ls),
(416,522,o),
(406,494,qs),
(297,201,ls),
(289,176,o),
(287,160,q),
(287,86,o),
(434,86,qs),
(446,86,o),
(446,-6,o),
(434,-6,qs),
(350,0,o),
(51,0,o),
(-27,-6,qs),
(-41,-6,o),
(-41,86,o),
(-27,86,qs),
(125,86,o),
(174,217,qs),
(545,1186,ls),
(557,1217,o),
(557,1231,o),
(528,1260,o),
(528,1268,qs),
(528,1282,o),
(596,1305,o),
(735,1389,o),
(756,1389,qs),
(789,1389,o),
(811,1294,o),
(852,1178,qs),
(1196,203,ls)
);
},
{
closed = 1;
nodes = (
(645,1083,o),
(633,1083,qs),
(623,1083,o),
(616,1067,q),
(459,635,l),
(455,618,l),
(455,608,o),
(475,606,q),
(768,606,ls),
(797,606,o),
(797,629,qs),
(797,635,o),
(793,643,q),
(649,1067,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
25 1 1 4 1 76 20 1 2 73 0 9 0 8 0 9 8 128 0 8 0 4 1 8 4 103 0 0 0 74 77 7 5 3 3 1 1 2 97 6 1 2 2 69 2 78 62 60 37 34 66 21 53 35 50 25 34 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1400;
}
);
note = A;
unicode = 65;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1294,0);
ref = acutecomb.case;
}
);
width = 1400;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1151,507);
ref = uni0306;
}
);
width = 1400;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1343,0);
ref = uni0302.case;
}
);
width = 1400;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1311,0);
ref = uni0308.case;
}
);
width = 1400;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1154,0);
ref = gravecomb.case;
}
);
width = 1400;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Amacron;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1332,0);
ref = uni0304.case;
}
);
width = 1400;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(645,1083,o),
(623,1083,o),
(616,1067,q),
(459,635,l),
(455,618,l),
(455,608,o),
(475,606,q),
(768,606,ls),
(797,606,o),
(797,629,qs),
(797,635,o),
(793,643,q),
(649,1067,l)
);
},
{
closed = 1;
nodes = (
(1237,86,o),
(1399,86,qs),
(1413,86,o),
(1413,-6,o),
(1399,-6,qs),
(1301,0,o),
(1176,0,q),
(1053,-141,o),
(1053,-246,qs),
(1053,-367,o),
(1176,-367,qs),
(1237,-367,o),
(1278,-336,q),
(1298,-342,o),
(1298,-375,q),
(1222,-488,o),
(1081,-487,qs),
(876,-487,o),
(877,-303,qs),
(877,-162,o),
(1057,0,q),
(951,0,o),
(858,-6,qs),
(844,-6,o),
(844,86,o),
(858,86,qs),
(954,86,o),
(954,152,qs),
(954,172,o),
(944,203,qs),
(844,500,l),
(838,523,o),
(811,522,qs),
(436,522,ls),
(416,522,o),
(406,494,qs),
(297,201,ls),
(289,176,o),
(287,160,q),
(287,86,o),
(434,86,qs),
(446,86,o),
(446,-6,o),
(434,-6,qs),
(350,0,o),
(201,0,qs),
(51,0,o),
(-27,-6,qs),
(-41,-6,o),
(-41,86,o),
(-27,86,qs),
(125,86,o),
(174,217,qs),
(545,1186,ls),
(557,1217,o),
(557,1231,o),
(528,1260,o),
(528,1268,qs),
(528,1282,o),
(596,1305,o),
(735,1389,o),
(756,1389,qs),
(789,1389,o),
(811,1294,o),
(852,1178,qs),
(1196,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
39 1 3 6 65 34 2 10 4 63 1 9 10 3 76 0 1 2 0 2 1 0 128 0 0 0 6 3 0 6 103 0 10 0 9 10 9 101 0 2 2 74 77 12 7 5 3 3 3 4 95 11 8 2 4 4 69 4 78 77 75 73 71 68 66 62 60 50 21 53 35 66 25 36 21 35 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1400;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1266,0,o),
(991,0,o),
(858,-6,qs),
(844,-6,o),
(844,39,qs),
(844,59,o),
(848,74,qs),
(852,86,o),
(858,86,qs),
(952,86,o),
(954,152,qs),
(954,175,o),
(944,203,qs),
(844,500,ls),
(836,523,o),
(811,522,qs),
(436,522,ls),
(416,522,o),
(406,494,qs),
(297,201,ls),
(289,176,o),
(287,160,qs),
(287,146,o),
(291,133,q),
(318,86,o),
(434,86,qs),
(446,86,o),
(446,-6,o),
(434,-6,qs),
(295,0,o),
(113,0,o),
(-27,-6,qs),
(-41,-6,o),
(-41,86,o),
(-27,86,qs),
(125,86,o),
(174,217,qs),
(600,1333,l),
(531,1357,o),
(459,1469,o),
(459,1530,qs),
(459,1622,o),
(592,1739,o),
(686,1739,qs),
(796,1739,o),
(912,1613,o),
(918,1530,q),
(918,1467,o),
(849,1364,o),
(799,1343,q),
(803,1329,ls),
(811,1294,o),
(852,1178,qs),
(1196,203,ls),
(1219,140,o),
(1303,106,qs),
(1350,86,o),
(1399,86,qs),
(1413,86,o),
(1413,41,qs),
(1413,21,o),
(1409,4,q),
(1405,-6,o),
(1399,-6,q),
(1399,-6,l)
);
},
{
closed = 1;
nodes = (
(788,1588,o),
(734,1663,o),
(686,1663,qs),
(640,1660,o),
(588,1588,o),
(588,1530,qs),
(588,1479,o),
(634,1401,o),
(686,1401,qs),
(749,1401,o),
(776,1466,qs),
(788,1495,o),
(788,1530,q),
(788,1530,l)
);
},
{
closed = 1;
nodes = (
(649,1067,l),
(645,1083,o),
(625,1083,o),
(616,1067,q),
(459,641,ls),
(455,631,o),
(455,625,qs),
(455,609,o),
(481,606,q),
(768,606,ls),
(797,606,o),
(797,623,qs),
(797,633,o),
(793,643,q),
(793,643,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
17 1 8 9 26 13 2 11 8 81 1 10 11 42 1 0 5 59 1 3 0 5 76 0 1 0 9 8 1 9 105 0 10 0 5 0 10 5 103 0 11 11 8 97 0 8 8 74 77 6 4 2 3 0 0 3 95 7 1 3 3 69 3 78 91 90 84 83 76 74 36 69 21 55 34 66 23 44 37 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1400;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = Aringacute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(942,1925,o),
(936,1912,o),
(932,1910,qs),
(643,1775,ls),
(612,1761,o),
(592,1761,qs),
(574,1761,o),
(541,1783,o),
(541,1802,qs),
(541,1816,o),
(563,1853,o),
(580,1865,qs),
(840,2064,l),
(846,2070,o),
(854,2070,qs),
(862,2070,o),
(887,2055,o),
(916,2008,o),
(942,1951,o),
(942,1935,q),
(942,1935,l)
);
},
{
closed = 1;
nodes = (
(1266,0,o),
(991,0,o),
(858,-6,qs),
(844,-6,o),
(844,39,qs),
(844,86,o),
(858,86,qs),
(954,86,o),
(954,152,qs),
(954,173,o),
(944,203,qs),
(844,500,ls),
(837,522,o),
(811,522,qs),
(436,522,ls),
(416,522,o),
(406,494,qs),
(297,201,ls),
(287,176,o),
(287,160,qs),
(287,86,o),
(434,86,qs),
(446,86,o),
(446,-6,o),
(434,-6,qs),
(295,0,o),
(113,0,o),
(-27,-6,qs),
(-41,-6,o),
(-41,86,o),
(-27,86,qs),
(124,86,o),
(174,217,qs),
(600,1333,l),
(531,1356,o),
(459,1462,o),
(459,1520,qs),
(459,1608,o),
(592,1719,o),
(686,1719,qs),
(796,1719,o),
(912,1599,o),
(918,1520,q),
(918,1461,o),
(849,1363,o),
(799,1343,q),
(803,1329,ls),
(823,1260,o),
(852,1178,qs),
(1196,203,ls),
(1217,143,o),
(1303,106,qs),
(1350,86,o),
(1399,86,qs),
(1413,86,o),
(1413,-6,o),
(1399,-6,q),
(1399,-6,l)
);
},
{
closed = 1;
nodes = (
(788,1576,o),
(734,1647,o),
(686,1647,qs),
(640,1644,o),
(588,1576,o),
(588,1520,qs),
(588,1472,o),
(634,1398,o),
(686,1398,qs),
(740,1398,o),
(788,1478,o),
(788,1520,q),
(788,1520,l)
);
},
{
closed = 1;
nodes = (
(649,1067,l),
(645,1083,o),
(625,1083,o),
(616,1067,q),
(459,641,ls),
(455,631,o),
(455,625,qs),
(455,609,o),
(481,606,q),
(768,606,ls),
(797,606,o),
(797,623,qs),
(797,633,o),
(793,643,q),
(793,643,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
35 1 9 10 44 31 2 12 9 94 1 11 12 58 1 1 6 73 1 4 1 5 76 0 0 2 0 133 0 2 0 10 9 2 10 105 0 11 0 6 1 11 6 103 0 12 12 9 97 0 9 9 74 77 7 5 3 3 1 1 4 95 8 1 4 4 69 4 78 104 103 97 96 89 87 83 81 67 21 53 34 66 23 44 40 45 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1400;
}
);
note = Aringacute;
unicode = 506;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1184,507);
ref = tildecomb;
}
);
width = 1400;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
kernLeft = AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1769,22,o),
(1763,14,qs),
(1745,-6,o),
(1669,-6,qs),
(1483,-6,o),
(1069,0,o),
(940,0,qs),
(784,0,o),
(678,-6,qs),
(664,-6,o),
(664,86,o),
(678,86,qs),
(831,86,o),
(831,195,qs),
(831,569,ls),
(831,600,o),
(803,600,qs),
(469,600,ls),
(442,600,o),
(432,582,qs),
(225,186,l),
(213,159,o),
(213,141,qs),
(213,86,o),
(352,86,qs),
(367,86,o),
(367,-6,o),
(352,-6,qs),
(235,0,o),
(137,0,qs),
(-13,0,o),
(-113,-6,qs),
(-127,-6,o),
(-127,86,o),
(-113,86,qs),
(-23,86,o),
(27,131,qs),
(56,158,o),
(88,213,qs),
(659,1180,ls),
(677,1209,o),
(678,1227,qs),
(678,1266,o),
(594,1266,qs),
(580,1266,o),
(580,1358,o),
(594,1358,qs),
(735,1352,o),
(973,1352,qs),
(1094,1352,o),
(1401,1358,o),
(1585,1358,qs),
(1657,1358,o),
(1671,1354,qs),
(1687,1348,o),
(1688,1313,qs),
(1688,1010,ls),
(1688,993,o),
(1587,993,o),
(1587,1010,qs),
(1587,1262,o),
(1358,1268,qs),
(1108,1272,ls),
(1077,1272,o),
(1077,1229,qs),
(1077,713,ls),
(1077,684,o),
(1106,684,qs),
(1286,684,ls),
(1364,684,o),
(1364,860,qs),
(1364,874,o),
(1460,874,o),
(1460,860,qs),
(1454,770,o),
(1452,645,qs),
(1452,510,o),
(1460,438,q),
(1460,426,o),
(1364,426,o),
(1364,438,qs),
(1364,596,o),
(1286,600,q),
(1106,600,ls),
(1077,600,o),
(1077,567,qs),
(1077,272,ls),
(1077,77,o),
(1206,78,qs),
(1450,86,ls),
(1667,92,o),
(1667,336,qs),
(1667,352,o),
(1769,352,o),
(1769,336,qs),
(1769,49,ls)
);
},
{
closed = 1;
nodes = (
(831,1210,ls),
(831,1226,o),
(821,1229,q),
(811,1229,o),
(801,1210,qs),
(514,713,ls),
(510,707,o),
(510,700,qs),
(510,684,o),
(526,684,qs),
(801,684,ls),
(831,684,o),
(831,713,q),
(831,713,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
53 35 21 3 2 3 72 14 0 3 0 1 95 1 7 0 3 76 12 1 2 9 1 1 0 2 1 103 5 1 3 3 4 95 0 4 4 68 77 10 8 6 3 0 0 7 95 11 1 7 7 69 7 78 99 97 92 85 83 82 79 76 34 82 23 34 119 51 60 51 52 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1847;
}
);
note = AE;
unicode = 198;
},
{
glyphname = AEacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = AE;
},
{
pos = (1748,0);
ref = acutecomb.case;
}
);
width = 1847;
}
);
note = AEacute;
unicode = 508;
},
{
glyphname = uni01E2;
kernLeft = AE;
layers = (
{
layerId = m01;
shapes = (
{
ref = AE;
},
{
pos = (1786,0);
ref = uni0304.case;
}
);
width = 1847;
}
);
note = uni01E2;
unicode = 482;
},
{
glyphname = B;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,-6,o),
(62,86,o),
(76,86,qs),
(160,86,o),
(238,160,o),
(238,203,qs),
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(52,1358,o),
(66,1358,qs),
(209,1352,o),
(399,1352,o),
(578,1358,o),
(639,1358,qs),
(856,1358,o),
(1083,1174,o),
(1083,1018,qs),
(1083,932,o),
(981,788,o),
(903,752,q),
(885,742,o),
(885,727,o),
(905,719,qs),
(1022,680,o),
(1180,487,o),
(1180,371,qs),
(1180,219,o),
(952,-6,o),
(643,-6,qs),
(598,-6,o),
(430,0,o),
(291,0,o),
(76,-6,q),
(76,-6,l)
);
},
{
closed = 1;
nodes = (
(481,777,o),
(498,772,qs),
(516,768,o),
(553,768,qs),
(698,768,o),
(840,903,o),
(840,1014,qs),
(840,1143,o),
(668,1280,o),
(500,1280,qs),
(482,1280,o),
(481,1262,qs),
(481,797,ls)
);
},
{
closed = 1;
nodes = (
(481,76,o),
(631,76,q),
(909,86,o),
(909,371,qs),
(909,510,o),
(723,672,o),
(506,674,q),
(481,672,o),
(481,639,qs),
(481,250,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 6 3 5 6 105 4 1 2 2 1 95 0 1 1 68 77 7 1 3 3 0 95 8 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 5 4 2 114 0 5 0 6 3 5 6 105 0 4 4 1 95 0 1 1 68 77 7 1 3 3 0 95 8 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 6 3 5 6 105 4 1 2 2 1 95 0 1 1 68 77 7 1 3 3 0 95 8 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 5 4 2 114 0 5 0 6 3 5 6 105 0 4 4 1 95 0 1 1 68 77 7 1 3 3 0 95 8 1 0 0 69 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
5 0 57 55 52 51 45 43 39 38 32 31 27 25 23 18 0 35 5 34 9 11 22 
CALL[ ]	/* CallFunction */";
};
width = 1298;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,960,o),
(465,1384,o),
(795,1384,qs),
(924,1384,o),
(1133,1341,qs),
(1188,1331,o),
(1239,1329,q),
(1272,1239,o),
(1280,1004,qs),
(1280,986,o),
(1188,979,o),
(1186,995,qs),
(1176,1106,o),
(1065,1239,o),
(897,1296,o),
(788,1296,qs),
(581,1296,o),
(328,961,o),
(328,705,qs),
(328,408,o),
(608,68,o),
(784,68,qs),
(1126,68,o),
(1225,344,qs),
(1231,362,o),
(1321,342,o),
(1321,322,qs),
(1317,265,o),
(1241,72,o),
(1217,37,q),
(1170,31,o),
(1128,16,q),
(974,-27,o),
(770,-27,qs),
(477,-27,o),
(55,352,o),
(55,647,q),
(55,647,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 3 3 68 77 0 2 2 4 97 0 4 4 74 77 0 1 1 0 97 0 0 0 75 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 4 2 4 3 2 128 0 2 2 4 97 0 4 4 74 77 0 1 1 0 97 0 0 0 75 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
34 24 36 42 34 5 11 27 
CALL[ ]	/* CallFunction */";
};
width = 1347;
}
);
note = C;
unicode = 67;
},
{
glyphname = Cacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (1378,0);
ref = acutecomb.case;
}
);
width = 1347;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (1427,0);
ref = uni030C.case;
}
);
width = 1347;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,-422,o),
(784,-524,o),
(686,-526,qs),
(561,-526,o),
(537,-465,q),
(531,-453,o),
(530,-436,qs),
(530,-393,o),
(565,-375,qs),
(577,-369,o),
(596,-369,qs),
(627,-369,o),
(713,-444,o),
(735,-444,qs),
(788,-444,o),
(788,-393,qs),
(788,-315,o),
(645,-252,qs),
(627,-244,o),
(627,-233,qs),
(627,-229,o),
(633,-221,qs),
(764,-27,l),
(475,-25,o),
(55,354,o),
(55,647,qs),
(55,960,o),
(465,1384,o),
(795,1384,qs),
(924,1384,o),
(1133,1341,qs),
(1188,1331,o),
(1239,1329,q),
(1272,1239,o),
(1280,1004,qs),
(1280,986,o),
(1188,979,o),
(1186,995,qs),
(1176,1106,o),
(1065,1239,o),
(897,1296,o),
(788,1296,qs),
(581,1296,o),
(328,961,o),
(328,705,qs),
(328,408,o),
(608,68,o),
(784,68,qs),
(1126,68,o),
(1225,344,qs),
(1231,362,o),
(1321,342,o),
(1321,322,qs),
(1317,265,o),
(1241,72,o),
(1217,37,q),
(1170,31,o),
(1128,16,q),
(1013,-17,o),
(872,-25,q),
(805,-119,ls),
(795,-133,o),
(795,-137,qs),
(795,-145,o),
(823,-162,q),
(946,-227,o),
(946,-336,q),
(946,-336,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 0 6 6 7 114 0 3 3 68 77 0 2 2 4 97 0 4 4 74 77 0 1 1 0 97 5 1 0 0 69 77 0 6 6 8 98 0 8 8 73 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 0 6 6 7 114 0 6 0 8 6 8 102 0 3 3 68 77 0 2 2 4 97 0 4 4 74 77 0 1 1 0 97 5 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 7 0 6 0 7 6 128 0 6 0 8 6 8 102 0 3 3 68 77 0 2 2 4 97 0 4 4 74 77 0 1 1 0 97 5 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 2 4 3 2 128 0 7 0 6 0 7 6 128 0 6 0 8 6 8 102 0 2 2 4 97 0 4 4 74 77 0 1 1 0 97 5 1 0 0 69 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
39 17 40 20 34 24 36 42 23 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1347;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Ccircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (1427,0);
ref = uni0302.case;
}
);
width = 1347;
}
);
note = Ccircumflex;
unicode = 264;
},
{
glyphname = Cdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (1252,507);
ref = uni0307;
}
);
width = 1347;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = D;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(52,1358,o),
(66,1358,qs),
(209,1352,o),
(399,1352,o),
(645,1358,o),
(719,1358,qs),
(1049,1358,o),
(1487,1020,o),
(1487,725,qs),
(1487,387,o),
(1090,-6,o),
(766,-6,qs),
(703,-6,o),
(414,0,o),
(207,0,o),
(76,-6,qs),
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
},
{
closed = 1;
nodes = (
(481,122,o),
(567,86,qs),
(606,72,o),
(698,72,qs),
(915,72,o),
(1214,412,o),
(1214,717,qs),
(1214,930,o),
(909,1280,o),
(637,1280,qs),
(557,1280,ls),
(481,1280,o),
(481,1200,qs),
(481,272,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 3 3 2 95 0 2 2 68 77 5 1 0 0 1 95 0 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 4 0 4 3 114 0 4 4 2 95 0 2 2 68 77 5 1 0 0 1 95 0 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 3 3 2 95 0 2 2 68 77 5 1 0 0 1 95 0 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 114 0 0 5 5 0 112 0 4 4 2 95 0 2 2 68 77 0 5 5 1 96 0 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 4 0 4 3 114 0 4 4 2 95 0 2 2 68 77 5 1 0 0 1 95 0 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 114 0 0 5 5 0 112 0 4 4 2 95 0 2 2 68 77 0 5 5 1 96 0 1 1 69 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 52 34 84 98 17 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1566;
}
);
note = D;
unicode = 68;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1487,387,o),
(1286,188,qs),
(1087,-9,o),
(766,-6,qs),
(657,-6,o),
(430,0,o),
(340,0,qs),
(174,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,594,ls),
(238,625,o),
(209,625,qs),
(29,625,ls),
(15,625,o),
(14,719,o),
(29,719,qs),
(209,719,ls),
(238,719,o),
(238,748,qs),
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(51,1358,o),
(66,1358,qs),
(209,1352,o),
(352,1352,qs),
(413,1352,o),
(614,1358,o),
(719,1358,qs),
(1022,1358,o),
(1229,1219,qs),
(1487,1044,o),
(1487,725,q),
(1487,725,l)
);
},
{
closed = 1;
nodes = (
(1214,893,o),
(1116,1040,qs),
(952,1280,o),
(637,1280,qs),
(557,1280,ls),
(481,1280,o),
(481,1200,qs),
(481,748,ls),
(481,719,o),
(508,719,qs),
(737,719,ls),
(749,719,o),
(752,625,o),
(737,625,qs),
(508,625,ls),
(481,625,o),
(481,594,qs),
(481,272,ls),
(481,122,o),
(567,86,qs),
(606,70,o),
(698,72,qs),
(911,72,o),
(1051,223,qs),
(1214,404,o),
(1214,717,q),
(1214,717,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
8 1 2 7 1 3 4 2 3 103 9 1 1 1 0 95 0 0 0 68 77 6 1 4 4 5 95 0 5 5 69 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 9 2 9 1 114 0 4 3 6 6 4 114 8 1 2 7 1 3 4 2 3 103 0 9 9 0 95 0 0 0 68 77 0 6 6 5 96 0 5 5 69 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
8 1 2 7 1 3 4 2 3 103 9 1 1 1 0 95 0 0 0 68 77 6 1 4 4 5 95 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 9 2 9 1 114 0 4 3 6 6 4 114 8 1 2 7 1 3 4 2 3 103 0 9 9 0 95 0 0 0 68 77 0 6 6 5 96 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
63 60 50 37 39 114 19 50 35 34 99 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1566;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Dcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (1386,0);
ref = uni030C.case;
}
);
width = 1566;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = Dcroat;
layers = (
{
layerId = m01;
shapes = (
{
ref = Eth;
}
);
width = 1566;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(52,1358,o),
(66,1358,qs),
(209,1352,o),
(521,1352,o),
(950,1358,o),
(1071,1358,qs),
(1128,1358,o),
(1128,1307,qs),
(1128,1001,ls),
(1128,984,o),
(1028,984,o),
(1028,1001,qs),
(1028,1130,o),
(930,1206,qs),
(869,1253,o),
(805,1255,qs),
(508,1266,ls),
(481,1266,o),
(481,1225,qs),
(481,717,ls),
(481,688,o),
(510,686,q),
(645,686,ls),
(768,686,o),
(768,778,qs),
(768,877,ls),
(768,891,o),
(872,891,o),
(872,877,q),
(866,809,o),
(866,481,o),
(872,420,q),
(872,406,o),
(768,403,o),
(768,420,qs),
(768,506,ls),
(768,594,o),
(645,594,qs),
(510,594,ls),
(481,594,o),
(481,563,qs),
(481,221,ls),
(481,143,o),
(555,106,qs),
(594,86,o),
(637,86,qs),
(860,90,ls),
(1018,92,o),
(1065,227,qs),
(1083,276,o),
(1083,344,qs),
(1083,360,o),
(1186,360,o),
(1186,344,qs),
(1186,57,ls),
(1186,-6,o),
(1067,-6,qs),
(881,-6,o),
(535,0,o),
(211,0,o),
(76,-6,qs),
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
54 37 2 4 5 31 12 2 0 3 2 76 0 4 0 3 0 4 3 105 7 1 5 5 6 95 0 6 6 68 77 2 1 0 0 1 95 0 1 1 69 1 78 34 88 51 61 53 56 98 17 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1249;
}
);
note = E;
unicode = 69;
},
{
glyphname = Eacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1229,0);
ref = acutecomb.case;
}
);
width = 1249;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ebreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1086,507);
ref = uni0306;
}
);
width = 1249;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = Ecaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1278,0);
ref = uni030C.case;
}
);
width = 1249;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = Ecircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1278,0);
ref = uni0302.case;
}
);
width = 1249;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1246,0);
ref = uni0308.case;
}
);
width = 1249;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1103,507);
ref = uni0307;
}
);
width = 1249;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = Egrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1089,0);
ref = gravecomb.case;
}
);
width = 1249;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Emacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1267,0);
ref = uni0304.case;
}
);
width = 1249;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = Eogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(51,1358,o),
(66,1358,qs),
(209,1352,o),
(365,1352,qs),
(521,1352,o),
(950,1358,o),
(1071,1358,qs),
(1128,1358,o),
(1128,1307,qs),
(1128,1001,ls),
(1128,985,o),
(1028,983,o),
(1028,1001,qs),
(1028,1130,o),
(930,1206,qs),
(869,1253,o),
(805,1255,qs),
(508,1266,ls),
(481,1266,o),
(481,1225,qs),
(481,717,ls),
(481,688,o),
(510,686,q),
(645,686,ls),
(768,686,o),
(768,778,qs),
(768,877,ls),
(768,891,o),
(872,891,o),
(872,877,q),
(866,809,o),
(866,481,o),
(872,420,q),
(872,406,o),
(768,403,o),
(768,420,qs),
(768,506,ls),
(768,594,o),
(645,594,qs),
(510,594,ls),
(481,594,o),
(481,563,qs),
(481,221,ls),
(481,143,o),
(555,106,qs),
(594,86,o),
(637,86,qs),
(860,90,ls),
(1018,92,o),
(1065,227,qs),
(1083,276,o),
(1083,344,qs),
(1083,360,o),
(1186,360,o),
(1186,344,qs),
(1186,57,ls),
(1186,-6,o),
(1067,-6,qs),
(1001,-6,l),
(882,-143,o),
(883,-246,qs),
(883,-367,o),
(1006,-367,qs),
(1067,-367,o),
(1110,-336,q),
(1130,-342,o),
(1128,-375,q),
(1052,-488,o),
(911,-487,qs),
(706,-487,o),
(707,-303,qs),
(707,-164,o),
(883,-6,q),
(795,-6,o),
(709,-4,qs),
(535,0,o),
(373,0,qs),
(211,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
71 54 2 7 8 48 29 2 0 6 19 1 3 1 17 1 2 3 4 76 0 7 0 6 0 7 6 105 0 3 0 2 3 2 101 10 1 8 8 9 95 0 9 9 68 77 5 1 0 0 1 97 4 1 1 1 69 1 78 86 84 82 76 51 61 53 56 35 36 35 114 17 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1249;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = F;
kernRight = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(52,1358,o),
(66,1358,qs),
(209,1352,o),
(497,1352,o),
(942,1358,o),
(1069,1358,qs),
(1128,1358,o),
(1128,1307,qs),
(1128,1001,ls),
(1128,984,o),
(1028,984,o),
(1028,1001,qs),
(1028,1114,o),
(885,1251,o),
(805,1255,qs),
(590,1265,o),
(508,1266,qs),
(481,1266,o),
(481,1225,qs),
(481,756,ls),
(481,725,o),
(510,725,qs),
(645,725,ls),
(737,725,o),
(737,815,qs),
(737,952,ls),
(737,967,o),
(842,967,o),
(842,952,q),
(836,884,o),
(836,469,o),
(842,399,q),
(842,386,o),
(737,386,o),
(737,399,qs),
(737,543,ls),
(737,631,o),
(645,633,qs),
(510,633,ls),
(481,633,o),
(481,602,qs),
(481,203,ls),
(481,86,o),
(635,86,qs),
(648,86,o),
(648,-6,o),
(635,-6,qs),
(541,0,o),
(180,0,o),
(76,-6,qs),
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
43 26 2 4 5 20 1 0 3 2 76 0 4 0 3 0 4 3 105 7 1 5 5 6 95 0 6 6 68 77 2 1 0 0 1 95 0 1 1 69 1 78 34 87 67 61 51 34 66 17 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1189;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = C;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(905,563,o),
(1331,563,o),
(1391,569,q),
(1404,569,o),
(1404,477,o),
(1391,477,qs),
(1282,477,o),
(1282,401,qs),
(1282,160,ls),
(1282,115,o),
(1325,115,qs),
(1339,115,o),
(1339,35,o),
(1325,35,qs),
(1276,35,o),
(903,-27,o),
(770,-27,qs),
(508,-27,o),
(307,127,qs),
(55,326,o),
(55,647,qs),
(55,913,o),
(207,1110,qs),
(420,1384,o),
(795,1384,qs),
(926,1384,o),
(1112,1348,q),
(1182,1330,o),
(1239,1329,q),
(1268,1270,o),
(1278,1055,qs),
(1280,1004,ls),
(1280,986,o),
(1190,979,o),
(1186,995,q),
(1168,1204,o),
(975,1270,qs),
(895,1296,o),
(788,1296,qs),
(581,1296,o),
(328,961,o),
(328,705,qs),
(328,381,o),
(629,68,o),
(784,68,qs),
(895,68,o),
(1038,117,o),
(1038,160,qs),
(1038,401,ls),
(1038,477,o),
(926,477,qs),
(846,477,ls),
(832,477,o),
(832,569,o),
(846,569,q),
(846,569,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 8 1 0 7 9 0 105 0 7 0 6 5 7 6 105 0 3 3 68 77 0 2 2 4 97 0 4 4 74 77 0 1 1 5 97 0 5 5 75 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 2 4 3 2 128 0 9 8 1 0 7 9 0 105 0 7 0 6 5 7 6 105 0 2 2 4 97 0 4 4 74 77 0 1 1 5 97 0 5 5 75 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
54 53 19 34 17 38 34 25 36 36 50 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1441;
}
);
note = G;
unicode = 71;
},
{
glyphname = Gbreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (1232,507);
ref = uni0306;
}
);
width = 1441;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = Gcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (1424,0);
ref = uni030C.case;
}
);
width = 1441;
}
);
note = Gcaron;
unicode = 486;
},
{
glyphname = Gcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (1424,0);
ref = uni0302.case;
}
);
width = 1441;
}
);
note = Gcircumflex;
unicode = 284;
},
{
glyphname = uni0122;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,-422,o),
(858,-477,qs),
(784,-524,o),
(686,-526,qs),
(561,-526,o),
(537,-465,q),
(531,-453,o),
(530,-436,qs),
(530,-393,o),
(565,-375,qs),
(577,-369,o),
(596,-369,qs),
(627,-369,o),
(670,-408,qs),
(713,-445,o),
(735,-444,qs),
(788,-444,o),
(788,-393,qs),
(788,-315,o),
(645,-252,qs),
(625,-244,o),
(627,-233,q),
(627,-229,o),
(633,-221,qs),
(764,-27,l),
(506,-27,o),
(307,127,qs),
(53,326,o),
(55,647,qs),
(55,913,o),
(207,1110,qs),
(420,1384,o),
(795,1384,qs),
(926,1384,o),
(1112,1348,q),
(1182,1330,o),
(1239,1329,q),
(1268,1270,o),
(1278,1055,qs),
(1280,1004,ls),
(1280,986,o),
(1237,981,q),
(1190,979,o),
(1186,995,q),
(1168,1204,o),
(975,1270,qs),
(895,1297,o),
(788,1296,qs),
(581,1296,o),
(328,961,o),
(328,705,qs),
(328,381,o),
(500,203,qs),
(629,68,o),
(784,68,qs),
(895,68,o),
(977,92,q),
(1038,117,o),
(1038,160,qs),
(1038,401,ls),
(1038,479,o),
(926,477,qs),
(846,477,ls),
(832,477,o),
(831,569,o),
(846,569,q),
(905,563,o),
(1163,563,qs),
(1331,563,o),
(1391,569,q),
(1403,569,o),
(1405,477,o),
(1391,477,qs),
(1282,477,o),
(1282,401,qs),
(1282,160,ls),
(1282,115,o),
(1325,115,qs),
(1339,115,o),
(1339,76,qs),
(1339,35,o),
(1325,35,qs),
(1276,35,o),
(981,-14,o),
(874,-23,q),
(805,-119,ls),
(797,-131,o),
(795,-135,q),
(795,-145,o),
(823,-162,q),
(946,-227,o),
(946,-336,q),
(946,-336,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
26 1 3 7 12 1 5 1 84 1 11 12 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 12 10 11 11 12 114 0 3 4 1 2 1 3 2 105 0 1 0 0 10 1 0 105 0 6 6 9 97 0 9 9 74 77 0 7 7 8 97 0 8 8 68 77 0 5 5 10 97 0 10 10 75 77 0 11 11 13 98 0 13 13 73 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 10 11 11 12 114 0 3 4 1 2 1 3 2 105 0 1 0 0 10 1 0 105 0 11 0 13 11 13 102 0 6 6 9 97 0 9 9 74 77 0 7 7 8 97 0 8 8 68 77 0 5 5 10 97 0 10 10 75 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 12 10 11 10 12 11 128 0 8 0 7 3 8 7 105 0 3 4 1 2 1 3 2 105 0 1 0 0 10 1 0 105 0 11 0 13 11 13 102 0 6 6 9 97 0 9 9 74 77 0 5 5 10 97 0 10 10 75 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
89 87 80 79 77 75 67 66 60 58 21 20 37 37 51 36 19 35 25 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1441;
}
);
note = uni0122;
unicode = 290;
},
{
glyphname = Gdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (1249,507);
ref = uni0307;
}
);
width = 1441;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = uni021C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,209,o),
(647,68,qs),
(444,-38,o),
(137,-39,qs),
(123,-39,o),
(123,55,o),
(137,55,qs),
(373,55,o),
(520,182,qs),
(651,295,o),
(651,444,qs),
(651,567,o),
(588,629,qs),
(549,666,o),
(494,666,qs),
(433,666,o),
(328,600,q),
(305,588,ls),
(285,578,o),
(264,618,qs),
(248,647,o),
(262,655,qs),
(365,719,ls),
(506,805,o),
(549,874,qs),
(598,952,o),
(598,1051,qs),
(598,1139,o),
(545,1200,qs),
(500,1251,o),
(430,1251,qs),
(194,1251,o),
(195,946,qs),
(195,932,o),
(90,932,o),
(90,946,qs),
(90,1341,ls),
(90,1355,o),
(195,1356,o),
(195,1341,qs),
(195,1298,o),
(225,1296,qs),
(243,1296,o),
(301,1327,qs),
(412,1384,o),
(508,1384,qs),
(627,1384,o),
(725,1323,qs),
(844,1245,o),
(842,1122,qs),
(842,952,o),
(707,809,qs),
(695,797,o),
(694,791,q),
(694,779,o),
(719,768,qs),
(924,678,o),
(922,504,q),
(922,504,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
18 1 1 0 22 1 3 2 2 76 0 3 2 4 2 3 4 128 0 1 0 2 3 1 2 106 0 0 0 74 77 0 4 4 5 97 0 5 5 75 5 78 34 22 46 41 34 43 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 999;
}
);
note = uni021C;
unicode = 540;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1432,86,o),
(1591,86,qs),
(1606,86,o),
(1606,-6,o),
(1591,-6,qs),
(1464,0,o),
(1159,0,o),
(1026,-6,qs),
(1012,-6,o),
(1012,86,o),
(1026,86,qs),
(1188,86,o),
(1188,203,qs),
(1188,618,ls),
(1188,653,o),
(1153,653,qs),
(516,653,ls),
(481,653,o),
(481,618,qs),
(481,203,ls),
(481,86,o),
(639,86,qs),
(653,86,o),
(653,-6,o),
(639,-6,qs),
(506,0,o),
(200,0,o),
(76,-6,qs),
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(62,1364,o),
(76,1364,q),
(123,1359,o),
(596,1359,o),
(643,1364,q),
(658,1364,o),
(658,1270,o),
(643,1270,qs),
(481,1270,o),
(481,1153,qs),
(481,782,ls),
(481,748,o),
(516,748,qs),
(1153,748,ls),
(1188,748,o),
(1188,782,qs),
(1188,1153,ls),
(1188,1270,o),
(1028,1270,qs),
(1014,1270,o),
(1014,1364,o),
(1028,1364,q),
(1073,1358,o),
(1549,1358,o),
(1595,1364,q),
(1610,1364,o),
(1610,1270,o),
(1595,1270,qs),
(1432,1270,o),
(1432,1153,qs),
(1432,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
28 8 2 1 74 0 3 0 10 7 3 10 103 6 4 2 3 0 0 1 97 5 1 1 1 68 77 13 11 9 3 7 7 8 95 12 1 8 8 69 8 78 66 64 62 58 56 55 52 49 46 44 66 19 35 20 19 51 35 20 17 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1685;
}
);
note = H;
unicode = 72;
},
{
glyphname = Hbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1432,86,o),
(1591,86,qs),
(1605,86,o),
(1606,-6,o),
(1591,-6,qs),
(1464,0,o),
(1313,0,qs),
(1159,0,o),
(1026,-6,qs),
(1012,-6,o),
(1012,86,o),
(1026,86,qs),
(1188,86,o),
(1188,203,qs),
(1188,618,ls),
(1188,653,o),
(1153,653,qs),
(516,653,ls),
(481,653,o),
(481,618,qs),
(481,203,ls),
(479,86,o),
(639,86,qs),
(653,86,o),
(653,41,qs),
(651,-6,o),
(639,-6,qs),
(506,0,o),
(354,0,qs),
(200,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,952,l),
(170,952,ls),
(152,952,o),
(152,1053,o),
(170,1053,qs),
(238,1053,l),
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(61,1364,o),
(76,1364,qs),
(123,1360,o),
(360,1358,qs),
(596,1358,o),
(643,1364,q),
(657,1364,o),
(657,1270,o),
(643,1270,qs),
(479,1270,o),
(481,1153,qs),
(481,1053,l),
(1188,1053,l),
(1188,1153,ls),
(1188,1270,o),
(1028,1270,qs),
(1014,1270,o),
(1014,1364,o),
(1028,1364,q),
(1071,1360,o),
(1311,1358,qs),
(1549,1358,o),
(1595,1364,q),
(1609,1364,o),
(1610,1270,o),
(1595,1270,qs),
(1431,1270,o),
(1432,1153,qs),
(1432,1053,l),
(1511,1053,ls),
(1531,1053,o),
(1532,952,o),
(1509,952,qs),
(1432,952,l),
(1432,203,ls)
);
},
{
closed = 1;
nodes = (
(481,952,l),
(481,782,ls),
(481,747,o),
(516,748,qs),
(1153,748,ls),
(1188,748,o),
(1188,782,qs),
(1188,952,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
55 1 12 11 1 76 9 5 2 1 19 10 2 0 18 1 0 105 0 18 0 14 11 18 14 103 8 6 4 3 2 2 3 97 7 1 3 3 68 77 17 15 13 3 11 11 12 95 16 1 12 12 69 12 78 88 87 85 82 79 77 75 70 68 67 64 61 58 56 53 48 46 45 43 41 39 38 35 36 18 18 35 36 18 33 32 20 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1685;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = Hcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (1486,0);
ref = uni0302.case;
}
);
width = 1685;
}
);
note = Hcircumflex;
unicode = 292;
},
{
glyphname = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(62,1364,o),
(76,1364,q),
(123,1358,o),
(596,1358,o),
(643,1364,q),
(657,1364,o),
(657,1270,o),
(643,1270,qs),
(481,1270,o),
(481,1153,qs),
(481,203,ls),
(481,86,o),
(639,86,qs),
(653,86,o),
(653,-6,o),
(639,-6,qs),
(506,0,o),
(200,0,o),
(76,-6,q),
(76,-6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
17 1 3 74 4 1 2 2 3 97 0 3 3 68 77 5 1 1 1 0 95 6 1 0 0 69 0 78 3 0 25 24 21 19 16 15 11 10 7 5 0 28 3 27 7 11 22 
CALL[ ]	/* CallFunction */";
};
width = 733;
}
);
note = I;
unicode = 73;
},
{
glyphname = IJ;
layers = (
{
layerId = m01;
shapes = (
{
pos = (733,0);
ref = J;
},
{
ref = I;
}
);
width = 1449;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (961,0);
ref = acutecomb.case;
}
);
width = 733;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Ibreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (818,507);
ref = uni0306;
}
);
width = 733;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = Icircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (1010,0);
ref = uni0302.case;
}
);
width = 733;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (978,0);
ref = uni0308.case;
}
);
width = 733;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Idotaccent;
layers = (
{
layerId = m01;
shapes = (
{
pos = (115,465);
ref = dotaccent;
},
{
ref = I;
}
);
width = 733;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = Igrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (821,0);
ref = gravecomb.case;
}
);
width = 733;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Imacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (999,0);
ref = uni0304.case;
}
);
width = 733;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,-189,o),
(558,10,q),
(659,10,l),
(475,-174,o),
(474,-301,qs),
(474,-422,o),
(597,-422,qs),
(658,-422,o),
(700,-391,q),
(720,-397,o),
(720,-430,q),
(644,-543,o),
(503,-543,qs),
(298,-543,o),
(298,-359,q),
(298,-359,l)
);
},
{
closed = 1;
nodes = (
(76,-6,l),
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(62,1364,o),
(76,1364,q),
(123,1358,o),
(596,1358,o),
(643,1364,q),
(657,1364,o),
(657,1270,o),
(643,1270,qs),
(481,1270,o),
(481,1153,qs),
(481,203,ls),
(481,86,o),
(639,86,qs),
(653,86,o),
(653,-6,o),
(639,-6,qs),
(506,0,o),
(200,0,o),
(76,-6,q),
(76,-6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
6 1 1 3 4 1 0 1 2 76 33 1 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 4 3 4 2 114 7 1 5 5 6 97 0 6 6 68 77 8 1 4 4 3 95 9 1 3 3 69 77 0 1 1 0 97 0 0 0 73 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 4 3 4 2 3 128 7 1 5 5 6 97 0 6 6 68 77 8 1 4 4 3 95 9 1 3 3 69 77 0 1 1 0 97 0 0 0 73 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
19 16 41 40 37 35 32 31 27 26 23 21 16 45 19 43 19 36 33 10 11 25 
CALL[ ]	/* CallFunction */";
};
width = 733;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Itilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (851,507);
ref = tildecomb;
}
);
width = 733;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = J;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-131,-216,o),
(-48,-158,o),
(8,-158,qs),
(82,-158,o),
(137,-215,qs),
(162,-242,o),
(174,-276,q),
(207,-251,o),
(231,-195,q),
(256,-107,o),
(256,254,qs),
(256,1153,ls),
(256,1270,o),
(86,1270,qs),
(72,1270,o),
(72,1364,o),
(86,1364,q),
(133,1359,o),
(627,1359,o),
(674,1364,q),
(688,1364,o),
(688,1270,o),
(674,1270,qs),
(502,1270,o),
(502,1153,qs),
(502,629,ls),
(502,523,o),
(492,195,q),
(492,-33,o),
(332,-299,o),
(205,-371,qs),
(119,-418,o),
(33,-420,qs),
(-18,-420,o),
(-131,-344,o),
(-131,-276,q),
(-131,-276,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
29 1 0 4 1 76 19 1 2 74 0 4 0 0 4 0 101 3 1 1 1 2 97 0 2 2 68 1 78 41 35 20 24 34 5 11 27 
CALL[ ]	/* CallFunction */";
};
width = 716;
}
);
note = J;
unicode = 74;
},
{
glyphname = Jcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = J;
},
{
pos = (1001,0);
ref = uni0302.case;
}
);
width = 716;
}
);
note = Jcircumflex;
unicode = 308;
},
{
glyphname = K;
kernRight = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1223,100,o),
(1323,88,qs),
(1346,86,o),
(1382,86,qs),
(1397,86,o),
(1397,-6,o),
(1382,-6,qs),
(1249,0,o),
(944,0,o),
(805,-6,qs),
(791,-6,o),
(791,86,o),
(805,86,qs),
(889,86,o),
(889,125,qs),
(889,152,o),
(848,203,qs),
(590,524,ls),
(527,598,o),
(481,598,o),
(481,569,qs),
(481,203,ls),
(481,86,o),
(637,86,qs),
(650,86,o),
(650,-6,o),
(637,-6,qs),
(504,0,o),
(200,0,o),
(76,-6,qs),
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,1153,ls),
(238,1270,o),
(66,1270,qs),
(51,1270,o),
(51,1364,o),
(66,1364,q),
(113,1358,o),
(594,1358,o),
(641,1364,q),
(655,1364,o),
(655,1270,o),
(641,1270,qs),
(481,1270,o),
(481,1153,qs),
(481,797,ls),
(481,770,o),
(498,770,qs),
(527,770,o),
(573,825,qs),
(850,1155,ls),
(903,1218,o),
(903,1270,o),
(842,1270,qs),
(829,1270,o),
(829,1364,o),
(842,1364,q),
(891,1359,o),
(1190,1359,o),
(1237,1364,q),
(1251,1364,o),
(1251,1270,o),
(1237,1270,qs),
(1149,1270,o),
(1063,1229,o),
(1024,1186,qs),
(686,793,ls),
(672,775,o),
(672,742,o),
(686,725,qs),
(1145,190,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
24 1 3 0 1 76 33 13 2 1 74 0 3 0 10 7 3 10 105 6 4 2 3 0 0 1 97 5 1 1 1 68 77 13 11 9 3 7 7 8 95 12 1 8 8 69 8 78 71 69 67 63 61 60 55 54 51 49 66 19 35 20 20 20 35 20 22 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1380;
}
);
note = K;
unicode = 75;
},
{
glyphname = uni0136;
layers = (
{
layerId = m01;
shapes = (
{
pos = (369,0);
ref = uniF1A0;
},
{
ref = K;
}
);
width = 1380;
}
);
note = uni0136;
unicode = 310;
},
{
glyphname = L;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,139,o),
(549,96,q),
(584,78,o),
(623,78,qs),
(954,90,ls),
(1030,92,o),
(1098,172,qs),
(1180,276,o),
(1180,391,qs),
(1180,409,o),
(1280,409,o),
(1280,391,qs),
(1280,57,ls),
(1280,14,o),
(1266,4,q),
(1258,-6,o),
(1163,-6,qs),
(977,-6,o),
(463,0,o),
(282,0,o),
(76,-6,qs),
(61,-6,o),
(61,86,o),
(76,86,qs),
(238,86,o),
(238,213,qs),
(238,1153,ls),
(238,1270,o),
(66,1270,qs),
(51,1270,o),
(51,1364,o),
(66,1364,q),
(113,1359,o),
(588,1359,o),
(637,1364,q),
(650,1364,o),
(650,1270,o),
(637,1270,qs),
(481,1270,o),
(481,1153,qs),
(481,250,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
28 1 3 0 1 76 8 1 1 74 2 1 0 0 1 97 0 1 1 68 77 5 1 3 3 4 95 0 4 4 69 4 78 58 98 19 35 20 17 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1357;
}
);
note = L;
unicode = 76;
},
{
glyphname = Lacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (956,0);
ref = acutecomb.case;
}
);
width = 1357;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = Lcaron;
layers = (
{
layerId = m01;
shapes = (
{
pos = (283,0);
ref = caron.alt;
},
{
ref = L;
}
);
width = 1357;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = uni013B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,139,o),
(549,96,qs),
(584,76,o),
(623,78,qs),
(954,90,ls),
(1030,92,o),
(1098,172,qs),
(1180,276,o),
(1180,391,qs),
(1180,409,o),
(1280,410,o),
(1280,391,qs),
(1280,57,ls),
(1280,14,o),
(1266,4,q),
(1258,-8,o),
(1163,-6,qs),
(979,-6,o),
(711,-2,q),
(635,-106,ls),
(627,-118,o),
(625,-125,q),
(625,-135,o),
(653,-150,qs),
(778,-216,o),
(776,-324,qs),
(776,-410,o),
(688,-467,qs),
(614,-514,o),
(516,-514,qs),
(391,-514,o),
(367,-453,q),
(361,-441,o),
(360,-424,qs),
(360,-381,o),
(395,-362,qs),
(407,-356,o),
(426,-356,qs),
(457,-356,o),
(500,-395,qs),
(543,-432,o),
(565,-432,qs),
(618,-432,o),
(618,-381,qs),
(618,-303,o),
(475,-240,qs),
(455,-232,o),
(457,-221,q),
(457,-217,o),
(463,-209,qs),
(602,-2,l),
(436,0,o),
(354,0,qs),
(282,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,213,qs),
(238,1153,ls),
(238,1270,o),
(66,1270,qs),
(52,1270,o),
(51,1364,o),
(66,1364,qs),
(113,1360,o),
(352,1358,qs),
(588,1358,o),
(637,1364,q),
(651,1364,o),
(649,1270,o),
(637,1270,qs),
(481,1270,o),
(481,1153,qs),
(481,250,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
63 1 3 0 41 1 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 4 5 5 6 114 2 1 0 0 1 97 0 1 1 68 77 9 1 3 3 4 95 8 1 4 4 69 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 5 5 6 114 0 5 0 7 5 7 102 2 1 0 0 1 97 0 1 1 68 77 9 1 3 3 4 95 8 1 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 4 5 4 6 5 128 0 5 0 7 5 7 102 2 1 0 0 1 97 0 1 1 68 77 9 1 3 3 4 95 8 1 4 4 69 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
72 69 58 39 18 40 82 19 35 36 17 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1357;
}
);
note = uni013B;
unicode = 315;
},
{
glyphname = Ldot;
layers = (
{
layerId = m01;
shapes = (
{
pos = (682,219);
ref = periodcentered;
},
{
ref = L;
}
);
width = 1357;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1280,14,o),
(1266,4,q),
(1241,-8,o),
(1163,-6,qs),
(995,-6,o),
(590,0,o),
(465,0,qs),
(340,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,213,qs),
(238,483,l),
(59,373,ls),
(39,361,o),
(4,420,qs),
(-12,449,o),
(-10,465,qs),
(-10,475,o),
(-6,477,qs),
(238,631,l),
(238,1153,ls),
(238,1270,o),
(66,1270,qs),
(52,1270,o),
(51,1364,o),
(66,1364,qs),
(113,1360,o),
(350,1358,qs),
(588,1358,o),
(637,1364,q),
(651,1364,o),
(649,1270,o),
(637,1270,qs),
(481,1270,o),
(481,1153,qs),
(481,782,l),
(733,940,ls),
(751,952,o),
(817,848,o),
(799,836,qs),
(481,637,l),
(481,250,ls),
(481,187,o),
(518,115,o),
(578,76,o),
(623,78,qs),
(954,90,ls),
(1030,92,o),
(1130,215,o),
(1180,324,o),
(1180,391,qs),
(1180,409,o),
(1280,410,o),
(1280,391,qs),
(1280,57,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
42 34 18 13 0 5 0 1 1 76 3 1 1 1 2 97 0 2 2 68 77 4 1 0 0 5 95 0 5 5 69 5 78 114 28 35 36 27 54 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1357;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1610,86,o),
(1769,86,qs),
(1784,86,o),
(1784,-6,o),
(1769,-6,qs),
(1642,0,o),
(1362,0,o),
(1221,-6,qs),
(1206,-6,o),
(1206,86,o),
(1221,86,qs),
(1374,86,o),
(1374,209,qs),
(1368,877,ls),
(1368,897,o),
(1354,897,o),
(1346,881,qs),
(895,4,ls),
(883,-18,o),
(842,-18,o),
(834,4,q),
(375,969,ls),
(365,989,o),
(352,989,o),
(348,963,q),
(299,207,l),
(299,174,ls),
(299,86,o),
(469,86,qs),
(482,86,o),
(482,-6,o),
(469,-6,qs),
(336,0,o),
(103,0,o),
(41,-6,q),
(27,-6,o),
(27,86,o),
(41,86,qs),
(188,86,o),
(193,211,q),
(254,1116,l),
(254,1161,ls),
(254,1270,o),
(80,1270,qs),
(68,1270,o),
(68,1364,o),
(80,1364,qs),
(162,1358,o),
(254,1358,qs),
(350,1358,ls),
(416,1358,o),
(469,1270,q),
(907,356,ls),
(917,336,o),
(946,336,o),
(958,358,qs),
(1427,1276,ls),
(1470,1358,o),
(1538,1358,qs),
(1591,1358,ls),
(1695,1358,o),
(1755,1364,q),
(1769,1364,o),
(1769,1270,o),
(1755,1270,qs),
(1651,1270,o),
(1597,1182,o),
(1597,1124,qs),
(1608,209,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
54 43 2 2 0 1 76 21 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 5 0 2 5 128 4 1 0 0 1 97 3 1 1 1 68 77 11 9 7 3 5 5 6 97 10 8 2 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 5 0 2 5 128 4 1 0 0 1 97 3 1 1 1 68 77 11 9 7 3 5 5 6 97 10 1 6 6 69 77 0 8 8 69 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 5 0 2 5 128 4 1 0 0 1 97 3 1 1 1 68 77 11 9 7 3 5 5 6 97 10 8 2 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 5 0 2 5 128 4 1 0 0 1 97 3 1 1 1 68 77 11 9 7 3 5 5 6 97 10 1 6 6 69 77 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
67 65 63 59 57 56 24 34 36 20 35 51 19 52 18 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1814;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1288,-20,o),
(1257,-20,qs),
(1230,-20,o),
(1184,37,qs),
(360,1014,l),
(348,1030,o),
(342,1030,qs),
(330,1030,o),
(328,1008,q),
(328,203,ls),
(328,86,o),
(479,86,qs),
(493,86,o),
(494,-8,o),
(479,-6,qs),
(387,0,o),
(279,0,qs),
(177,0,o),
(66,-6,q),
(52,-8,o),
(51,86,o),
(66,86,qs),
(226,86,o),
(223,203,qs),
(223,1155,ls),
(223,1270,o),
(51,1270,qs),
(39,1270,o),
(39,1364,o),
(51,1364,qs),
(100,1360,o),
(227,1358,qs),
(311,1358,o),
(326,1356,qs),
(385,1348,o),
(426,1298,qs),
(1137,432,l),
(1147,418,o),
(1161,418,qs),
(1186,418,o),
(1186,449,qs),
(1186,1151,ls),
(1186,1270,o),
(1032,1270,qs),
(1018,1270,o),
(1018,1364,o),
(1032,1364,qs),
(1134,1360,o),
(1231,1358,qs),
(1331,1358,o),
(1423,1364,qs),
(1437,1364,o),
(1438,1270,o),
(1423,1270,qs),
(1288,1270,o),
(1288,1151,qs),
(1288,76,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 3 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 0 3 6 128 5 2 2 0 0 1 97 4 1 1 1 68 77 8 1 6 6 7 97 9 1 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 6 0 3 6 128 5 2 2 0 0 1 97 4 1 1 1 68 77 8 1 6 6 7 95 0 7 7 69 77 0 9 9 69 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 0 3 6 128 5 2 2 0 0 1 97 4 1 1 1 68 77 8 1 6 6 7 97 9 1 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 6 0 3 6 128 5 2 2 0 0 1 97 4 1 1 1 68 77 8 1 6 6 7 95 0 7 7 69 77 0 9 9 69 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
55 53 34 82 19 35 53 19 34 82 17 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1480;
}
);
note = N;
unicode = 78;
},
{
glyphname = Nacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (1334,0);
ref = acutecomb.case;
}
);
width = 1480;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (1383,0);
ref = uni030C.case;
}
);
width = 1480;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = uni0145;
layers = (
{
layerId = m01;
shapes = (
{
pos = (424,0);
ref = uniF1A0;
},
{
ref = N;
}
);
width = 1480;
}
);
note = uni0145;
unicode = 325;
},
{
glyphname = Eng;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1288,63,l),
(1286,-111,ls),
(1286,-228,o),
(1169,-420,o),
(1038,-518,o),
(926,-518,qs),
(867,-518,o),
(795,-451,o),
(795,-403,qs),
(795,-376,o),
(813,-342,o),
(854,-313,o),
(893,-313,qs),
(946,-313,o),
(1020,-385,o),
(1034,-385,qs),
(1073,-385,o),
(1178,-229,o),
(1178,-135,qs),
(1178,43,l),
(360,1014,ls),
(348,1030,o),
(342,1030,qs),
(330,1030,o),
(328,1008,q),
(328,203,ls),
(328,86,o),
(479,86,qs),
(493,86,o),
(494,-8,o),
(479,-6,q),
(375,0,o),
(279,0,qs),
(177,0,o),
(66,-6,q),
(52,-8,o),
(51,86,o),
(66,86,qs),
(226,86,o),
(223,203,qs),
(223,1155,ls),
(223,1270,o),
(51,1270,qs),
(39,1270,o),
(39,1364,o),
(51,1364,qs),
(100,1360,o),
(227,1358,qs),
(311,1358,o),
(326,1356,qs),
(385,1348,o),
(426,1298,qs),
(1137,432,l),
(1147,418,o),
(1161,418,qs),
(1186,418,o),
(1186,449,qs),
(1186,1151,ls),
(1186,1270,o),
(1032,1270,qs),
(1018,1270,o),
(1018,1364,o),
(1032,1364,qs),
(1134,1360,o),
(1231,1358,qs),
(1331,1358,o),
(1423,1364,qs),
(1437,1364,o),
(1438,1270,o),
(1423,1270,qs),
(1288,1270,o),
(1288,1151,qs),
(1288,76,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 3 0 52 1 7 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 6 0 3 6 128 0 9 10 11 10 9 11 128 5 2 2 0 0 1 97 4 1 1 1 68 77 8 1 6 6 7 95 0 7 7 69 77 0 10 10 11 97 0 11 11 73 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 0 3 6 128 0 9 10 11 10 9 11 128 0 10 0 11 10 11 101 5 2 2 0 0 1 97 4 1 1 1 68 77 8 1 6 6 7 95 0 7 7 69 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
67 65 60 58 56 55 34 82 19 35 53 19 34 82 17 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1480;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = Ntilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (1224,507);
ref = tildecomb;
}
);
width = 1480;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = O;
kernLeft = C;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1430,445,o),
(1284,246,qs),
(1081,-26,o),
(741,-27,qs),
(516,-27,o),
(336,96,qs),
(55,291,o),
(55,668,qs),
(55,920,o),
(231,1141,qs),
(426,1385,o),
(745,1384,qs),
(991,1384,o),
(1171,1231,qs),
(1430,1006,o),
(1430,664,q),
(1430,664,l)
);
},
{
closed = 1;
nodes = (
(1157,905,o),
(1032,1087,qs),
(891,1298,o),
(739,1296,qs),
(585,1296,o),
(473,1167,qs),
(328,1001,o),
(328,725,qs),
(328,422,o),
(481,229,qs),
(610,67,o),
(756,68,qs),
(1020,68,o),
(1112,346,qs),
(1157,477,o),
(1157,649,q),
(1157,649,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 3 3 0 97 0 0 0 74 77 0 2 2 1 97 0 1 1 75 1 78 38 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 1523;
}
);
note = O;
unicode = 79;
},
{
glyphname = Oacute;
kernLeft = C;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1356,0);
ref = acutecomb.case;
}
);
width = 1523;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Obreve;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1213,507);
ref = uni0306;
}
);
width = 1523;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = Ocircumflex;
kernLeft = C;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1405,0);
ref = uni0302.case;
}
);
width = 1523;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Odieresis;
kernLeft = C;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1373,0);
ref = uni0308.case;
}
);
width = 1523;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = Ograve;
kernLeft = C;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1216,0);
ref = gravecomb.case;
}
);
width = 1523;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Ohungarumlaut;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1319,0);
ref = uni030B.case;
}
);
width = 1523;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = Omacron;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1394,0);
ref = uni0304.case;
}
);
width = 1523;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = uni01EA;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1157,905,o),
(891,1296,o),
(739,1296,qs),
(577,1296,o),
(328,991,o),
(328,725,qs),
(328,430,o),
(602,68,o),
(756,68,qs),
(877,68,o),
(1051,184,o),
(1157,456,o),
(1157,649,q),
(1157,649,l)
);
},
{
closed = 1;
nodes = (
(1430,445,o),
(1159,70,o),
(737,-80,o),
(737,-246,qs),
(737,-367,o),
(860,-367,qs),
(921,-367,o),
(965,-336,q),
(985,-342,o),
(983,-375,q),
(907,-488,o),
(768,-487,q),
(563,-473,o),
(561,-303,qs),
(561,-153,o),
(741,-27,q),
(520,-27,o),
(195,188,o),
(55,483,o),
(55,668,qs),
(55,920,o),
(426,1384,o),
(745,1384,qs),
(1015,1384,o),
(1430,977,o),
(1430,664,q),
(1430,664,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
32 1 5 3 30 1 4 5 2 76 0 5 0 4 5 4 101 0 1 1 2 97 0 2 2 74 77 0 0 0 3 97 0 3 3 75 3 78 36 35 21 37 36 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1523;
}
);
note = uni01EA;
},
{
glyphname = Oslash;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(285,-98,o),
(274,-100,q),
(249,-100,o),
(213,-72,qs),
(172,-41,o),
(172,-25,qs),
(172,-19,o),
(174,-14,q),
(283,137,l),
(56,327,o),
(55,668,qs),
(55,920,o),
(231,1141,qs),
(426,1385,o),
(745,1384,qs),
(935,1384,o),
(1087,1290,q),
(1184,1427,l),
(1186,1431,o),
(1194,1432,q),
(1225,1432,o),
(1268,1397,qs),
(1301,1370,o),
(1298,1358,q),
(1298,1354,o),
(1296,1352,q),
(1196,1206,l),
(1429,989,o),
(1430,664,qs),
(1430,445,o),
(1284,246,qs),
(1081,-26,o),
(741,-27,qs),
(553,-27,o),
(395,59,q),
(289,-92,ls)
);
},
{
closed = 1;
nodes = (
(619,68,o),
(756,68,qs),
(1020,68,o),
(1112,346,qs),
(1155,475,o),
(1157,649,qs),
(1157,862,o),
(1069,1026,q),
(498,209,l)
);
},
{
closed = 1;
nodes = (
(987,1149,l),
(866,1299,o),
(739,1296,qs),
(585,1296,o),
(473,1167,qs),
(328,1001,o),
(328,725,qs),
(330,496,o),
(416,330,q),
(416,330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 44 26 18 8 5 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 3 134 0 1 1 74 77 0 5 5 2 97 0 2 2 74 77 0 4 4 0 97 0 0 0 75 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 2 1 133 0 3 0 3 134 0 5 5 2 97 0 2 2 74 77 0 4 4 0 97 0 0 0 75 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 40 27 36 27 33 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1523;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Oslashacute;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,1639,o),
(1032,1626,o),
(1028,1624,qs),
(741,1489,ls),
(710,1475,o),
(688,1475,qs),
(670,1475,o),
(637,1497,o),
(637,1516,qs),
(637,1530,o),
(659,1567,o),
(678,1579,q),
(936,1778,l),
(942,1784,o),
(950,1784,qs),
(958,1784,o),
(983,1769,o),
(1014,1722,o),
(1040,1665,o),
(1040,1649,q),
(1040,1649,l)
);
},
{
closed = 1;
nodes = (
(285,-98,o),
(274,-100,q),
(249,-100,o),
(213,-72,qs),
(172,-41,o),
(172,-25,qs),
(172,-19,o),
(174,-14,q),
(283,137,l),
(56,327,o),
(55,668,qs),
(55,920,o),
(231,1141,qs),
(426,1385,o),
(745,1384,qs),
(935,1384,o),
(1087,1290,q),
(1184,1427,l),
(1186,1431,o),
(1194,1432,q),
(1225,1432,o),
(1268,1397,qs),
(1301,1370,o),
(1298,1358,q),
(1298,1354,o),
(1296,1352,q),
(1196,1206,l),
(1429,989,o),
(1430,664,qs),
(1430,445,o),
(1284,246,qs),
(1081,-26,o),
(741,-27,qs),
(553,-27,o),
(395,59,q),
(289,-92,ls)
);
},
{
closed = 1;
nodes = (
(619,68,o),
(756,68,qs),
(1020,68,o),
(1112,346,qs),
(1155,475,o),
(1157,649,qs),
(1157,862,o),
(1069,1026,q),
(498,209,l)
);
},
{
closed = 1;
nodes = (
(987,1149,l),
(866,1299,o),
(739,1296,qs),
(585,1296,o),
(473,1167,qs),
(328,1001,o),
(328,725,qs),
(330,496,o),
(416,330,q),
(416,330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
74 65 47 39 29 5 5 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 0 133 0 4 1 4 134 0 2 2 74 77 0 6 6 3 97 0 3 3 74 77 0 5 5 1 97 0 1 1 75 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 0 133 0 2 3 2 133 0 4 1 4 134 0 6 6 3 97 0 3 3 74 77 0 5 5 1 97 0 1 1 75 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
39 40 27 36 27 39 45 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 1523;
}
);
note = Oslashacute;
unicode = 510;
},
{
glyphname = Otilde;
kernLeft = C;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1246,507);
ref = tildecomb;
}
);
width = 1523;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = OE;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1946,14,o),
(1929,4,q),
(1902,-8,o),
(1829,-6,qs),
(1692,-6,o),
(1268,0,o),
(1122,0,qs),
(1054,0,o),
(768,-10,o),
(719,-10,qs),
(443,-10,o),
(53,371,o),
(53,662,qs),
(53,926,o),
(432,1358,o),
(723,1358,qs),
(819,1358,o),
(1049,1352,o),
(1133,1352,qs),
(1219,1352,o),
(1614,1356,o),
(1784,1358,qs),
(1868,1358,o),
(1878,1343,q),
(1888,1333,o),
(1888,1307,qs),
(1888,1001,ls),
(1888,985,o),
(1788,983,o),
(1788,1001,qs),
(1788,1130,o),
(1690,1206,qs),
(1629,1251,o),
(1565,1255,qs),
(1522,1257,o),
(1268,1266,qs),
(1241,1266,o),
(1241,1225,qs),
(1241,717,l),
(1247,690,o),
(1270,686,q),
(1407,686,ls),
(1528,686,o),
(1528,778,qs),
(1528,877,ls),
(1528,891,o),
(1632,891,o),
(1632,877,q),
(1626,809,o),
(1626,643,qs),
(1626,481,o),
(1632,420,q),
(1632,406,o),
(1528,403,o),
(1528,420,qs),
(1528,506,ls),
(1528,594,o),
(1407,594,qs),
(1270,594,ls),
(1241,594,o),
(1241,563,qs),
(1241,221,ls),
(1241,145,o),
(1315,106,qs),
(1356,86,o),
(1403,86,qs),
(1620,90,ls),
(1778,94,o),
(1825,227,qs),
(1843,276,o),
(1843,344,qs),
(1843,362,o),
(1946,362,o),
(1946,344,qs),
(1946,57,ls)
);
},
{
closed = 1;
nodes = (
(997,1155,ls),
(997,1208,o),
(895,1264,o),
(768,1272,o),
(717,1272,qs),
(561,1272,o),
(326,969,o),
(326,719,qs),
(326,424,o),
(602,80,o),
(731,80,qs),
(872,80,o),
(997,135,o),
(997,203,q),
(997,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
44 35 26 3 2 3 19 0 2 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 105 7 1 3 3 4 95 0 4 4 68 77 6 1 0 0 5 95 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 7 2 7 3 114 0 0 1 6 6 0 114 0 2 0 1 0 2 1 105 0 7 7 4 95 0 4 4 68 77 0 6 6 5 96 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 38 132 138 68 46 53 54 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 2009;
}
);
note = OE;
unicode = 338;
},
{
glyphname = P;
kernRight = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,86,o),
(649,86,qs),
(663,86,o),
(664,-6,o),
(649,-6,qs),
(522,0,o),
(360,0,qs),
(213,0,o),
(80,-6,qs),
(68,-6,o),
(68,86,o),
(80,86,qs),
(238,86,o),
(238,203,qs),
(238,1155,ls),
(238,1264,o),
(68,1266,qs),
(54,1266,o),
(53,1358,o),
(68,1358,qs),
(211,1352,o),
(354,1352,qs),
(413,1352,o),
(578,1358,o),
(659,1358,qs),
(876,1358,o),
(1022,1257,qs),
(1180,1146,o),
(1180,969,qs),
(1180,779,o),
(1008,678,qs),
(869,596,o),
(653,596,qs),
(563,596,o),
(516,600,qs),
(481,602,o),
(481,569,qs),
(481,203,ls)
);
},
{
closed = 1;
nodes = (
(924,1090,o),
(842,1174,qs),
(744,1278,o),
(563,1278,qs),
(497,1278,o),
(485,1264,qs),
(481,1258,o),
(481,1249,qs),
(481,717,ls),
(481,686,o),
(512,680,q),
(549,676,o),
(592,676,qs),
(842,676,o),
(903,848,qs),
(924,901,o),
(924,969,q),
(924,969,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 7 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 7 1 1 0 4 7 0 105 8 1 3 3 2 95 0 2 2 68 77 6 1 4 4 5 95 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 3 8 7 8 3 114 0 7 1 1 0 4 7 0 105 0 8 8 2 95 0 2 2 68 77 6 1 4 4 5 95 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
39 37 34 82 19 34 102 33 17 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1212;
}
);
note = P;
unicode = 80;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1135,512,o),
(993,317,qs),
(862,133,o),
(659,43,qs),
(567,2,o),
(469,-12,qs),
(432,-18,o),
(432,-51,qs),
(432,-244,ls),
(432,-316,o),
(291,-418,qs),
(145,-516,ls),
(139,-520,o),
(133,-520,qs),
(94,-520,o),
(57,-459,qs),
(43,-436,o),
(43,-420,qs),
(43,-412,o),
(47,-408,qs),
(129,-336,o),
(152,-309,qs),
(187,-264,o),
(186,-209,qs),
(186,1092,ls),
(186,1227,o),
(27,1229,qs),
(13,1229,o),
(12,1321,o),
(27,1321,qs),
(203,1321,o),
(352,1380,qs),
(372,1388,o),
(393,1389,qs),
(434,1389,o),
(436,1354,q),
(430,1157,ls),
(430,1134,o),
(446,1135,qs),
(456,1135,o),
(467,1139,qs),
(483,1145,o),
(602,1245,qs),
(704,1329,o),
(788,1329,qs),
(831,1329,o),
(866,1307,q),
(1024,1184,o),
(1092,985,qs),
(1135,860,o),
(1135,727,q),
(1135,727,l)
);
},
{
closed = 1;
nodes = (
(862,1010,o),
(709,1171,qs),
(691,1191,o),
(680,1192,qs),
(668,1192,o),
(657,1186,qs),
(651,1182,o),
(596,1133,qs),
(524,1067,o),
(453,1030,qs),
(430,1018,o),
(430,983,qs),
(430,119,ls),
(430,82,o),
(459,82,qs),
(465,82,o),
(473,84,qs),
(676,141,o),
(780,356,qs),
(862,522,o),
(862,727,q),
(862,727,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
14 12 2 5 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 3 5 3 6 5 128 0 5 4 3 5 4 126 0 1 1 74 77 0 3 3 0 97 2 1 0 0 68 77 0 4 4 73 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 3 5 3 6 5 128 0 5 4 3 5 4 126 0 4 4 132 0 1 1 74 77 0 3 3 0 97 2 1 0 0 68 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 6 3 5 3 6 5 128 0 5 4 3 5 4 126 0 4 4 132 2 1 0 0 3 6 0 3 105 0 1 1 74 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
70 68 59 56 27 34 18 41 37 7 11 27 
CALL[ ]	/* CallFunction */";
};
width = 1224;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = Q;
kernLeft = C;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1430,444,o),
(1282,238,qs),
(1212,140,o),
(1092,59,qs),
(1069,45,o),
(1069,20,o),
(1092,4,qs),
(1350,-166,o),
(1632,-248,qs),
(1663,-256,ls),
(1683,-262,o),
(1686,-291,qs),
(1686,-301,o),
(1681,-315,qs),
(1667,-364,o),
(1640,-358,qs),
(1239,-282,o),
(653,-59,qs),
(500,0,ls),
(467,12,o),
(344,86,qs),
(213,168,o),
(53,475,o),
(55,662,qs),
(55,924,o),
(233,1139,qs),
(438,1385,o),
(745,1384,qs),
(1005,1384,o),
(1171,1231,qs),
(1430,991,o),
(1430,659,q),
(1430,659,l)
);
},
{
closed = 1;
nodes = (
(1157,893,o),
(1036,1087,qs),
(907,1298,o),
(739,1296,qs),
(542,1296,o),
(426,1104,qs),
(328,942,o),
(328,717,qs),
(328,410,o),
(481,219,qs),
(608,63,o),
(756,66,qs),
(1010,66,o),
(1106,330,qs),
(1157,467,o),
(1157,641,q),
(1157,641,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
0 1 2 1 134 0 2 2 0 97 0 0 0 74 2 78 46 44 38 36 35 3 11 23 
CALL[ ]	/* CallFunction */";
};
width = 1488;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1212,717,o),
(930,633,q),
(912,629,o),
(911,612,qs),
(911,602,o),
(924,586,q),
(1055,363,o),
(1249,162,qs),
(1343,62,o),
(1430,45,qs),
(1457,41,o),
(1454,16,q),
(1454,-23,o),
(1432,-20,q),
(1339,-25,l),
(1183,-25,o),
(1102,31,q),
(961,119,o),
(840,291,qs),
(709,477,l),
(646,553,o),
(631,565,qs),
(606,585,o),
(567,588,q),
(500,588,ls),
(482,588,o),
(481,567,qs),
(481,203,ls),
(481,86,o),
(637,86,qs),
(651,86,o),
(649,-6,o),
(637,-6,qs),
(504,0,o),
(360,0,qs),
(208,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(51,1358,o),
(66,1358,qs),
(209,1352,o),
(354,1352,qs),
(409,1352,o),
(567,1358,o),
(659,1358,qs),
(997,1358,o),
(1141,1184,qs),
(1212,1094,o),
(1212,969,q),
(1212,969,l)
);
},
{
closed = 1;
nodes = (
(958,1104,o),
(842,1196,qs),
(736,1278,o),
(563,1278,qs),
(502,1278,o),
(481,1262,o),
(481,1237,qs),
(481,713,ls),
(481,680,o),
(506,674,qs),
(553,666,o),
(592,666,qs),
(856,666,o),
(932,831,qs),
(958,893,o),
(958,969,q),
(958,969,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
45 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 5 2 7 5 105 8 1 1 1 0 95 0 0 0 68 77 4 1 2 2 3 95 0 3 3 69 77 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 8 7 8 1 114 0 7 0 5 2 7 5 105 0 8 8 0 95 0 0 0 68 77 4 1 2 2 3 95 0 3 3 69 77 0 6 6 69 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
71 69 63 61 40 35 34 82 19 34 99 9 11 29 
CALL[ ]	/* CallFunction */";
};
width = 1419;
}
);
note = R;
unicode = 82;
},
{
glyphname = Racute;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (1304,0);
ref = acutecomb.case;
}
);
width = 1419;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (1353,0);
ref = uni030C.case;
}
);
width = 1419;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = uni0156;
layers = (
{
layerId = m01;
shapes = (
{
pos = (553,0);
ref = uniF1A0;
},
{
ref = R;
}
);
width = 1419;
}
);
note = uni0156;
unicode = 342;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,223,o),
(870,102,qs),
(751,-27,o),
(555,-27,qs),
(412,-27,o),
(307,8,q),
(164,72,l),
(111,234,o),
(111,385,qs),
(111,410,o),
(158,410,qs),
(205,412,o),
(209,391,q),
(219,274,o),
(299,184,qs),
(403,65,o),
(571,68,qs),
(643,68,o),
(700,125,qs),
(772,195,o),
(770,307,qs),
(770,514,o),
(502,584,qs),
(105,684,o),
(104,1032,qs),
(104,1173,o),
(233,1290,qs),
(337,1384,o),
(524,1384,qs),
(645,1384,o),
(737,1364,qs),
(792,1352,o),
(801,1352,qs),
(836,1354,l),
(838,1354,l),
(875,1235,o),
(887,1083,qs),
(889,1056,o),
(842,1051,qs),
(797,1045,o),
(791,1063,qs),
(760,1180,o),
(625,1300,o),
(506,1300,qs),
(412,1300,o),
(352,1217,qs),
(311,1162,o),
(311,1075,qs),
(311,895,o),
(559,834,qs),
(981,733,o),
(981,403,q),
(981,403,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 4 0 3 0 4 3 128 0 1 1 68 77 0 0 0 2 97 0 2 2 74 77 0 3 3 5 97 0 5 5 75 5 78 37 36 42 35 40 39 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1075;
}
);
note = S;
unicode = 83;
},
{
glyphname = Sacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (1132,0);
ref = acutecomb.case;
}
);
width = 1075;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = Scaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (1181,0);
ref = uni030C.case;
}
);
width = 1075;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = Scedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,-420,o),
(586,-475,qs),
(512,-522,o),
(414,-524,qs),
(289,-524,o),
(262,-463,qs),
(256,-451,o),
(256,-434,qs),
(256,-391,o),
(293,-373,qs),
(305,-367,o),
(322,-367,qs),
(353,-367,o),
(397,-406,qs),
(440,-443,o),
(463,-442,qs),
(516,-442,o),
(514,-391,qs),
(514,-313,o),
(373,-250,qs),
(353,-242,o),
(352,-231,qs),
(352,-227,o),
(358,-219,qs),
(489,-25,l),
(387,-19,o),
(307,8,q),
(164,72,l),
(111,234,o),
(111,385,qs),
(111,410,o),
(158,410,qs),
(205,412,o),
(209,391,q),
(219,274,o),
(299,184,qs),
(403,65,o),
(571,68,qs),
(643,68,o),
(700,125,qs),
(772,195,o),
(770,307,qs),
(770,514,o),
(502,584,qs),
(105,684,o),
(104,1032,qs),
(104,1173,o),
(233,1290,qs),
(337,1384,o),
(524,1384,qs),
(645,1384,o),
(737,1364,qs),
(792,1352,o),
(801,1352,qs),
(836,1354,l),
(838,1354,l),
(875,1235,o),
(887,1083,qs),
(889,1056,o),
(842,1051,qs),
(797,1045,o),
(791,1063,qs),
(760,1180,o),
(625,1300,o),
(506,1300,qs),
(412,1300,o),
(352,1217,qs),
(311,1162,o),
(311,1075,qs),
(311,895,o),
(559,834,qs),
(981,732,o),
(981,403,qs),
(981,223,o),
(870,102,qs),
(766,-13,o),
(598,-25,q),
(530,-117,ls),
(522,-129,o),
(522,-133,qs),
(522,-143,o),
(551,-160,qs),
(674,-225,o),
(674,-334,q),
(674,-334,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 0 3 0 4 3 128 0 7 5 6 6 7 114 0 1 1 68 77 0 0 0 2 97 0 2 2 74 77 0 3 3 5 97 0 5 5 69 77 0 6 6 8 98 0 8 8 73 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 3 0 4 3 128 0 7 5 6 6 7 114 0 6 0 8 6 8 102 0 1 1 68 77 0 0 0 2 97 0 2 2 74 77 0 3 3 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 3 0 4 3 128 0 7 5 6 5 7 6 128 0 6 0 8 6 8 102 0 1 1 68 77 0 0 0 2 97 0 2 2 74 77 0 3 3 5 97 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
81 79 72 71 69 67 59 58 53 51 47 45 35 33 30 28 20 18 9 11 22 
CALL[ ]	/* CallFunction */";
};
width = 1075;
}
);
note = Scedilla;
unicode = 350;
},
{
glyphname = Scircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (1181,0);
ref = uni0302.case;
}
);
width = 1075;
}
);
note = Scircumflex;
unicode = 348;
},
{
glyphname = uni0218;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (946,0);
ref = uni0326;
}
);
width = 1075;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = uni1E9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1438,185,o),
(1200,-27,o),
(1036,-27,qs),
(954,-27,o),
(788,29,o),
(739,74,q),
(690,230,o),
(690,346,qs),
(690,356,o),
(692,365,qs),
(696,383,o),
(786,383,o),
(786,375,q),
(806,201,o),
(885,133,qs),
(963,67,o),
(1055,68,qs),
(1125,68,o),
(1229,182,o),
(1229,340,qs),
(1229,496,o),
(1022,664,o),
(848,664,qs),
(797,664,o),
(799,705,qs),
(799,723,o),
(819,762,q),
(1063,1178,ls),
(1088,1219,o),
(1085,1241,q),
(1085,1268,o),
(1063,1276,qs),
(989,1299,o),
(915,1296,q),
(667,1296,o),
(502,995,o),
(502,737,qs),
(502,203,ls),
(502,86,o),
(662,86,qs),
(674,86,o),
(674,-6,o),
(662,-6,qs),
(576,0,o),
(178,0,o),
(92,-6,qs),
(80,-6,o),
(80,86,o),
(92,86,qs),
(256,86,o),
(256,203,qs),
(256,770,ls),
(256,1073,o),
(662,1384,o),
(965,1384,qs),
(1205,1384,o),
(1360,1329,qs),
(1376,1323,o),
(1376,1303,qs),
(1376,1287,o),
(1354,1247,q),
(1055,756,l),
(1059,739,l),
(1219,739,o),
(1438,531,o),
(1438,373,q),
(1438,373,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
36 1 0 5 58 1 2 6 2 76 0 0 5 6 5 0 6 128 0 6 2 5 6 2 126 0 5 5 1 97 0 1 1 74 77 4 1 2 2 3 95 0 3 3 69 77 0 7 7 8 98 0 8 8 75 8 78 44 36 41 36 34 66 20 39 18 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1499;
}
);
note = uni1E9E;
unicode = 7838;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(772,86,o),
(944,86,qs),
(956,86,o),
(956,-6,o),
(944,-6,qs),
(858,0,o),
(444,0,o),
(348,-6,qs),
(334,-6,o),
(336,86,o),
(348,86,qs),
(528,86,o),
(528,203,qs),
(528,1237,ls),
(528,1266,o),
(502,1266,qs),
(358,1266,ls),
(272,1266,o),
(135,1120,o),
(135,1008,qs),
(135,992,o),
(35,991,o),
(35,1008,qs),
(35,1307,ls),
(35,1342,o),
(49,1348,qs),
(74,1358,o),
(147,1358,qs),
(335,1352,o),
(950,1352,o),
(1163,1358,qs),
(1247,1358,o),
(1260,1341,qs),
(1268,1331,o),
(1268,1307,qs),
(1268,1008,ls),
(1268,992,o),
(1165,991,o),
(1165,1008,qs),
(1165,1137,o),
(1010,1266,o),
(934,1266,qs),
(807,1266,ls),
(774,1266,o),
(772,1237,q),
(772,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
22 6 2 3 0 1 76 2 1 0 0 1 95 0 1 1 68 77 5 1 3 3 4 95 0 4 4 69 4 78 34 66 19 57 89 49 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1298;
}
);
note = T;
unicode = 84;
},
{
glyphname = Tcaron;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (1292,0);
ref = uni030C.case;
}
);
width = 1298;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = uni0162;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(764,-399,o),
(676,-457,qs),
(602,-504,o),
(504,-504,qs),
(379,-504,o),
(352,-442,qs),
(346,-430,o),
(346,-414,qs),
(346,-371,o),
(383,-352,qs),
(395,-346,o),
(412,-346,qs),
(443,-346,o),
(487,-385,qs),
(530,-422,o),
(553,-422,qs),
(606,-422,o),
(604,-371,qs),
(604,-293,o),
(463,-229,qs),
(443,-221,o),
(442,-213,qs),
(442,-209,o),
(449,-199,qs),
(584,0,l),
(455,0,o),
(348,-6,qs),
(334,-6,o),
(336,86,o),
(348,86,qs),
(528,86,o),
(528,203,qs),
(528,1237,ls),
(528,1266,o),
(502,1266,qs),
(358,1266,ls),
(272,1266,o),
(135,1120,o),
(135,1008,qs),
(135,992,o),
(35,991,o),
(35,1008,qs),
(35,1307,ls),
(35,1342,o),
(49,1348,qs),
(74,1358,o),
(147,1358,qs),
(335,1352,o),
(950,1352,o),
(1163,1358,qs),
(1247,1358,o),
(1260,1341,qs),
(1268,1331,o),
(1268,1307,qs),
(1268,1008,ls),
(1268,992,o),
(1165,991,o),
(1165,1008,qs),
(1165,1137,o),
(1010,1266,o),
(934,1266,qs),
(807,1266,ls),
(774,1266,o),
(772,1237,q),
(772,203,ls),
(772,86,o),
(944,86,qs),
(956,86,o),
(956,-6,o),
(944,-6,qs),
(833,0,o),
(692,0,q),
(621,-96,ls),
(613,-108,o),
(612,-115,qs),
(610,-125,o),
(639,-139,qs),
(762,-204,o),
(764,-313,q),
(764,-313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
37 21 2 1 2 57 1 8 0 71 1 7 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 0 7 7 8 114 0 7 0 9 7 9 102 4 1 2 2 3 95 0 3 3 68 77 5 1 1 1 0 95 6 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 7 0 8 7 128 0 7 0 9 7 9 102 4 1 2 2 3 95 0 3 3 68 77 5 1 1 1 0 95 6 1 0 0 69 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
76 74 18 40 50 19 57 89 51 34 39 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1298;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1323,605,o),
(1311,465,qs),
(1295,219,o),
(1155,90,qs),
(1028,-29,o),
(772,-27,qs),
(616,-27,o),
(506,14,qs),
(348,75,o),
(287,201,qs),
(236,307,o),
(223,545,q),
(223,1153,ls),
(223,1270,o),
(68,1270,qs),
(54,1270,o),
(53,1364,o),
(68,1364,qs),
(215,1360,o),
(348,1358,qs),
(493,1358,o),
(641,1364,qs),
(655,1364,o),
(655,1270,o),
(641,1270,qs),
(467,1270,o),
(469,1153,qs),
(469,686,l),
(479,406,ls),
(481,281,o),
(535,203,qs),
(625,68,o),
(811,68,qs),
(983,68,o),
(1087,172,qs),
(1177,264,o),
(1178,496,qs),
(1178,1153,ls),
(1178,1270,o),
(1020,1270,qs),
(1006,1270,o),
(1006,1364,o),
(1020,1364,qs),
(1157,1360,o),
(1249,1358,qs),
(1341,1358,o),
(1477,1364,qs),
(1491,1364,o),
(1491,1270,o),
(1477,1270,qs),
(1323,1270,o),
(1323,1153,qs),
(1323,881,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
50 1 3 0 1 76 6 4 2 3 0 0 1 95 5 1 1 1 68 77 0 3 3 7 97 0 7 7 75 7 78 39 34 82 22 37 34 82 17 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1511;
}
);
note = U;
unicode = 85;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1400,0);
ref = acutecomb.case;
}
);
width = 1511;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ubreve;
kernLeft = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1257,507);
ref = uni0306;
}
);
width = 1511;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1449,0);
ref = uni0302.case;
}
);
width = 1511;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1417,0);
ref = uni0308.case;
}
);
width = 1511;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1260,0);
ref = gravecomb.case;
}
);
width = 1511;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uhungarumlaut;
kernLeft = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1363,0);
ref = uni030B.case;
}
);
width = 1511;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = Umacron;
kernLeft = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1438,0);
ref = uni0304.case;
}
);
width = 1511;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = Uogonek;
kernLeft = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1323,605,o),
(1292,219,o),
(1155,90,qs),
(1100,39,o),
(1020,10,qs),
(770,-80,o),
(770,-246,qs),
(770,-367,o),
(893,-367,qs),
(954,-367,o),
(995,-336,q),
(1015,-342,o),
(1016,-375,q),
(940,-488,o),
(799,-487,qs),
(690,-487,o),
(594,-385,o),
(594,-303,qs),
(594,-141,o),
(782,-27,q),
(618,-27,o),
(348,76,o),
(223,307,o),
(223,545,qs),
(223,1153,ls),
(223,1270,o),
(68,1270,qs),
(54,1270,o),
(53,1364,o),
(68,1364,qs),
(215,1360,o),
(367,1358,qs),
(521,1358,o),
(641,1364,qs),
(655,1364,o),
(655,1270,o),
(641,1270,qs),
(467,1270,o),
(469,1153,qs),
(469,686,ls),
(469,278,o),
(625,68,o),
(811,68,qs),
(983,68,o),
(1178,266,o),
(1178,496,qs),
(1178,1153,ls),
(1178,1270,o),
(1020,1270,qs),
(1006,1270,o),
(1006,1364,o),
(1020,1364,qs),
(1104,1360,o),
(1247,1358,qs),
(1390,1358,o),
(1477,1364,qs),
(1491,1364,o),
(1491,1270,o),
(1477,1270,qs),
(1323,1270,o),
(1323,1153,qs),
(1323,881,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
50 1 9 7 48 1 8 9 2 76 0 9 0 8 9 8 101 6 4 2 3 0 0 1 95 5 1 1 1 68 77 0 3 3 7 97 0 7 7 75 7 78 53 51 36 21 34 82 20 36 34 82 17 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1511;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Uring;
kernLeft = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1257,507);
ref = uni030A;
}
);
width = 1511;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
kernLeft = U;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1290,507);
ref = tildecomb;
}
);
width = 1511;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(678,-39,o),
(647,-39,qs),
(612,-39,o),
(596,6,qs),
(172,1153,ls),
(131,1270,o),
(31,1270,qs),
(17,1270,o),
(16,1364,o),
(31,1364,q),
(76,1360,o),
(262,1358,qs),
(471,1358,o),
(518,1364,q),
(530,1364,o),
(530,1270,o),
(518,1270,qs),
(393,1270,o),
(393,1206,qs),
(393,1183,o),
(406,1153,q),
(686,379,ls),
(694,359,o),
(713,358,qs),
(729,358,o),
(737,383,q),
(1032,1147,l),
(1042,1178,o),
(1042,1198,qs),
(1038,1270,o),
(944,1270,qs),
(930,1270,o),
(930,1364,o),
(944,1364,qs),
(991,1360,o),
(1151,1358,qs),
(1317,1358,o),
(1364,1364,q),
(1378,1364,o),
(1378,1270,o),
(1364,1270,qs),
(1217,1270,o),
(1182,1186,qs),
(698,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 0 7 0 3 7 128 6 4 2 3 0 0 1 97 5 1 1 1 68 77 0 7 7 75 7 78 35 35 36 21 37 35 36 17 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1357;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1323,6,l),
(1300,-39,o),
(1272,-39,qs),
(1245,-39,o),
(1214,25,qs),
(1010,481,ls),
(1002,499,o),
(995,500,qs),
(987,500,o),
(979,479,q),
(762,6,ls),
(742,-39,o),
(684,-39,o),
(655,25,qs),
(150,1153,ls),
(99,1270,o),
(6,1270,qs),
(-8,1270,o),
(-8,1364,o),
(6,1364,qs),
(53,1360,o),
(221,1358,qs),
(407,1358,o),
(457,1364,q),
(471,1364,o),
(471,1270,o),
(457,1270,qs),
(387,1270,o),
(385,1225,q),
(389,1184,o),
(406,1153,q),
(756,375,ls),
(764,359,o),
(778,356,q),
(790,356,o),
(799,375,qs),
(920,639,ls),
(926,653,o),
(926,670,o),
(920,686,q),
(684,1208,ls),
(655,1269,o),
(602,1270,qs),
(588,1270,o),
(588,1364,o),
(602,1364,qs),
(649,1360,o),
(811,1358,qs),
(967,1358,o),
(1014,1364,q),
(1028,1364,o),
(1028,1270,o),
(1014,1270,qs),
(944,1270,o),
(944,1229,qs),
(944,1196,o),
(965,1153,qs),
(1038,991,ls),
(1046,973,o),
(1057,973,qs),
(1069,973,o),
(1081,997,qs),
(1151,1147,ls),
(1178,1202,o),
(1176,1231,qs),
(1176,1270,o),
(1122,1270,qs),
(1108,1270,o),
(1110,1364,o),
(1122,1364,qs),
(1171,1360,o),
(1298,1358,qs),
(1433,1358,o),
(1483,1364,q),
(1497,1364,o),
(1497,1270,o),
(1483,1270,qs),
(1338,1270,o),
(1298,1186,qs),
(1141,838,ls),
(1131,813,o),
(1130,799,qs),
(1130,787,o),
(1135,774,qs),
(1317,377,ls),
(1325,359,o),
(1339,358,qs),
(1351,358,o),
(1358,375,qs),
(1710,1147,ls),
(1730,1192,o),
(1731,1221,qs),
(1731,1270,o),
(1665,1270,qs),
(1651,1270,o),
(1651,1364,o),
(1665,1364,q),
(1710,1360,o),
(1853,1358,qs),
(1994,1358,o),
(2042,1364,q),
(2056,1364,o),
(2056,1270,o),
(2042,1270,qs),
(1899,1272,o),
(1860,1186,q),
(1860,1186,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
77 1 7 0 24 1 3 7 2 76 0 7 0 3 0 7 3 128 0 3 14 0 3 14 126 13 11 10 8 6 4 2 7 0 0 1 97 12 9 5 3 1 1 68 77 15 1 14 14 75 14 78 104 102 94 93 90 88 85 83 79 78 64 62 59 57 21 37 35 36 24 37 35 36 17 16 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2011;
}
);
note = W;
unicode = 87;
},
{
glyphname = Wcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (1709,0);
ref = uni0302.case;
}
);
width = 2011;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1233,86,o),
(1368,86,qs),
(1382,86,o),
(1384,-6,o),
(1368,-6,qs),
(1288,0,o),
(1096,0,qs),
(922,0,o),
(825,-6,qs),
(811,-6,o),
(811,86,o),
(825,86,qs),
(934,86,o),
(934,133,qs),
(934,162,o),
(897,209,qs),
(655,526,ls),
(645,540,o),
(633,543,q),
(619,543,o),
(606,526,qs),
(436,299,ls),
(370,211,o),
(369,156,qs),
(367,86,o),
(469,86,qs),
(483,86,o),
(481,-6,o),
(469,-6,qs),
(391,0,o),
(238,0,qs),
(11,0,o),
(-33,-6,q),
(-45,-6,o),
(-45,86,o),
(-33,86,qs),
(119,86,o),
(188,172,qs),
(555,631,ls),
(567,647,o),
(567,664,qs),
(567,678,o),
(555,694,qs),
(199,1194,ls),
(146,1270,o),
(20,1270,qs),
(6,1270,o),
(6,1364,o),
(20,1364,qs),
(67,1360,o),
(311,1358,qs),
(553,1358,o),
(602,1364,q),
(616,1364,o),
(616,1270,o),
(602,1270,qs),
(477,1270,o),
(477,1214,qs),
(477,1191,o),
(506,1153,qs),
(702,879,ls),
(712,865,o),
(723,864,qs),
(735,864,o),
(745,879,q),
(961,1147,ls),
(996,1190,o),
(995,1217,qs),
(995,1270,o),
(913,1270,qs),
(899,1270,o),
(899,1364,o),
(913,1364,qs),
(960,1360,o),
(1135,1358,qs),
(1307,1358,o),
(1356,1364,q),
(1370,1364,o),
(1370,1270,o),
(1356,1270,qs),
(1239,1270,o),
(1147,1186,qs),
(1114,1155,o),
(1063,1092,qs),
(811,782,ls),
(795,762,o),
(793,745,qs),
(793,731,o),
(805,713,qs),
(1151,203,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
84 60 2 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 4 2 3 0 0 1 97 5 1 1 1 68 77 0 3 3 71 77 12 10 9 3 7 7 8 97 11 1 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
12 10 9 3 7 11 1 8 7 8 101 6 4 2 3 0 0 1 97 5 1 1 1 68 77 0 3 3 71 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
88 86 83 79 77 76 64 62 36 24 35 36 21 37 35 36 24 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1380;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(758,86,o),
(905,86,qs),
(917,86,o),
(920,-6,o),
(905,-6,q),
(839,0,o),
(438,0,o),
(367,-6,q),
(353,-6,o),
(352,86,o),
(367,86,qs),
(514,86,o),
(514,203,qs),
(514,494,ls),
(514,562,o),
(504,588,qs),
(496,611,o),
(449,684,qs),
(152,1153,ls),
(101,1235,o),
(49,1257,qs),
(20,1269,o),
(-12,1270,qs),
(-26,1270,o),
(-29,1364,o),
(-12,1364,q),
(35,1360,o),
(248,1358,qs),
(463,1358,o),
(514,1364,q),
(528,1364,o),
(528,1270,o),
(514,1270,qs),
(403,1270,o),
(403,1217,qs),
(403,1186,o),
(424,1153,qs),
(678,750,ls),
(688,734,o),
(698,731,q),
(708,731,o),
(721,752,qs),
(987,1147,ls),
(1010,1182,o),
(1012,1206,q),
(1012,1269,o),
(905,1270,qs),
(891,1270,o),
(891,1364,o),
(905,1364,q),
(950,1360,o),
(1126,1358,qs),
(1310,1358,o),
(1360,1364,q),
(1374,1364,o),
(1374,1270,o),
(1360,1270,qs),
(1251,1270,o),
(1182,1202,qs),
(1149,1167,l),
(811,686,ls),
(772,631,o),
(766,608,qs),
(758,579,o),
(758,500,qs),
(758,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
20 1 6 0 1 76 60 1 7 73 5 3 2 3 0 0 1 97 4 1 1 1 68 77 8 1 6 6 7 97 0 7 7 69 7 78 35 50 26 35 36 28 35 36 23 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1323;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (1306,0);
ref = acutecomb.case;
}
);
width = 1323;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (1355,0);
ref = uni0302.case;
}
);
width = 1323;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (1323,0);
ref = uni0308.case;
}
);
width = 1323;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Z;
kernLeft = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1270,-29,o),
(1253,-29,qs),
(1228,-29,o),
(1176,-20,qs),
(1045,0,o),
(594,0,qs),
(145,0,ls),
(75,0,o),
(76,49,qs),
(76,76,o),
(92,96,qs),
(965,1237,ls),
(975,1249,o),
(975,1257,qs),
(975,1273,o),
(934,1274,qs),
(422,1274,ls),
(379,1274,o),
(350,1247,q),
(311,1216,o),
(254,1075,qs),
(223,999,o),
(219,975,q),
(219,965,o),
(195,963,qs),
(179,963,o),
(162,967,qs),
(137,975,o),
(137,987,q),
(168,1223,o),
(168,1321,qs),
(168,1368,o),
(209,1368,qs),
(211,1368,o),
(268,1360,qs),
(315,1354,o),
(330,1352,q),
(838,1352,l),
(1219,1358,ls),
(1285,1358,o),
(1284,1325,qs),
(1284,1300,o),
(1260,1268,qs),
(426,125,l),
(420,115,o),
(420,106,qs),
(420,86,o),
(453,86,qs),
(865,86,o),
(1044,98,qs),
(1097,102,o),
(1184,250,qs),
(1225,320,o),
(1235,354,qs),
(1237,360,o),
(1253,362,q),
(1288,362,o),
(1309,344,qs),
(1315,338,o),
(1315,330,q),
(1270,157,o),
(1270,18,q),
(1270,18,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
33 1 4 5 16 2 2 1 0 62 1 6 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 4 1 4 0 1 128 0 5 5 2 97 3 1 2 2 68 77 0 4 4 2 97 3 1 2 2 68 77 0 1 1 6 95 0 6 6 69 77 0 7 7 75 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 4 1 4 0 1 128 0 5 5 2 95 0 2 2 68 77 0 4 4 3 97 0 3 3 68 77 0 1 1 6 95 0 6 6 69 77 0 7 7 75 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 4 1 4 0 1 128 0 1 0 6 7 1 6 103 0 5 5 2 95 0 2 2 68 77 0 4 4 3 97 0 3 3 68 77 0 7 7 75 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
18 55 54 38 35 55 54 21 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1316;
}
);
note = Z;
unicode = 90;
},
{
glyphname = Zacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (1302,0);
ref = acutecomb.case;
}
);
width = 1316;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (1351,0);
ref = uni030C.case;
}
);
width = 1316;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = Zdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (1176,507);
ref = uni0307;
}
);
width = 1316;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = uni0186;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,1093,o),
(106,1214,qs),
(135,1286,o),
(158,1323,q),
(205,1329,o),
(246,1341,qs),
(400,1384,o),
(604,1384,qs),
(866,1384,o),
(1063,1235,qs),
(1321,1036,o),
(1321,711,qs),
(1321,441,o),
(1167,244,qs),
(954,-26,o),
(580,-27,qs),
(451,-27,o),
(242,16,qs),
(187,26,o),
(135,29,q),
(106,88,o),
(96,303,qs),
(94,354,ls),
(94,372,o),
(137,377,q),
(184,379,o),
(188,362,q),
(206,153,o),
(399,88,qs),
(479,61,o),
(586,61,qs),
(793,61,o),
(1047,397,o),
(1047,653,qs),
(1047,977,o),
(877,1155,qs),
(748,1290,o),
(590,1290,qs),
(248,1290,o),
(150,1014,qs),
(144,996,o),
(92,1008,qs),
(55,1016,o),
(55,1036,q),
(55,1036,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 105 0 0 0 5 97 0 5 5 74 77 0 1 1 4 97 0 4 4 75 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 5 97 0 5 5 74 77 0 2 2 3 97 0 3 3 69 77 0 1 1 4 97 0 4 4 75 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 105 0 0 0 5 97 0 5 5 74 77 0 1 1 4 97 0 4 4 75 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 5 97 0 5 5 74 77 0 2 2 3 97 0 3 3 69 77 0 1 1 4 97 0 4 4 75 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 105 0 0 0 5 97 0 5 5 74 77 0 1 1 4 97 0 4 4 75 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 34 21 20 37 37 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1347;
}
);
note = uni0186;
unicode = 390;
},
{
glyphname = uni0190;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(850,918,o),
(768,918,o),
(768,930,qs),
(768,1043,o),
(649,1182,o),
(571,1182,qs),
(436,1182,o),
(383,1104,qs),
(354,1061,o),
(354,1004,qs),
(354,881,o),
(457,821,qs),
(514,788,o),
(668,788,qs),
(709,788,o),
(709,727,qs),
(709,643,o),
(666,664,q),
(621,680,o),
(549,674,qs),
(438,664,o),
(385,610,qs),
(305,530,o),
(305,395,qs),
(305,286,o),
(352,217,qs),
(405,139,o),
(455,115,qs),
(494,95,o),
(590,96,qs),
(699,98,o),
(782,166,qs),
(794,176,o),
(852,115,o),
(838,100,qs),
(715,-25,o),
(561,-23,qs),
(358,-23,o),
(61,231,o),
(61,422,qs),
(61,701,o),
(344,754,qs),
(375,760,o),
(377,768,q),
(377,776,o),
(340,795,qs),
(135,899,o),
(135,1071,qs),
(135,1184,o),
(313,1356,o),
(436,1356,qs),
(518,1356,o),
(633,1311,o),
(723,1243,o),
(733,1243,qs),
(753,1243,o),
(774,1296,o),
(774,1321,qs),
(774,1335,o),
(850,1333,o),
(850,1321,qs),
(850,928,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 1 0 1 58 1 4 5 2 76 0 0 1 5 1 0 5 128 0 4 5 3 5 4 3 128 0 5 5 1 97 0 1 1 68 77 0 3 3 2 98 0 2 2 69 2 78 38 46 37 44 35 21 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = uni0190;
unicode = 400;
},
{
glyphname = uni019D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,1270,o),
(51,1270,qs),
(39,1270,o),
(39,1364,o),
(51,1364,qs),
(114,1360,o),
(227,1358,qs),
(311,1358,o),
(326,1356,qs),
(387,1348,o),
(426,1298,qs),
(1137,432,l),
(1147,418,o),
(1161,418,qs),
(1186,418,o),
(1186,449,qs),
(1186,1151,ls),
(1186,1270,o),
(1032,1270,qs),
(1018,1270,o),
(1018,1364,o),
(1032,1364,qs),
(1130,1360,o),
(1231,1358,qs),
(1299,1358,o),
(1423,1364,qs),
(1437,1364,o),
(1438,1270,o),
(1423,1270,qs),
(1288,1270,o),
(1288,1151,qs),
(1288,76,ls),
(1288,-20,o),
(1257,-20,qs),
(1230,-20,o),
(1184,37,qs),
(360,1014,l),
(348,1030,o),
(342,1030,qs),
(330,1030,o),
(328,1008,q),
(328,63,l),
(326,-111,ls),
(326,-224,o),
(260,-334,q),
(246,-361,o),
(229,-385,qs),
(135,-520,o),
(-29,-518,qs),
(-86,-518,o),
(-123,-483,qs),
(-158,-450,o),
(-158,-403,qs),
(-158,-376,o),
(-139,-342,o),
(-125,-330,q),
(-98,-312,o),
(-61,-313,qs),
(-8,-315,o),
(39,-356,qs),
(66,-379,o),
(78,-385,q),
(82,-385,ls),
(119,-383,o),
(164,-319,qs),
(225,-231,o),
(223,-135,qs),
(223,1155,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 7 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 4 3 4 7 3 128 0 1 3 0 0 1 114 9 6 2 4 4 5 95 8 1 5 5 68 77 0 3 3 69 77 0 0 0 2 98 0 2 2 73 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 4 3 4 7 3 128 0 1 3 0 0 1 114 0 0 0 2 0 2 102 9 6 2 4 4 5 95 8 1 5 5 68 77 0 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 4 3 4 7 3 128 0 1 3 0 3 1 0 128 0 0 0 2 0 2 102 9 6 2 4 4 5 95 8 1 5 5 68 77 0 3 3 69 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
66 64 69 19 34 82 19 45 39 36 19 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1480;
}
);
note = uni019D;
unicode = 413;
},
{
glyphname = uni01C4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1913,0);
ref = uni030C.case;
},
{
pos = (1567,0);
ref = Z;
},
{
ref = D;
}
);
width = 2883;
}
);
note = uni01C4;
unicode = 452;
},
{
glyphname = uni01C5;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1571,0);
ref = caron;
},
{
pos = (1567,0);
ref = z;
},
{
ref = D;
}
);
width = 2336;
}
);
note = uni01C5;
unicode = 453;
},
{
glyphname = uni01C7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1360,0);
ref = J;
},
{
ref = L;
}
);
width = 2076;
}
);
note = uni01C7;
unicode = 455;
},
{
glyphname = uni01C8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1360,0);
ref = j;
},
{
ref = L;
}
);
width = 1857;
}
);
note = uni01C8;
unicode = 456;
},
{
glyphname = uni01CA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1483,0);
ref = J;
},
{
ref = N;
}
);
width = 2199;
}
);
note = uni01CA;
unicode = 458;
},
{
glyphname = uni01CB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1483,0);
ref = j;
},
{
ref = N;
}
);
width = 1980;
}
);
note = uni01CB;
unicode = 459;
},
{
glyphname = uni01CD;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1343,0);
ref = uni030C.case;
}
);
width = 1400;
}
);
note = uni01CD;
unicode = 461;
},
{
glyphname = uni01CF;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (1010,0);
ref = uni030C.case;
}
);
width = 733;
}
);
note = uni01CF;
unicode = 463;
},
{
glyphname = uni01D1;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1405,0);
ref = uni030C.case;
}
);
width = 1523;
}
);
note = uni01D1;
unicode = 465;
},
{
glyphname = uni01D3;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1449,0);
ref = uni030C.case;
}
);
width = 1511;
}
);
note = uni01D3;
unicode = 467;
},
{
glyphname = uni01D5;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1417,0);
ref = uni0308.case;
},
{
pos = (1438,328);
ref = uni0304.case;
}
);
width = 1511;
}
);
note = uni01D5;
unicode = 469;
},
{
glyphname = uni01D7;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1417,0);
ref = uni0308.case;
},
{
pos = (1400,328);
ref = acutecomb.case;
}
);
width = 1511;
}
);
note = uni01D7;
unicode = 471;
},
{
glyphname = uni01D9;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1417,0);
ref = uni0308.case;
},
{
pos = (1449,328);
ref = uni030C.case;
}
);
width = 1511;
}
);
note = uni01D9;
unicode = 473;
},
{
glyphname = uni01DB;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1417,0);
ref = uni0308.case;
},
{
pos = (1260,328);
ref = gravecomb.case;
}
);
width = 1511;
}
);
note = uni01DB;
unicode = 475;
},
{
glyphname = uni01DE;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1311,0);
ref = uni0308.case;
},
{
pos = (1332,328);
ref = uni0304.case;
}
);
width = 1400;
}
);
note = uni01DE;
unicode = 478;
},
{
glyphname = uni01E0;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1168,507);
ref = uni0307;
},
{
pos = (1332,411);
ref = uni0304.case;
}
);
width = 1400;
}
);
note = uni01E0;
unicode = 480;
},
{
glyphname = uni01E4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1282,115,o),
(1325,115,qs),
(1339,115,o),
(1339,35,o),
(1325,35,qs),
(1276,35,o),
(1128,10,qs),
(903,-29,o),
(770,-27,qs),
(506,-27,o),
(307,127,qs),
(53,326,o),
(55,647,qs),
(55,913,o),
(207,1110,qs),
(420,1384,o),
(795,1384,qs),
(938,1384,o),
(1112,1348,qs),
(1194,1330,o),
(1239,1329,q),
(1270,1266,o),
(1278,1055,qs),
(1280,1004,ls),
(1280,986,o),
(1188,979,o),
(1186,995,qs),
(1166,1206,o),
(975,1270,qs),
(895,1297,o),
(788,1296,qs),
(581,1296,o),
(328,961,o),
(328,705,qs),
(328,381,o),
(500,203,qs),
(629,68,o),
(784,68,qs),
(901,68,o),
(977,92,qs),
(1038,112,o),
(1038,160,qs),
(1038,279,l),
(844,279,ls),
(826,279,o),
(825,383,o),
(844,383,qs),
(1038,383,l),
(1038,459,ls),
(1038,537,o),
(926,537,qs),
(846,537,ls),
(832,537,o),
(831,629,o),
(846,627,qs),
(920,621,o),
(1319,621,o),
(1391,627,qs),
(1403,627,o),
(1405,537,o),
(1391,537,qs),
(1282,537,o),
(1282,459,qs),
(1282,383,l),
(1417,383,ls),
(1437,383,o),
(1438,279,o),
(1415,279,qs),
(1282,279,l),
(1282,160,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 3 8 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 4 1 2 1 3 2 105 5 1 1 6 1 0 13 1 0 105 0 13 0 12 11 13 12 105 0 9 9 68 77 0 8 8 10 97 0 10 10 74 77 0 7 7 11 97 0 11 11 75 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 9 10 8 10 9 8 128 0 3 4 1 2 1 3 2 105 5 1 1 6 1 0 13 1 0 105 0 13 0 12 11 13 12 105 0 8 8 10 97 0 10 10 74 77 0 7 7 11 97 0 11 11 75 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
68 66 64 63 61 59 53 51 49 48 37 36 34 18 51 20 18 33 32 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1441;
}
);
note = uni01E4;
unicode = 484;
},
{
glyphname = uni01E8;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (1333,0);
ref = uni030C.case;
}
);
width = 1380;
}
);
note = uni01E8;
unicode = 488;
},
{
glyphname = uni01EC;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni01EA;
},
{
pos = (1394,0);
ref = uni0304.case;
}
);
width = 1523;
}
);
note = uni01EC;
unicode = 492;
},
{
glyphname = uni01F1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1567,0);
ref = Z;
},
{
ref = D;
}
);
width = 2883;
}
);
note = uni01F1;
unicode = 497;
},
{
glyphname = uni01F2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1567,0);
ref = z;
},
{
ref = D;
}
);
width = 2336;
}
);
note = uni01F2;
unicode = 498;
},
{
glyphname = uni01F4;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (1375,0);
ref = acutecomb.case;
}
);
width = 1441;
}
);
note = uni01F4;
unicode = 500;
},
{
glyphname = uni01F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1700,-31,o),
(1913,66,o),
(2044,259,o),
(2044,397,qs),
(2044,500,o),
(1978,695,o),
(1846,821,o),
(1752,821,qs),
(1718,821,o),
(1639,785,o),
(1586,729,o),
(1587,703,q),
(1686,682,o),
(1793,521,o),
(1793,392,qs),
(1793,307,o),
(1735,149,o),
(1635,51,o),
(1575,51,qs),
(1510,51,o),
(1432,144,o),
(1432,225,qs),
(1432,1153,ls),
(1432,1270,o),
(1595,1270,qs),
(1602,1270,o),
(1610,1299,o),
(1610,1318,qs),
(1610,1337,o),
(1602,1364,o),
(1595,1364,q),
(1548,1358,o),
(1311,1358,qs),
(1073,1358,o),
(1028,1364,q),
(1021,1364,o),
(1013,1336,o),
(1013,1316,qs),
(1013,1297,o),
(1021,1270,o),
(1028,1270,qs),
(1188,1270,o),
(1188,1153,qs),
(1188,782,ls),
(1188,748,o),
(1153,748,qs),
(516,748,ls),
(481,748,o),
(481,782,qs),
(481,1153,ls),
(481,1270,o),
(643,1270,qs),
(650,1270,o),
(658,1299,o),
(658,1318,qs),
(658,1337,o),
(650,1364,o),
(643,1364,qs),
(591,1359,o),
(360,1359,qs),
(128,1359,o),
(76,1364,qs),
(69,1364,o),
(61,1336,o),
(61,1316,qs),
(61,1297,o),
(69,1270,o),
(76,1270,qs),
(238,1270,o),
(238,1153,qs),
(238,203,ls),
(238,86,o),
(76,86,qs),
(69,86,o),
(61,58,o),
(61,39,qs),
(61,20,o),
(69,-6,o),
(76,-6,qs),
(200,0,o),
(353,0,qs),
(506,0,o),
(639,-6,qs),
(646,-6,o),
(654,22,o),
(654,41,qs),
(654,60,o),
(646,86,o),
(639,86,qs),
(481,86,o),
(481,203,qs),
(481,618,ls),
(481,653,o),
(516,653,qs),
(1153,653,ls),
(1188,653,o),
(1188,618,qs),
(1188,225,ls),
(1188,144,o),
(1300,28,o),
(1478,-31,o),
(1577,-31,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
89 1 0 7 1 76 70 43 2 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 0 1 7 0 103 10 8 6 3 4 4 5 97 9 1 5 5 68 77 0 12 12 71 77 3 1 1 1 2 95 0 2 2 69 77 0 11 11 13 97 14 1 13 13 75 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 12 4 7 4 12 7 128 0 7 0 0 1 7 0 103 10 8 6 3 4 4 5 97 9 1 5 5 68 77 3 1 1 1 2 95 0 2 2 69 77 0 11 11 13 97 14 1 13 13 75 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 0 1 7 0 103 10 8 6 3 4 4 5 97 9 1 5 5 68 77 0 12 12 71 77 3 1 1 1 2 95 0 2 2 69 77 0 11 11 13 97 14 1 13 13 75 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 12 4 7 4 12 7 128 0 7 0 0 1 7 0 103 10 8 6 3 4 4 5 97 9 1 5 5 68 77 3 1 1 1 2 95 0 2 2 69 77 0 11 11 13 97 14 1 13 13 75 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 101 0 100 94 92 83 81 77 75 69 67 19 51 38 39 19 37 85 19 53 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2105;
}
);
note = uni01F6;
unicode = 502;
},
{
glyphname = uni01F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,176,ls),
(451,100,o),
(438,41,o),
(438,-6,qs),
(438,-236,ls),
(438,-310,o),
(303,-416,qs),
(170,-518,l),
(166,-520,o),
(160,-520,qs),
(133,-520,o),
(63,-444,o),
(63,-422,qs),
(63,-414,o),
(70,-408,qs),
(168,-322,o),
(186,-260,qs),
(194,-237,o),
(195,-213,qs),
(195,1155,ls),
(195,1237,o),
(109,1257,qs),
(74,1265,o),
(25,1266,qs),
(11,1266,o),
(10,1358,o),
(25,1358,qs),
(168,1352,o),
(350,1352,qs),
(532,1352,o),
(905,1358,o),
(1087,1358,qs),
(1173,1358,o),
(1174,1300,qs),
(1173,1256,o),
(1159,1233,q),
(1159,1233,l)
);
},
{
closed = 1;
nodes = (
(1044,1239,o),
(1044,1245,qs),
(1044,1265,o),
(1012,1266,qs),
(479,1264,ls),
(438,1264,o),
(438,1231,qs),
(438,346,ls),
(438,328,o),
(465,328,o),
(471,340,q),
(1040,1233,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
46 23 2 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
3 1 1 1 0 95 0 0 0 68 77 0 2 2 73 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 2 1 2 134 3 1 1 1 0 95 0 0 0 68 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
45 42 28 34 99 4 11 25 
CALL[ ]	/* CallFunction */";
};
width = 1148;
}
);
note = uni01F7;
unicode = 503;
},
{
glyphname = uni01F8;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (1194,0);
ref = gravecomb.case;
}
);
width = 1480;
}
);
note = uni01F8;
unicode = 504;
},
{
glyphname = uni0200;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1212,0);
ref = uni030F.case;
}
);
width = 1400;
}
);
note = uni0200;
unicode = 512;
},
{
glyphname = uni0202;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1142,507);
ref = uni0311;
}
);
width = 1400;
}
);
note = uni0202;
unicode = 514;
},
{
glyphname = uni0204;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1147,0);
ref = uni030F.case;
}
);
width = 1249;
}
);
note = uni0204;
unicode = 516;
},
{
glyphname = uni0206;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (1077,507);
ref = uni0311;
}
);
width = 1249;
}
);
note = uni0206;
unicode = 518;
},
{
glyphname = uni0208;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (879,0);
ref = uni030F.case;
}
);
width = 733;
}
);
note = uni0208;
unicode = 520;
},
{
glyphname = uni020A;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (809,507);
ref = uni0311;
}
);
width = 733;
}
);
note = uni020A;
unicode = 522;
},
{
glyphname = uni020C;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1274,0);
ref = uni030F.case;
}
);
width = 1523;
}
);
note = uni020C;
unicode = 524;
},
{
glyphname = uni020E;
kernLeft = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1204,507);
ref = uni0311;
}
);
width = 1523;
}
);
note = uni020E;
unicode = 526;
},
{
glyphname = uni0210;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (1222,0);
ref = uni030F.case;
}
);
width = 1419;
}
);
note = uni0210;
unicode = 528;
},
{
glyphname = uni0212;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (1152,507);
ref = uni0311;
}
);
width = 1419;
}
);
note = uni0212;
unicode = 530;
},
{
glyphname = uni0214;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1318,0);
ref = uni030F.case;
}
);
width = 1511;
}
);
note = uni0214;
unicode = 532;
},
{
glyphname = uni0216;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (1248,507);
ref = uni0311;
}
);
width = 1511;
}
);
note = uni0216;
unicode = 534;
},
{
glyphname = uni021A;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (1057,0);
ref = uni0326;
}
);
width = 1298;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = uni021E;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (1486,0);
ref = uni030C.case;
}
);
width = 1685;
}
);
note = uni021E;
unicode = 542;
},
{
glyphname = uni0226;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1168,507);
ref = uni0307;
}
);
width = 1400;
}
);
note = uni0226;
unicode = 550;
},
{
glyphname = uni0228;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(690,-399,o),
(602,-457,qs),
(528,-504,o),
(430,-504,qs),
(305,-504,o),
(281,-442,q),
(275,-430,o),
(274,-414,qs),
(274,-371,o),
(309,-352,qs),
(321,-346,o),
(340,-346,qs),
(371,-346,o),
(414,-385,qs),
(457,-422,o),
(479,-422,qs),
(532,-422,o),
(532,-371,qs),
(532,-293,o),
(389,-229,qs),
(369,-221,o),
(371,-213,q),
(371,-209,o),
(377,-199,qs),
(510,0,l),
(373,0,ls),
(211,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,1155,ls),
(238,1264,o),
(66,1266,qs),
(52,1266,o),
(51,1358,o),
(66,1358,qs),
(209,1352,o),
(365,1352,qs),
(521,1352,o),
(950,1358,o),
(1071,1358,qs),
(1128,1358,o),
(1128,1307,qs),
(1128,1001,ls),
(1128,985,o),
(1028,983,o),
(1028,1001,qs),
(1028,1130,o),
(930,1206,qs),
(869,1253,o),
(805,1255,qs),
(508,1266,ls),
(481,1266,o),
(481,1225,qs),
(481,717,ls),
(481,688,o),
(510,686,q),
(645,686,ls),
(768,686,o),
(768,778,qs),
(768,877,ls),
(768,891,o),
(872,891,o),
(872,877,q),
(866,809,o),
(866,481,o),
(872,420,q),
(872,406,o),
(768,403,o),
(768,420,qs),
(768,506,ls),
(768,594,o),
(645,594,qs),
(510,594,ls),
(481,594,o),
(481,563,qs),
(481,221,ls),
(481,143,o),
(555,106,qs),
(594,86,o),
(637,86,qs),
(860,90,ls),
(1018,92,o),
(1065,227,qs),
(1083,276,o),
(1083,344,qs),
(1083,360,o),
(1186,360,o),
(1186,344,qs),
(1186,57,ls),
(1186,-6,o),
(1067,-6,qs),
(881,-6,o),
(709,-4,qs),
(664,-4,o),
(616,-2,q),
(549,-96,ls),
(541,-108,o),
(539,-115,q),
(539,-125,o),
(567,-139,qs),
(690,-204,o),
(690,-313,q),
(690,-313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
56 39 2 3 4 33 14 2 1 2 84 1 10 0 98 1 9 10 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 0 9 9 10 114 0 3 0 2 1 3 2 105 0 9 0 11 9 11 102 6 1 4 4 5 95 0 5 5 68 77 7 1 1 1 0 95 8 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 0 9 0 10 9 128 0 3 0 2 1 3 2 105 0 9 0 11 9 11 102 6 1 4 4 5 95 0 5 5 68 77 7 1 1 1 0 95 8 1 0 0 69 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
103 101 94 93 91 89 66 19 34 104 51 61 53 56 87 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1249;
}
);
note = uni0228;
unicode = 552;
},
{
glyphname = uni022A;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1373,0);
ref = uni0308.case;
},
{
pos = (1394,328);
ref = uni0304.case;
}
);
width = 1523;
}
);
note = uni022A;
unicode = 554;
},
{
glyphname = uni022C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1246,507);
ref = tildecomb;
},
{
pos = (1394,341);
ref = uni0304.case;
}
);
width = 1523;
}
);
note = uni022C;
unicode = 556;
},
{
glyphname = uni022E;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1230,507);
ref = uni0307;
}
);
width = 1523;
}
);
note = uni022E;
unicode = 558;
},
{
glyphname = uni0230;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (1230,507);
ref = uni0307;
},
{
pos = (1394,411);
ref = uni0304.case;
}
);
width = 1523;
}
);
note = uni0230;
unicode = 560;
},
{
glyphname = uni0232;
kernLeft = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (1344,0);
ref = uni0304.case;
}
);
width = 1323;
}
);
note = uni0232;
unicode = 562;
},
{
glyphname = uni1E0C;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (1198,0);
ref = dotbelowcomb;
}
);
width = 1566;
}
);
note = uni1E0C;
unicode = 7692;
},
{
glyphname = uni1E0E;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (1250,0);
ref = uni0331;
}
);
width = 1566;
}
);
note = uni1E0E;
unicode = 7694;
},
{
glyphname = uni1E20;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (1413,0);
ref = uni0304.case;
}
);
width = 1441;
}
);
note = uni1E20;
unicode = 7712;
},
{
glyphname = uni1E24;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (1258,0);
ref = dotbelowcomb;
}
);
width = 1685;
}
);
note = uni1E24;
unicode = 7716;
},
{
glyphname = uni1E2A;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (1454,0);
ref = uni032E;
}
);
width = 1685;
}
);
note = uni1E2A;
unicode = 7722;
},
{
glyphname = uni1E32;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (1105,0);
ref = dotbelowcomb;
}
);
width = 1380;
}
);
note = uni1E32;
unicode = 7730;
},
{
glyphname = uni1E62;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (953,0);
ref = dotbelowcomb;
}
);
width = 1075;
}
);
note = uni1E62;
unicode = 7778;
},
{
glyphname = uni1E6C;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (1064,0);
ref = dotbelowcomb;
}
);
width = 1298;
}
);
note = uni1E6C;
unicode = 7788;
},
{
glyphname = uni1E6E;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (1116,0);
ref = uni0331;
}
);
width = 1298;
}
);
note = uni1E6E;
unicode = 7790;
},
{
glyphname = uni1E8E;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (1180,507);
ref = uni0307;
}
);
width = 1323;
}
);
note = uni1E8E;
unicode = 7822;
},
{
glyphname = uni1E92;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (1123,0);
ref = dotbelowcomb;
}
);
width = 1316;
}
);
note = uni1E92;
unicode = 7826;
},
{
glyphname = T.alt;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(930,86,o),
(1102,86,qs),
(1114,86,o),
(1114,41,qs),
(1114,-6,o),
(1102,-6,qs),
(963,0,o),
(811,0,qs),
(639,0,o),
(506,-6,qs),
(492,-6,o),
(492,39,qs),
(492,86,o),
(506,86,qs),
(686,86,o),
(686,203,qs),
(686,1237,ls),
(686,1266,o),
(659,1266,qs),
(464,1260,o),
(358,1255,qs),
(307,1253,o),
(244,1204,qs),
(142,1120,o),
(135,1008,qs),
(135,992,o),
(88,991,qs),
(35,991,o),
(35,1008,qs),
(35,1307,ls),
(35,1342,o),
(49,1348,qs),
(67,1358,o),
(147,1358,qs),
(575,1352,o),
(807,1352,qs),
(1036,1352,o),
(1479,1358,qs),
(1563,1358,o),
(1575,1341,qs),
(1583,1331,o),
(1581,1307,q),
(1581,1008,ls),
(1581,992,o),
(1534,991,qs),
(1481,991,o),
(1481,1008,qs),
(1481,1137,o),
(1366,1210,qs),
(1303,1253,o),
(1249,1255,qs),
(1143,1259,o),
(963,1266,qs),
(930,1266,o),
(930,1237,qs),
(930,203,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
51 43 26 13 8 5 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
3 1 1 5 0 0 1 117 4 1 0 0 2 0 2 100 7 1 5 5 6 95 0 6 6 33 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
3 1 1 5 0 5 1 0 131 4 1 0 0 2 0 2 100 7 1 5 5 6 95 0 6 6 33 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 83 19 68 22 101 21 65 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1613;
}
);
note = T.alt;
},
{
glyphname = Thorn.nordic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(924,799,o),
(842,885,qs),
(744,989,o),
(563,987,qs),
(497,987,o),
(485,975,q),
(481,969,o),
(481,958,qs),
(481,426,ls),
(481,393,o),
(512,389,qs),
(549,385,o),
(592,385,qs),
(836,385,o),
(903,557,qs),
(924,610,o),
(924,678,q),
(924,678,l)
);
},
{
closed = 1;
nodes = (
(1180,488,o),
(1008,387,qs),
(869,305,o),
(653,305,qs),
(585,305,o),
(516,309,qs),
(481,311,o),
(481,279,qs),
(481,203,ls),
(479,86,o),
(639,86,qs),
(653,86,o),
(653,41,qs),
(651,-6,o),
(639,-6,qs),
(533,0,o),
(360,0,qs),
(161,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,qs),
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(61,1364,o),
(76,1364,qs),
(137,1360,o),
(582,1358,o),
(643,1364,q),
(657,1364,o),
(657,1270,o),
(643,1270,qs),
(479,1270,o),
(481,1153,qs),
(481,1065,l),
(659,1067,ls),
(872,1071,o),
(1022,969,qs),
(1180,858,o),
(1180,678,q),
(1180,678,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
49 9 2 4 73 0 9 0 0 1 9 0 109 0 1 0 2 3 1 2 107 5 1 3 0 4 3 4 101 8 1 6 6 7 95 0 7 7 33 6 78 59 55 35 82 19 34 36 18 39 39 35 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1212;
}
);
note = Thorn.nordic;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(809,-25,o),
(676,-25,qs),
(584,-25,o),
(514,57,qs),
(500,75,o),
(494,76,q),
(482,76,o),
(465,59,qs),
(383,-23,o),
(266,-23,qs),
(141,-23,o),
(88,61,qs),
(61,104,o),
(63,162,qs),
(63,283,o),
(274,393,q),
(426,465,l),
(461,485,o),
(461,512,qs),
(461,702,ls),
(461,774,o),
(356,774,qs),
(276,774,o),
(240,723,q),
(232,709,o),
(229,647,qs),
(229,612,o),
(225,596,qs),
(200,508,o),
(133,508,qs),
(43,508,o),
(43,586,qs),
(43,654,o),
(98,729,qs),
(129,772,o),
(164,795,qs),
(285,871,o),
(428,870,qs),
(541,870,o),
(623,813,qs),
(689,770,o),
(690,707,qs),
(690,199,ls),
(690,84,o),
(758,86,q),
(789,84,o),
(829,121,qs),
(837,129,o),
(856,113,q),
(870,98,o),
(866,88,q),
(866,88,l)
);
},
{
closed = 1;
nodes = (
(461,375,ls),
(461,398,o),
(446,397,qs),
(440,397,o),
(434,395,q),
(293,323,o),
(293,205,qs),
(293,88,o),
(365,88,qs),
(461,89,o),
(461,193,q),
(461,193,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 3 0 3 2 0 128 0 3 3 1 97 0 1 1 71 77 6 1 0 0 4 97 5 1 4 4 69 4 78 35 38 42 38 38 37 37 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 858;
}
);
note = a;
unicode = 97;
},
{
glyphname = aacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (826,0);
ref = acutecomb;
}
);
width = 858;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (880,0);
ref = uni0306;
}
);
width = 858;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = acircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (900,0);
ref = uni0302;
}
);
width = 858;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = adieresis;
kernLeft = adieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (862,0);
ref = uni0308;
}
);
width = 858;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = agrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (963,0);
ref = gravecomb;
}
);
width = 858;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = amacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (869,0);
ref = uni0304;
}
);
width = 858;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,375,ls),
(461,398,o),
(446,397,qs),
(440,397,o),
(434,395,q),
(293,323,o),
(293,205,qs),
(293,88,o),
(365,88,qs),
(461,89,o),
(461,193,q),
(461,193,l)
);
},
{
closed = 1;
nodes = (
(545,20,o),
(514,57,qs),
(500,75,o),
(494,76,q),
(482,76,o),
(465,59,qs),
(383,-23,o),
(266,-23,qs),
(141,-23,o),
(88,61,qs),
(61,104,o),
(63,162,qs),
(63,283,o),
(274,393,q),
(426,465,l),
(461,485,o),
(461,512,qs),
(461,702,ls),
(461,774,o),
(356,774,qs),
(276,774,o),
(240,723,q),
(232,709,o),
(229,647,qs),
(229,612,o),
(225,596,qs),
(200,508,o),
(133,508,qs),
(43,508,o),
(43,586,qs),
(43,654,o),
(98,729,qs),
(129,772,o),
(164,795,qs),
(285,871,o),
(428,870,qs),
(541,870,o),
(623,813,qs),
(689,770,o),
(690,707,qs),
(690,199,ls),
(690,84,o),
(758,86,q),
(789,84,o),
(829,121,qs),
(837,129,o),
(856,113,qs),
(870,99,o),
(866,88,q),
(809,-25,o),
(678,-25,q),
(576,-152,o),
(573,-246,qs),
(573,-367,o),
(696,-367,qs),
(757,-367,o),
(801,-336,q),
(821,-342,o),
(819,-375,q),
(743,-488,o),
(602,-487,qs),
(397,-487,o),
(397,-303,qs),
(398,-162,o),
(580,0,q),
(580,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
20 1 2 3 18 1 1 2 2 76 28 1 0 1 75 0 6 7 0 7 6 0 128 0 2 0 1 2 1 101 0 7 7 5 97 0 5 5 71 77 4 1 0 0 3 97 8 1 3 3 69 3 78 42 38 38 37 38 19 36 44 33 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 858;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (880,0);
ref = uni030A;
}
);
width = 858;
}
);
note = aring;
unicode = 229;
},
{
glyphname = aringacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (880,0);
ref = uni030A;
},
{
pos = (826,552);
ref = acutecomb;
}
);
width = 858;
}
);
note = aringacute;
unicode = 507;
},
{
glyphname = atilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (913,0);
ref = tildecomb;
}
);
width = 858;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1029,-22,o),
(815,-23,qs),
(711,-23,o),
(618,45,qs),
(589,65,o),
(569,92,qs),
(553,115,o),
(543,115,qs),
(535,115,o),
(510,92,q),
(451,24,o),
(393,4,qs),
(352,-10,o),
(297,-10,qs),
(145,-10,o),
(90,78,qs),
(67,115,o),
(68,162,qs),
(68,316,o),
(227,381,qs),
(434,471,ls),
(469,485,o),
(469,530,qs),
(469,678,ls),
(469,789,o),
(371,788,qs),
(305,788,o),
(260,727,qs),
(252,715,o),
(252,678,qs),
(252,637,ls),
(252,561,o),
(207,526,qs),
(182,508,o),
(147,508,qs),
(59,508,o),
(59,588,qs),
(59,654,o),
(115,727,qs),
(146,768,o),
(176,788,qs),
(313,870,o),
(426,870,qs),
(530,870,o),
(602,813,q),
(629,788,o),
(653,788,o),
(676,809,q),
(754,870,o),
(856,870,qs),
(1038,870,o),
(1133,782,q),
(1172,741,o),
(1171,717,qs),
(1171,690,o),
(1114,666,qs),
(727,504,ls),
(686,488,o),
(686,424,qs),
(686,336,o),
(739,250,qs),
(813,133,o),
(934,133,qs),
(1014,133,o),
(1094,180,qs),
(1108,188,o),
(1116,199,q),
(1130,211,o),
(1157,190,q),
(1184,164,o),
(1176,154,q),
(1176,154,l)
);
},
{
closed = 1;
nodes = (
(975,742,o),
(936,768,qs),
(903,788,o),
(866,788,qs),
(807,788,o),
(748,713,qs),
(703,654,o),
(700,606,qs),
(700,590,o),
(715,590,q),
(958,688,ls),
(975,695,o),
(975,713,q),
(975,713,l)
);
},
{
closed = 1;
nodes = (
(480,264,o),
(469,367,qs),
(467,390,o),
(455,389,qs),
(447,389,o),
(436,383,qs),
(297,305,o),
(297,190,qs),
(297,129,o),
(342,102,qs),
(360,92,o),
(381,92,qs),
(426,92,o),
(479,160,qs),
(497,185,o),
(498,205,qs),
(498,215,o),
(494,225,q),
(494,225,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
85 77 75 3 4 2 100 88 2 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 5 4 5 2 4 128 0 4 0 5 4 0 126 0 9 0 6 0 9 6 128 8 1 5 5 1 97 3 1 1 1 71 77 0 0 0 6 97 7 1 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 5 4 5 2 4 128 0 4 0 5 4 0 126 0 9 0 6 0 9 6 128 8 1 5 5 1 97 3 1 1 1 71 77 0 6 6 69 77 0 0 0 7 97 0 7 7 69 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
93 91 42 42 42 39 38 34 18 43 39 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1236;
}
);
note = ae;
unicode = 230;
},
{
glyphname = aeacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae;
},
{
pos = (1015,0);
ref = acutecomb;
}
);
width = 1236;
}
);
note = aeacute;
unicode = 509;
},
{
glyphname = uni01E3;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae;
},
{
pos = (1058,0);
ref = uni0304;
}
);
width = 1236;
}
);
note = uni01E3;
unicode = 483;
},
{
glyphname = b;
kernLeft = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,233,o),
(868,104,qs),
(757,-23,o),
(537,-23,qs),
(480,-23,o),
(408,6,qs),
(353,31,o),
(303,31,qs),
(287,31,o),
(248,-2,qs),
(229,-18,l),
(225,-20,o),
(215,-20,qs),
(184,-20,o),
(141,12,qs),
(123,26,o),
(123,35,q),
(129,66,o),
(129,279,qs),
(129,1161,ls),
(129,1286,o),
(35,1286,qs),
(19,1286,o),
(18,1323,qs),
(18,1362,o),
(35,1360,q),
(84,1360,o),
(221,1425,qs),
(289,1458,o),
(309,1477,qs),
(321,1487,o),
(338,1487,qs),
(365,1487,o),
(367,1462,q),
(358,1286,l),
(358,840,ls),
(358,811,o),
(375,811,qs),
(383,811,o),
(393,819,qs),
(467,870,o),
(561,870,qs),
(737,870,o),
(856,752,qs),
(981,626,o),
(981,440,q),
(981,440,l)
);
},
{
closed = 1;
nodes = (
(727,586,o),
(659,682,qs),
(600,768,o),
(502,770,qs),
(430,770,o),
(389,727,qs),
(358,696,o),
(358,647,qs),
(358,297,ls),
(358,180,o),
(430,111,qs),
(485,58,o),
(565,57,qs),
(727,57,o),
(727,428,q),
(727,428,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
12 1 2 1 22 1 3 2 10 8 2 8 0 29 1 5 7 4 76 0 5 7 4 7 5 4 128 0 1 1 70 77 0 3 3 2 97 0 2 2 68 77 0 8 8 0 97 0 0 0 71 77 0 7 7 4 97 6 1 4 4 69 4 78 39 37 34 36 23 35 21 24 35 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(672,621,o),
(653,649,q),
(614,715,ls),
(575,774,o),
(502,774,qs),
(420,774,o),
(360,682,qs),
(294,580,o),
(295,436,qs),
(295,303,o),
(383,209,qs),
(463,125,o),
(563,125,qs),
(672,125,o),
(750,180,qs),
(766,192,o),
(797,150,q),
(824,107,o),
(805,96,qs),
(723,43,l),
(606,-23,o),
(457,-23,qs),
(318,-23,o),
(207,76,qs),
(68,199,o),
(66,387,qs),
(66,557,o),
(172,694,qs),
(307,870,o),
(522,870,qs),
(657,870,o),
(745,825,qs),
(784,805,o),
(799,780,q),
(805,764,o),
(805,739,qs),
(805,688,o),
(774,655,qs),
(740,621,o),
(709,621,q),
(709,621,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 0 4 3 4 0 3 128 0 4 4 1 97 0 1 1 71 77 0 3 3 2 97 0 2 2 69 2 78 1 0 36 34 28 26 19 17 11 9 0 40 1 39 6 11 22 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = c;
unicode = 99;
},
{
glyphname = cacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (926,0);
ref = acutecomb;
}
);
width = 878;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (998,0);
ref = uni030C;
}
);
width = 878;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(575,-424,o),
(487,-479,qs),
(413,-526,o),
(315,-528,qs),
(190,-528,o),
(166,-467,q),
(160,-455,o),
(160,-438,qs),
(160,-395,o),
(195,-377,qs),
(207,-371,o),
(223,-371,qs),
(254,-371,o),
(299,-410,qs),
(342,-447,o),
(365,-446,qs),
(418,-446,o),
(418,-395,qs),
(418,-317,o),
(274,-254,qs),
(254,-246,o),
(256,-236,q),
(256,-232,o),
(260,-223,q),
(399,-18,l),
(295,-2,o),
(207,76,qs),
(68,199,o),
(66,387,qs),
(66,557,o),
(172,694,qs),
(307,870,o),
(522,870,qs),
(657,870,o),
(745,825,qs),
(784,805,o),
(799,780,q),
(805,764,o),
(805,739,qs),
(805,688,o),
(774,655,qs),
(739,620,o),
(709,621,qs),
(672,621,o),
(653,649,q),
(614,715,ls),
(575,774,o),
(502,774,qs),
(420,774,o),
(360,682,qs),
(294,580,o),
(295,436,qs),
(295,303,o),
(383,209,qs),
(463,125,o),
(563,125,qs),
(672,125,o),
(750,180,qs),
(766,192,o),
(797,150,q),
(824,107,o),
(805,96,qs),
(723,43,l),
(627,-12,o),
(506,-20,q),
(432,-121,ls),
(424,-133,o),
(424,-137,qs),
(424,-147,o),
(453,-164,qs),
(575,-229,o),
(575,-338,q),
(575,-338,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 0 64 1 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 2 1 2 3 1 128 0 6 0 5 5 6 114 0 2 2 4 97 0 4 4 71 77 0 1 1 0 97 0 0 0 69 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 1 2 3 1 128 0 6 0 5 5 6 114 0 5 0 7 5 7 102 0 2 2 4 97 0 4 4 71 77 0 1 1 0 97 0 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 1 2 3 1 128 0 6 0 5 0 6 5 128 0 5 0 7 5 7 102 0 2 2 4 97 0 4 4 71 77 0 1 1 0 97 0 0 0 69 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
39 18 47 40 35 38 39 23 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = ccircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (1000,0);
ref = uni0302;
}
);
width = 878;
}
);
note = ccircumflex;
unicode = 265;
},
{
glyphname = cdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (997,0);
ref = uni0307;
}
);
width = 878;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = d;
kernLeft = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(993,19,o),
(866,-4,q),
(764,-31,o),
(735,-35,q),
(723,-35,ls),
(713,-35,o),
(713,10,qs),
(713,39,ls),
(713,62,o),
(702,61,qs),
(690,61,o),
(674,47,q),
(580,-23,o),
(479,-23,qs),
(235,-23,o),
(125,152,qs),
(53,263,o),
(53,418,qs),
(53,594,o),
(174,721,qs),
(321,871,o),
(567,870,qs),
(616,870,o),
(647,866,qs),
(674,864,o),
(674,889,qs),
(674,1161,ls),
(674,1286,o),
(582,1286,qs),
(566,1286,o),
(565,1323,qs),
(565,1362,o),
(582,1360,q),
(631,1360,o),
(768,1427,qs),
(834,1460,o),
(852,1477,qs),
(864,1487,o),
(879,1487,qs),
(910,1487,o),
(909,1454,qs),
(903,1384,o),
(903,1286,qs),
(903,256,ls),
(903,166,o),
(913,139,qs),
(927,98,o),
(967,98,qs),
(979,98,o),
(999,104,qs),
(1015,108,o),
(1026,74,q),
(1034,35,o),
(1022,31,q),
(1022,31,l)
);
},
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(408,793,o),
(344,649,qs),
(305,561,o),
(307,444,qs),
(307,251,o),
(385,141,qs),
(444,59,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
13 1 2 1 23 1 3 2 74 1 0 9 2 1 6 0 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 9 6 9 0 6 128 0 6 8 9 6 8 126 0 1 1 70 77 0 3 3 2 97 0 2 2 68 77 0 9 9 4 97 0 4 4 71 77 0 8 8 5 97 7 1 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 0 9 6 9 0 6 128 0 6 8 9 6 8 126 0 1 1 70 77 0 3 3 2 97 0 2 2 68 77 0 9 9 4 97 0 4 4 71 77 0 8 8 5 97 0 5 5 69 77 0 7 7 75 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
68 66 40 35 34 38 37 35 21 23 37 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = d;
unicode = 100;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(745,608,o),
(672,711,qs),
(617,793,o),
(543,793,qs),
(465,793,o),
(399,709,qs),
(317,603,o),
(319,444,qs),
(319,264,o),
(399,150,qs),
(460,62,o),
(543,61,qs),
(637,61,o),
(694,182,qs),
(745,288,o),
(745,444,q),
(745,444,l)
);
},
{
closed = 1;
nodes = (
(749,-25,o),
(543,-23,qs),
(336,-23,o),
(203,100,qs),
(66,229,o),
(66,449,qs),
(66,599,o),
(170,717,qs),
(307,871,o),
(532,870,q),
(456,946,o),
(332,1026,qs),
(316,1036,o),
(287,1036,o),
(268,1022,qs),
(68,864,l),
(56,856,o),
(2,936,qs),
(-39,1002,o),
(-41,1014,q),
(-41,1022,o),
(-33,1018,qs),
(30,985,o),
(63,985,qs),
(86,985,o),
(100,997,qs),
(188,1067,ls),
(206,1081,o),
(207,1098,o),
(188,1108,qs),
(59,1176,o),
(8,1196,qs),
(-10,1202,o),
(14,1255,qs),
(34,1298,o),
(53,1292,q),
(205,1231,o),
(283,1188,qs),
(303,1178,o),
(315,1178,qs),
(329,1178,o),
(354,1196,qs),
(649,1425,ls),
(663,1435,o),
(719,1364,qs),
(764,1309,o),
(772,1292,q),
(772,1284,o),
(766,1284,q),
(649,1309,l),
(629,1309,o),
(618,1300,qs),
(432,1153,ls),
(414,1139,o),
(414,1130,qs),
(414,1120,o),
(436,1106,qs),
(770,909,o),
(893,733,qs),
(999,579,o),
(999,451,qs),
(999,229,o),
(872,100,q),
(872,100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
31 1 3 2 58 1 4 5 2 76 0 2 3 2 133 0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 105 0 1 1 6 97 0 6 6 71 77 0 0 0 7 97 0 7 7 69 7 78 79 77 71 70 67 66 57 55 41 39 30 29 38 35 8 11 24 
CALL[ ]	/* CallFunction */";
};
width = 1073;
}
);
note = eth;
unicode = 240;
},
{
glyphname = dcaron;
kernLeft = d;
kernRight = dcaron;
layers = (
{
layerId = m01;
shapes = (
{
pos = (518,0);
ref = caron.alt;
},
{
ref = d;
}
);
width = 1034;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = dcroat;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,1200,ls),
(903,1163,o),
(940,1163,qs),
(1073,1163,ls),
(1089,1163,o),
(1090,1059,o),
(1073,1059,qs),
(940,1059,ls),
(903,1059,o),
(903,1022,qs),
(903,256,ls),
(903,166,o),
(913,139,qs),
(927,98,o),
(967,98,qs),
(979,98,o),
(999,104,qs),
(1017,108,o),
(1034,35,o),
(1022,31,q),
(952,17,o),
(866,-4,qs),
(764,-29,o),
(735,-35,qs),
(729,-37,o),
(723,-35,qs),
(713,-31,o),
(713,10,qs),
(713,39,ls),
(713,62,o),
(702,61,qs),
(694,61,o),
(674,47,qs),
(580,-23,o),
(479,-23,qs),
(248,-23,o),
(139,145,qs),
(65,258,o),
(66,418,qs),
(66,594,o),
(186,721,qs),
(329,871,o),
(567,870,qs),
(612,870,o),
(666,864,q),
(674,866,o),
(674,889,qs),
(674,1022,ls),
(674,1059,o),
(637,1059,qs),
(481,1059,ls),
(467,1059,o),
(467,1163,o),
(481,1163,qs),
(637,1163,ls),
(674,1163,o),
(674,1180,q),
(664,1286,o),
(582,1286,qs),
(566,1286,o),
(565,1360,o),
(582,1360,qs),
(631,1360,o),
(768,1427,qs),
(834,1460,o),
(852,1477,qs),
(864,1487,o),
(879,1487,qs),
(910,1487,o),
(909,1454,qs),
(903,1286,l)
);
},
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(412,793,o),
(344,662,qs),
(295,568,o),
(295,444,qs),
(295,264,o),
(375,152,qs),
(441,62,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
13 1 3 2 90 1 8 12 50 1 6 11 3 76 0 8 12 7 12 8 7 128 0 7 11 12 7 11 126 10 1 3 9 1 4 5 3 4 105 0 0 0 70 77 0 2 2 1 97 0 1 1 68 77 0 12 12 5 97 0 5 5 71 77 0 11 11 6 97 0 6 6 69 6 78 84 82 76 74 68 65 63 61 46 34 38 67 50 19 34 21 17 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = e;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(809,536,o),
(719,537,qs),
(334,537,ls),
(297,537,o),
(297,510,qs),
(297,272,o),
(410,176,qs),
(471,123,o),
(561,123,qs),
(643,123,o),
(727,178,q),
(747,188,o),
(776,152,qs),
(803,117,o),
(791,106,qs),
(744,57,o),
(657,18,qs),
(569,-23,o),
(455,-23,qs),
(320,-23,o),
(213,86,qs),
(70,229,o),
(68,436,qs),
(68,602,o),
(174,727,qs),
(297,870,o),
(461,870,qs),
(639,870,o),
(743,752,q),
(809,661,o),
(809,612,q),
(809,612,l)
);
},
{
closed = 1;
nodes = (
(309,626,o),
(346,627,qs),
(549,627,ls),
(586,627,o),
(586,651,qs),
(586,719,o),
(530,764,qs),
(495,793,o),
(463,791,qs),
(400,791,o),
(350,748,q),
(309,708,o),
(309,653,q),
(309,653,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 5 0 3 2 5 3 103 0 4 4 0 97 0 0 0 71 77 0 2 2 1 97 0 1 1 69 1 78 52 37 52 40 38 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = e;
unicode = 101;
},
{
glyphname = eacute;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (864,0);
ref = acutecomb;
}
);
width = 874;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ebreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (918,0);
ref = uni0306;
}
);
width = 874;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = ecaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (936,0);
ref = uni030C;
}
);
width = 874;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = ecircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (938,0);
ref = uni0302;
}
);
width = 874;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = edieresis;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (900,0);
ref = uni0308;
}
);
width = 874;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (935,0);
ref = uni0307;
}
);
width = 874;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = egrave;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (1001,0);
ref = gravecomb;
}
);
width = 874;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = emacron;
kernLeft = edieresis;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (907,0);
ref = uni0304;
}
);
width = 874;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = eogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,708,o),
(504,791,o),
(463,791,qs),
(400,791,o),
(309,713,o),
(309,653,qs),
(309,626,o),
(346,627,qs),
(549,627,ls),
(586,626,o),
(586,651,q),
(586,651,l)
);
},
{
closed = 1;
nodes = (
(809,536,o),
(719,537,qs),
(334,537,ls),
(297,537,o),
(297,510,qs),
(297,399,o),
(348,227,o),
(471,123,o),
(561,123,qs),
(643,123,o),
(727,178,q),
(747,188,o),
(805,115,o),
(791,106,qs),
(734,69,o),
(631,-37,o),
(543,-182,o),
(543,-246,qs),
(543,-367,o),
(666,-367,qs),
(727,-367,o),
(768,-336,q),
(788,-342,o),
(788,-375,q),
(712,-488,o),
(571,-487,qs),
(483,-487,o),
(367,-395,o),
(367,-303,qs),
(367,-240,o),
(459,-96,o),
(532,-37,qs),
(561,-14,o),
(522,-18,qs),
(491,-22,o),
(455,-23,qs),
(344,-23,o),
(168,117,o),
(68,313,o),
(68,436,qs),
(68,608,o),
(303,870,o),
(459,870,qs),
(563,870,o),
(723,791,o),
(809,653,o),
(809,614,q),
(809,614,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
37 1 5 3 35 1 4 5 2 76 0 0 0 7 6 0 7 103 0 5 0 4 5 4 101 0 1 1 2 97 0 2 2 71 77 0 6 6 3 97 0 3 3 69 3 78 52 41 36 40 37 38 35 49 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = uni0259;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,312,o),
(158,309,q),
(543,309,ls),
(580,309,o),
(580,338,qs),
(580,576,o),
(469,672,qs),
(408,725,o),
(315,725,qs),
(233,725,o),
(150,670,q),
(130,660,o),
(100,694,qs),
(73,729,o),
(86,741,qs),
(133,790,o),
(219,829,qs),
(307,870,o),
(422,870,qs),
(557,870,o),
(666,762,qs),
(809,619,o),
(809,412,qs),
(809,246,o),
(702,121,qs),
(579,-22,o),
(416,-23,qs),
(238,-23,o),
(133,96,q),
(68,187,o),
(68,236,q),
(68,236,l)
);
},
{
closed = 1;
nodes = (
(567,222,o),
(530,219,q),
(328,219,ls),
(291,219,o),
(291,197,qs),
(291,129,o),
(346,84,qs),
(381,55,o),
(414,55,qs),
(477,55,o),
(526,98,q),
(567,140,o),
(567,195,q),
(567,195,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 0 5 4 3 5 103 0 2 2 1 97 0 1 1 71 77 0 4 4 0 97 0 0 0 69 0 78 36 37 52 40 38 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uni0259;
unicode = 601;
},
{
glyphname = uni025A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,264,o),
(563,276,o),
(545,272,qs),
(328,219,ls),
(291,211,o),
(291,197,qs),
(291,138,o),
(373,55,o),
(414,55,qs),
(484,55,o),
(576,146,o),
(582,246,q),
(582,246,l)
);
},
{
closed = 1;
nodes = (
(956,362,o),
(981,231,o),
(1042,231,qs),
(1081,231,o),
(1106,260,qs),
(1110,264,o),
(1149,231,o),
(1145,227,qs),
(1090,159,o),
(1014,160,qs),
(957,160,o),
(866,244,o),
(852,336,q),
(852,344,o),
(850,354,q),
(805,344,l),
(789,211,o),
(567,-23,o),
(416,-23,qs),
(322,-23,o),
(178,37,o),
(68,176,o),
(68,236,qs),
(68,287,o),
(158,309,qs),
(537,410,ls),
(578,420,o),
(573,436,q),
(546,596,o),
(406,725,o),
(315,725,qs),
(237,725,o),
(150,670,qs),
(132,658,o),
(100,694,qs),
(73,729,o),
(86,741,qs),
(133,790,o),
(307,870,o),
(422,870,qs),
(557,870,o),
(784,641,o),
(805,481,q),
(926,512,ls),
(956,520,o),
(956,477,q),
(956,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
44 16 2 5 2 51 6 2 4 5 2 76 0 5 0 4 0 5 4 105 0 2 2 1 97 0 1 1 71 77 0 0 0 3 97 0 3 3 69 3 78 37 39 42 39 46 34 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1165;
}
);
note = uni025A;
unicode = 602;
},
{
glyphname = f;
kernLeft = f;
kernRight = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(608,746,o),
(594,745,qs),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(287,0,qs),
(140,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,135,qs),
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(119,819,o),
(164,885,o),
(164,932,qs),
(164,1077,o),
(231,1210,qs),
(264,1276,o),
(309,1321,qs),
(467,1487,o),
(674,1487,qs),
(797,1487,o),
(858,1427,qs),
(897,1390,o),
(897,1343,qs),
(897,1288,o),
(844,1247,qs),
(813,1222,o),
(784,1223,qs),
(684,1223,o),
(637,1313,qs),
(608,1370,o),
(559,1374,q),
(502,1374,o),
(463,1321,qs),
(393,1225,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(594,850,ls),
(608,850,o),
(608,799,q),
(608,799,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
58 1 5 4 1 76 47 1 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 114 0 4 5 5 4 89 0 1 1 3 97 0 3 3 70 77 9 1 5 5 0 95 0 0 0 71 77 8 1 6 6 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 0 1 2 0 128 0 4 5 5 4 89 0 1 1 3 97 0 3 3 70 77 9 1 5 5 0 95 0 0 0 71 77 8 1 6 6 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 0 1 2 0 128 0 4 5 5 4 89 8 1 6 0 7 6 7 101 0 1 1 3 97 0 3 3 70 77 9 1 5 5 0 95 0 0 0 71 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
56 54 35 36 19 50 23 38 35 21 49 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = g;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,-303,o),
(834,-422,qs),
(662,-559,o),
(412,-559,qs),
(113,-559,o),
(41,-412,qs),
(21,-371,o),
(20,-319,qs),
(20,-237,o),
(123,-154,qs),
(158,-125,o),
(203,-102,qs),
(217,-96,o),
(217,-88,qs),
(217,-84,o),
(201,-76,q),
(68,-21,o),
(68,98,qs),
(68,174,o),
(213,236,qs),
(229,242,o),
(229,250,qs),
(229,254,o),
(211,266,qs),
(57,362,o),
(57,528,qs),
(57,669,o),
(166,768,qs),
(279,870,o),
(442,870,qs),
(553,870,o),
(664,827,qs),
(730,798,o),
(756,797,qs),
(948,797,ls),
(964,797,o),
(965,741,qs),
(965,682,o),
(948,682,qs),
(856,682,ls),
(825,682,o),
(825,653,qs),
(825,575,ls),
(825,405,o),
(707,305,qs),
(603,217,o),
(430,217,qs),
(381,217,o),
(324,223,q),
(312,223,o),
(301,217,q),
(264,186,o),
(264,160,qs),
(264,127,o),
(303,109,qs),
(336,93,o),
(391,92,qs),
(645,92,ls),
(774,92,o),
(838,72,qs),
(981,25,o),
(981,-141,q),
(981,-141,l)
);
},
{
closed = 1;
nodes = (
(592,698,o),
(520,764,qs),
(489,793,o),
(446,793,qs),
(374,793,o),
(328,707,qs),
(289,637,o),
(289,549,qs),
(289,428,o),
(348,352,qs),
(393,295,o),
(461,295,qs),
(549,295,o),
(580,414,qs),
(592,463,o),
(592,522,q),
(592,522,l)
);
},
{
closed = 1;
nodes = (
(811,-111,o),
(575,-111,qs),
(362,-111,ls),
(342,-111,o),
(322,-125,qs),
(259,-170,o),
(258,-248,qs),
(258,-324,o),
(317,-379,qs),
(385,-440,o),
(504,-440,qs),
(756,-440,o),
(803,-299,qs),
(811,-273,o),
(811,-242,q),
(811,-242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
25 1 2 7 13 1 1 6 2 76 0 3 0 2 6 3 2 105 0 6 0 1 0 6 1 105 0 0 0 9 8 0 9 103 0 7 7 4 97 0 4 4 71 77 0 8 8 5 97 0 5 5 73 5 78 94 91 85 83 76 74 68 66 59 57 34 51 37 40 51 10 11 27 
CALL[ ]	/* CallFunction */";
};
width = 946;
}
);
note = g;
unicode = 103;
},
{
glyphname = gbreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (924,0);
ref = uni0306;
}
);
width = 946;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = gcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (942,0);
ref = uni030C;
}
);
width = 946;
}
);
note = gcaron;
unicode = 487;
},
{
glyphname = gcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (944,0);
ref = uni0302;
}
);
width = 946;
}
);
note = gcircumflex;
unicode = 285;
},
{
glyphname = uni0123;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (801,0);
ref = uni0312;
}
);
width = 946;
}
);
note = uni0123;
unicode = 291;
},
{
glyphname = gdotaccent;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (941,0);
ref = uni0307;
}
);
width = 946;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = uni021D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,-252,o),
(399,-489,qs),
(295,-555,o),
(207,-555,qs),
(60,-555,o),
(59,-461,qs),
(59,-385,o),
(158,-385,qs),
(185,-385,o),
(231,-412,qs),
(266,-432,o),
(285,-432,qs),
(396,-432,o),
(465,-295,qs),
(524,-178,o),
(526,-33,qs),
(526,92,o),
(461,166,qs),
(408,225,o),
(324,225,qs),
(281,225,o),
(201,186,q),
(181,178,o),
(158,225,qs),
(146,254,o),
(160,262,q),
(318,334,o),
(389,399,qs),
(487,489,o),
(489,606,qs),
(489,751,o),
(360,752,qs),
(274,752,o),
(209,662,qs),
(150,580,o),
(150,492,qs),
(150,476,o),
(74,475,o),
(74,492,qs),
(74,809,ls),
(74,823,o),
(150,823,o),
(150,809,qs),
(150,782,o),
(170,782,qs),
(188,782,o),
(229,809,qs),
(317,870,o),
(446,870,qs),
(585,870,o),
(666,782,qs),
(734,710,o),
(733,606,qs),
(733,477,o),
(555,350,q),
(707,284,o),
(754,178,qs),
(778,123,o),
(778,49,q),
(778,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 1 0 20 4 2 3 2 2 76 0 1 0 2 0 1 2 128 0 3 2 5 2 3 5 128 0 4 5 6 5 4 114 0 2 2 0 97 0 0 0 71 77 0 5 5 6 97 0 6 6 73 6 78 34 35 22 42 43 34 41 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 864;
}
);
note = uni021D;
unicode = 541;
},
{
glyphname = h;
kernRight = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(999,0,o),
(858,0,qs),
(708,0,o),
(629,-8,q),
(613,-8,o),
(612,68,o),
(629,68,qs),
(733,68,o),
(733,131,qs),
(733,555,ls),
(733,631,o),
(688,694,qs),
(639,762,o),
(565,762,qs),
(475,762,o),
(422,698,qs),
(393,663,o),
(393,627,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(287,0,qs),
(135,0,o),
(51,-8,q),
(37,-8,o),
(37,68,o),
(51,68,qs),
(164,68,o),
(164,137,qs),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1323,qs),
(55,1362,o),
(72,1360,q),
(121,1360,o),
(256,1427,qs),
(322,1460,o),
(342,1477,qs),
(354,1487,o),
(371,1487,qs),
(398,1487,o),
(399,1460,qs),
(397,1374,o),
(393,1286,q),
(393,821,ls),
(393,798,o),
(403,799,qs),
(411,799,o),
(426,809,qs),
(508,870,o),
(637,870,qs),
(817,870,o),
(907,733,qs),
(962,649,o),
(963,557,qs),
(963,143,l),
(969,67,o),
(1079,68,qs),
(1095,68,o),
(1095,-8,o),
(1079,-8,q),
(1079,-8,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
29 1 4 3 16 1 8 1 5 1 0 8 3 76 43 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 2 70 77 0 4 4 3 97 0 3 3 68 77 0 8 8 1 97 0 1 1 71 77 9 7 5 3 0 0 6 97 10 1 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
9 7 5 3 0 10 1 6 0 6 101 0 2 2 70 77 0 4 4 3 97 0 3 3 68 77 0 8 8 1 97 0 1 1 71 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
66 64 60 59 37 35 36 19 35 21 25 37 34 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1091;
}
);
note = h;
unicode = 104;
},
{
glyphname = hbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,1083,l),
(-20,1083,ls),
(-36,1083,o),
(-37,1174,o),
(-20,1174,qs),
(164,1174,l),
(160,1287,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(311,1454,o),
(342,1477,qs),
(354,1487,o),
(371,1487,qs),
(402,1487,o),
(399,1460,qs),
(393,1384,o),
(393,1286,qs),
(393,1174,l),
(569,1174,ls),
(585,1174,o),
(586,1083,o),
(569,1083,qs),
(393,1083,l),
(393,821,ls),
(393,798,o),
(403,799,qs),
(411,799,o),
(426,809,qs),
(508,870,o),
(637,870,qs),
(743,870,o),
(883,782,o),
(963,635,o),
(963,557,qs),
(963,143,ls),
(963,67,o),
(1079,68,qs),
(1095,68,o),
(1096,-8,o),
(1079,-8,q),
(999,0,o),
(854,0,qs),
(709,0,o),
(629,-8,q),
(613,-8,o),
(612,68,o),
(629,68,qs),
(733,68,o),
(733,131,qs),
(733,555,ls),
(733,631,o),
(639,762,o),
(565,762,qs),
(475,762,o),
(422,698,qs),
(393,663,o),
(393,627,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(274,0,qs),
(137,0,o),
(51,-8,q),
(37,-8,o),
(37,68,o),
(51,68,qs),
(164,67,o),
(164,137,q),
(164,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
48 1 3 7 1 76 32 9 2 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
13 1 9 14 1 8 7 9 8 104 0 10 10 70 77 0 12 12 11 97 0 11 11 68 77 0 3 3 7 97 0 7 7 71 77 6 4 2 3 0 0 1 97 5 1 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
13 1 9 14 1 8 7 9 8 104 6 4 2 3 0 5 1 1 0 1 101 0 10 10 70 77 0 12 12 11 97 0 11 11 68 77 0 3 3 7 97 0 7 7 71 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
75 73 71 70 69 67 65 64 59 58 54 52 22 37 35 36 20 37 35 36 17 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1091;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = hcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-72,0);
ref = uni0302.case;
},
{
ref = h;
}
);
width = 1091;
}
);
note = hcircumflex;
unicode = 293;
},
{
glyphname = i;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,557,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(373,883,qs),
(402,883,o),
(399,856,qs),
(393,768,o),
(393,682,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(510,-8,o),
(496,-8,q),
(496,-8,l)
);
},
{
closed = 1;
nodes = (
(401,1114,o),
(342,1073,qs),
(303,1046,o),
(256,1049,q),
(180,1049,o),
(139,1106,qs),
(112,1143,o),
(113,1186,qs),
(113,1256,o),
(170,1296,qs),
(209,1325,o),
(256,1323,qs),
(334,1323,o),
(375,1266,qs),
(401,1227,o),
(401,1186,q),
(401,1186,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 3 0 2 3 105 0 7 7 6 97 0 6 6 68 77 0 1 1 71 77 4 1 0 0 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 0 7 1 6 7 105 0 2 0 3 0 2 3 105 0 1 1 71 77 4 1 0 0 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 6 0 7 1 6 7 105 0 2 0 3 0 2 3 105 4 1 0 0 5 0 5 101 0 1 1 71 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 37 36 19 34 20 37 34 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = i;
unicode = 105;
},
{
glyphname = dotlessi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,557,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(373,883,qs),
(402,883,o),
(399,856,qs),
(393,772,o),
(393,682,qs),
(393,143,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
25 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 0 0 71 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 3 1 2 105 5 1 3 0 4 3 4 101 0 0 0 71 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 36 19 34 20 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = iacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (658,0);
ref = acutecomb;
}
);
width = 522;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = ibreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (712,0);
ref = uni0306;
}
);
width = 522;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = icircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (732,0);
ref = uni0302;
}
);
width = 522;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = idieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (694,0);
ref = uni0308;
}
);
width = 522;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = igrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (795,0);
ref = gravecomb;
}
);
width = 522;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = ij;
layers = (
{
layerId = m01;
shapes = (
{
pos = (524,0);
ref = j;
},
{
ref = i;
}
);
width = 1024;
}
);
note = ij;
unicode = 307;
},
{
glyphname = imacron;
kernLeft = imacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (701,0);
ref = uni0304;
}
);
width = 522;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,1114,o),
(342,1073,qs),
(303,1046,o),
(256,1049,q),
(180,1049,o),
(139,1106,qs),
(112,1143,o),
(113,1186,qs),
(113,1256,o),
(170,1296,qs),
(209,1325,o),
(256,1323,qs),
(334,1323,o),
(375,1266,qs),
(401,1227,o),
(401,1186,q),
(401,1186,l)
);
},
{
closed = 1;
nodes = (
(119,-2,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,557,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(373,883,qs),
(402,883,o),
(399,856,qs),
(393,768,o),
(393,682,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,31,qs),
(512,-6,o),
(496,-8,q),
(424,-2,o),
(322,0,q),
(199,-141,o),
(199,-246,qs),
(199,-367,o),
(322,-367,qs),
(383,-367,o),
(426,-336,q),
(446,-342,o),
(444,-375,q),
(368,-488,o),
(227,-487,qs),
(22,-487,o),
(23,-303,qs),
(25,-162,o),
(205,0,q),
(205,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
42 1 7 6 35 1 4 5 33 25 2 3 4 23 1 2 3 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 0 8 5 7 8 105 0 3 0 2 3 2 101 0 1 1 0 97 0 0 0 68 77 0 6 6 71 77 9 1 5 5 4 97 10 1 4 4 69 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 6 0 1 105 0 7 0 8 5 7 8 105 0 3 0 2 3 2 101 0 6 6 71 77 9 1 5 5 4 97 10 1 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 6 0 1 105 0 7 0 8 5 7 8 105 9 1 5 10 1 4 3 5 4 105 0 3 0 2 3 2 101 0 6 6 71 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
63 62 58 57 34 20 37 36 19 36 39 38 35 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = itilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (745,0);
ref = tildecomb;
}
);
width = 522;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,1116,o),
(313,1075,qs),
(274,1048,o),
(227,1049,qs),
(153,1049,o),
(111,1104,qs),
(82,1141,o),
(82,1188,qs),
(82,1256,o),
(139,1296,qs),
(178,1325,o),
(227,1325,qs),
(301,1325,o),
(344,1270,qs),
(373,1231,o),
(373,1188,q),
(373,1188,l)
);
},
{
closed = 1;
nodes = (
(367,764,o),
(367,682,qs),
(367,139,ls),
(367,-47,o),
(356,-129,qs),
(331,-303,o),
(248,-416,qs),
(172,-518,o),
(41,-547,qs),
(4,-555,o),
(-33,-555,qs),
(-92,-555,o),
(-150,-512,qs),
(-193,-477,o),
(-193,-426,qs),
(-193,-369,o),
(-141,-340,qs),
(-114,-326,o),
(-84,-324,qs),
(-37,-324,o),
(-4,-377,qs),
(39,-451,o),
(76,-449,qs),
(121,-449,o),
(131,-358,qs),
(135,-315,o),
(137,-229,qs),
(137,557,ls),
(137,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(375,883,o),
(375,856,q),
(375,856,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
58 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 6 7 6 5 7 128 0 3 0 4 6 3 4 105 0 1 1 0 97 0 0 0 68 77 0 2 2 71 77 0 6 6 7 97 0 7 7 73 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 6 7 6 5 7 128 0 0 0 1 2 0 1 105 0 3 0 4 6 3 4 105 0 2 2 71 77 0 6 6 7 97 0 7 7 73 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 37 34 21 21 38 35 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = j;
unicode = 106;
},
{
glyphname = uni0237;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,764,o),
(367,682,qs),
(367,139,ls),
(367,-47,o),
(356,-129,qs),
(331,-303,o),
(248,-416,qs),
(172,-518,o),
(41,-547,qs),
(4,-555,o),
(-33,-555,qs),
(-92,-555,o),
(-150,-512,qs),
(-193,-477,o),
(-193,-426,qs),
(-193,-369,o),
(-141,-340,qs),
(-114,-326,o),
(-84,-324,qs),
(-37,-324,o),
(-4,-377,qs),
(39,-451,o),
(76,-449,qs),
(121,-449,o),
(131,-358,qs),
(135,-315,o),
(137,-229,qs),
(137,557,ls),
(137,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(375,883,o),
(375,856,q),
(375,856,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
41 1 1 0 1 76 0 3 4 5 4 3 5 128 0 1 0 2 4 1 2 105 0 0 0 71 77 0 4 4 5 97 0 5 5 73 5 78 38 34 37 34 21 17 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uni0237;
unicode = 567;
},
{
glyphname = jcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
pos = (720,0);
ref = uni0302;
}
);
width = 497;
}
);
note = jcircumflex;
unicode = 309;
},
{
glyphname = k;
kernLeft = k;
kernRight = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(999,0,o),
(700,0,o),
(616,-8,q),
(602,-8,o),
(600,68,o),
(616,68,qs),
(690,68,o),
(690,96,qs),
(690,112,o),
(664,145,q),
(469,369,ls),
(444,400,o),
(410,399,qs),
(394,399,o),
(393,365,qs),
(393,143,ls),
(393,67,o),
(502,68,qs),
(516,68,o),
(516,-8,o),
(502,-8,q),
(418,0,o),
(287,0,qs),
(133,0,o),
(49,-8,q),
(35,-8,o),
(35,68,o),
(49,68,qs),
(164,68,o),
(164,139,qs),
(164,1161,l),
(156,1280,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(322,1460,o),
(342,1477,qs),
(354,1487,o),
(371,1487,qs),
(398,1487,o),
(399,1460,q),
(393,1374,o),
(393,1286,qs),
(393,528,ls),
(393,491,o),
(414,492,qs),
(457,492,o),
(494,530,qs),
(647,700,ls),
(680,737,o),
(680,754,qs),
(680,785,o),
(596,784,qs),
(580,784,o),
(580,856,o),
(596,856,q),
(655,850,o),
(813,850,qs),
(952,850,o),
(1016,856,q),
(1030,856,o),
(1030,784,o),
(1016,784,qs),
(912,784,o),
(834,713,qs),
(625,524,ls),
(615,514,o),
(614,506,qs),
(614,492,o),
(625,479,qs),
(954,121,ls),
(1001,68,o),
(1079,68,qs),
(1095,68,o),
(1095,-8,o),
(1079,-8,q),
(1079,-8,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
20 1 2 7 25 1 4 1 2 76 58 1 9 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 11 0 4 11 105 0 5 5 70 77 0 7 7 6 97 0 6 6 68 77 3 1 1 1 2 97 0 2 2 71 77 12 10 8 3 0 0 9 97 13 1 9 9 69 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 0 11 0 4 11 105 12 10 8 3 0 13 1 9 0 9 101 0 5 5 70 77 0 7 7 6 97 0 6 6 68 77 3 1 1 1 2 97 0 2 2 71 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
78 77 73 72 67 65 62 60 57 55 19 34 21 21 37 35 36 24 34 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1071;
}
);
note = k;
unicode = 107;
},
{
glyphname = uni0137;
kernLeft = k;
layers = (
{
layerId = m01;
shapes = (
{
pos = (172,0);
ref = uniF1A0;
},
{
ref = k;
}
);
width = 1071;
}
);
note = uni0137;
unicode = 311;
},
{
glyphname = l;
kernLeft = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,135,qs),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(322,1460,o),
(342,1477,qs),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1378,o),
(393,1286,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(510,-8,o),
(496,-8,q),
(496,-8,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 70 77 0 3 3 2 97 0 2 2 68 77 4 1 0 0 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
4 1 0 0 5 0 5 101 0 1 1 70 77 0 3 3 2 97 0 2 2 68 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 19 34 21 21 34 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = l;
unicode = 108;
},
{
glyphname = lacute;
kernLeft = k;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (855,62);
ref = acutecomb.case;
}
);
width = 522;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = lcaron;
kernLeft = k;
kernRight = lcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = caron.alt;
},
{
ref = l;
}
);
width = 522;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = uni013C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(397,-401,o),
(309,-457,qs),
(235,-504,o),
(137,-506,qs),
(12,-506,o),
(-14,-444,qs),
(-20,-432,o),
(-20,-416,qs),
(-20,-373,o),
(16,-354,qs),
(28,-348,o),
(45,-346,q),
(76,-346,o),
(121,-385,qs),
(164,-422,o),
(184,-424,q),
(237,-424,o),
(238,-373,qs),
(238,-295,o),
(96,-229,qs),
(76,-221,o),
(76,-213,qs),
(76,-209,o),
(82,-201,qs),
(217,0,l),
(137,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,135,qs),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(322,1460,o),
(342,1477,qs),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1378,o),
(393,1286,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(424,0,o),
(326,0,q),
(254,-96,ls),
(246,-108,o),
(246,-115,qs),
(246,-125,o),
(272,-141,q),
(397,-206,o),
(397,-315,q),
(397,-315,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
17 1 3 2 9 1 8 0 55 1 7 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 8 0 7 7 8 114 0 7 0 9 7 9 102 0 2 2 70 77 0 4 4 3 97 0 3 3 68 77 5 1 1 1 0 97 6 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 0 7 0 8 7 128 0 7 0 9 7 9 102 0 2 2 70 77 0 4 4 3 97 0 3 3 68 77 5 1 1 1 0 97 6 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 7 0 8 7 128 5 1 1 6 1 0 8 1 0 105 0 7 0 9 7 9 102 0 2 2 70 77 0 4 4 3 97 0 3 3 68 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
60 58 19 24 20 19 34 21 21 35 23 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni013C;
unicode = 316;
},
{
glyphname = ldot;
layers = (
{
layerId = m01;
shapes = (
{
pos = (356,0);
ref = periodcentered;
},
{
ref = l;
}
);
width = 866;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,668,l),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-6,o),
(496,-8,q),
(412,0,o),
(279,0,qs),
(146,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,500,l),
(0,379,ls),
(-20,365,o),
(-51,412,qs),
(-63,430,o),
(-66,444,q),
(-66,452,o),
(-59,459,q),
(164,623,l),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(322,1458,o),
(342,1477,qs),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1286,l),
(393,793,l),
(580,930,l),
(598,946,o),
(633,897,qs),
(645,879,o),
(645,864,qs),
(645,854,o),
(639,850,q),
(639,850,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
46 30 25 22 7 2 6 3 2 1 76 40 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 70 77 0 2 2 1 97 0 1 1 68 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 3 0 4 3 4 101 0 0 0 70 77 0 2 2 1 97 0 1 1 68 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 36 28 34 20 26 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = m;
kernLeft = m;
kernRight = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1507,0,o),
(1366,0,qs),
(1231,0,o),
(1151,-8,q),
(1135,-8,o),
(1135,68,o),
(1151,68,qs),
(1251,68,o),
(1251,135,qs),
(1251,610,ls),
(1251,762,o),
(1100,762,qs),
(1030,762,o),
(981,700,qs),
(936,645,o),
(936,569,qs),
(936,139,ls),
(936,67,o),
(1040,68,qs),
(1056,68,o),
(1057,-8,o),
(1040,-8,q),
(960,0,o),
(821,0,qs),
(690,0,o),
(606,-8,q),
(592,-8,o),
(592,68,o),
(606,68,qs),
(706,68,o),
(707,131,qs),
(707,565,ls),
(707,698,o),
(662,739,qs),
(635,762,o),
(565,762,qs),
(514,762,o),
(469,729,qs),
(393,672,o),
(393,604,qs),
(393,133,ls),
(393,67,o),
(492,68,qs),
(506,68,o),
(508,-8,o),
(492,-8,q),
(408,0,o),
(272,0,qs),
(135,0,o),
(51,-8,q),
(37,-8,o),
(37,68,o),
(51,68,qs),
(164,68,o),
(164,137,qs),
(164,551,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(371,883,qs),
(400,883,o),
(399,858,qs),
(393,788,l),
(393,770,o),
(401,768,q),
(409,768,o),
(420,778,q),
(502,870,o),
(639,870,qs),
(780,870,o),
(854,743,qs),
(862,727,o),
(870,727,qs),
(880,727,o),
(897,745,qs),
(977,829,o),
(1083,858,qs),
(1126,870,o),
(1167,870,qs),
(1294,870,o),
(1372,801,qs),
(1481,705,o),
(1481,553,qs),
(1481,139,ls),
(1481,67,o),
(1587,68,qs),
(1603,68,o),
(1603,-8,o),
(1587,-8,q),
(1587,-8,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
27 26 2 9 1 1 76 74 50 2 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 0 5 0 4 5 105 13 1 9 9 1 97 3 2 2 1 1 71 77 14 12 10 8 6 5 0 0 7 97 15 11 2 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 5 0 4 5 105 0 3 3 71 77 13 1 9 9 1 97 2 1 1 1 71 77 14 12 10 8 6 5 0 0 7 97 15 11 2 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 0 5 0 4 5 105 14 12 10 8 6 5 0 15 11 2 7 0 7 101 0 3 3 71 77 13 1 9 9 1 97 2 1 1 1 71 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
95 93 89 88 85 83 78 76 73 71 67 66 61 59 35 36 19 34 21 23 40 37 34 16 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1628;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = m;
kernRight = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(963,0,o),
(754,0,o),
(633,-8,qs),
(619,-8,o),
(618,68,o),
(633,68,qs),
(733,68,o),
(733,129,qs),
(733,537,ls),
(733,687,o),
(676,737,qs),
(647,762,o),
(580,762,qs),
(519,762,o),
(461,713,qs),
(393,656,o),
(393,592,qs),
(393,143,ls),
(393,67,o),
(492,68,qs),
(506,68,o),
(508,-8,o),
(492,-8,q),
(408,0,o),
(276,0,qs),
(141,0,o),
(57,-8,q),
(43,-8,o),
(43,68,o),
(57,68,qs),
(163,68,o),
(164,143,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(369,883,qs),
(398,883,o),
(399,856,q),
(393,788,l),
(393,770,o),
(412,768,o),
(420,778,qs),
(463,833,o),
(557,858,qs),
(598,868,o),
(653,870,qs),
(841,870,o),
(928,684,qs),
(965,610,o),
(963,465,qs),
(963,135,ls),
(963,67,o),
(1069,68,qs),
(1085,68,o),
(1085,-8,o),
(1069,-8,q),
(1069,-8,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
41 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 4 0 3 4 105 0 8 8 1 97 2 1 1 1 71 77 9 7 5 3 0 0 6 97 10 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 4 0 3 4 105 0 2 2 71 77 0 8 8 1 97 0 1 1 71 77 9 7 5 3 0 0 6 97 10 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 4 0 3 4 105 0 8 8 1 97 2 1 1 1 71 77 9 7 5 3 0 0 6 97 10 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 4 0 3 4 105 0 2 2 71 77 0 8 8 1 97 0 1 1 71 77 9 7 5 3 0 0 6 97 10 1 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 0 3 4 105 9 7 5 3 0 10 1 6 0 6 101 0 2 2 71 77 0 8 8 1 97 0 1 1 71 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
63 60 58 57 37 35 36 19 34 21 24 37 34 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1085;
}
);
note = n;
unicode = 110;
},
{
glyphname = nacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (1010,0);
ref = acutecomb;
}
);
width = 1085;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = napostrophe;
layers = (
{
layerId = m01;
shapes = (
{
ref = quoteright;
},
{
ref = n;
}
);
width = 1085;
}
);
note = napostrophe;
unicode = 329;
},
{
glyphname = ncaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (1082,0);
ref = uni030C;
}
);
width = 1085;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = uni0146;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (971,0);
ref = uni0326;
}
);
width = 1085;
}
);
note = uni0146;
unicode = 326;
},
{
glyphname = eng;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(965,-47,o),
(934,-260,o),
(825,-465,o),
(653,-555,o),
(565,-555,qs),
(502,-555,o),
(403,-477,o),
(403,-426,qs),
(403,-383,o),
(471,-324,o),
(512,-324,qs),
(559,-324,o),
(637,-449,o),
(711,-449,o),
(733,-334,o),
(733,-229,qs),
(733,537,ls),
(733,687,o),
(676,737,qs),
(647,762,o),
(580,762,qs),
(519,762,o),
(461,713,qs),
(393,656,o),
(393,592,qs),
(393,143,ls),
(393,67,o),
(492,68,qs),
(506,68,o),
(508,-8,o),
(492,-8,q),
(408,0,o),
(276,0,qs),
(141,0,o),
(57,-8,q),
(43,-8,o),
(43,68,o),
(57,68,qs),
(163,68,o),
(164,143,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(369,883,qs),
(398,883,o),
(399,856,q),
(393,788,l),
(393,770,o),
(412,768,o),
(420,778,qs),
(463,833,o),
(557,858,qs),
(598,868,o),
(653,870,qs),
(841,870,o),
(928,684,qs),
(965,610,o),
(963,465,qs),
(965,139,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 9 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 5 8 8 9 114 0 2 0 3 4 2 3 105 0 7 7 0 97 1 1 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 8 8 10 98 0 10 10 73 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 5 8 5 9 8 128 0 2 0 3 4 2 3 105 0 7 7 0 97 1 1 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 8 8 10 98 0 10 10 73 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 5 8 5 9 8 128 0 2 0 3 4 2 3 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 8 8 10 98 0 10 10 73 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 5 8 5 9 8 128 0 2 0 3 4 2 3 105 0 7 7 0 97 1 1 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 8 8 10 98 0 10 10 73 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 5 8 5 9 8 128 0 2 0 3 4 2 3 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 8 8 10 98 0 10 10 73 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 9 5 8 5 9 8 128 0 2 0 3 4 2 3 105 6 1 4 0 5 9 4 5 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 0 8 8 10 98 0 10 10 73 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
62 60 56 54 22 37 35 36 19 34 21 24 35 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1085;
}
);
note = eng;
unicode = 331;
},
{
glyphname = ntilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (1097,0);
ref = tildecomb;
}
);
width = 1085;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = o;
kernLeft = c;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(969,217,o),
(846,94,qs),
(727,-25,o),
(518,-23,qs),
(334,-23,o),
(205,98,qs),
(66,229,o),
(66,424,qs),
(66,594,o),
(176,721,qs),
(307,871,o),
(516,870,qs),
(733,870,o),
(866,713,qs),
(969,590,o),
(969,426,q),
(969,426,l)
);
},
{
closed = 1;
nodes = (
(715,604,o),
(643,713,qs),
(590,795,o),
(518,793,qs),
(436,793,o),
(379,688,qs),
(320,579,o),
(319,420,qs),
(319,236,o),
(391,133,qs),
(442,61,o),
(516,61,qs),
(610,61,o),
(666,174,qs),
(715,275,o),
(715,420,q),
(715,420,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 3 3 0 97 0 0 0 71 77 0 2 2 1 97 0 1 1 69 1 78 38 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 1030;
}
);
note = o;
unicode = 111;
},
{
glyphname = oacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (912,0);
ref = acutecomb;
}
);
width = 1030;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = obreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (966,0);
ref = uni0306;
}
);
width = 1030;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = ocircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (986,0);
ref = uni0302;
}
);
width = 1030;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = odieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (948,0);
ref = uni0308;
}
);
width = 1030;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = ograve;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (1049,0);
ref = gravecomb;
}
);
width = 1030;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = ohungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (958,0);
ref = uni030B;
}
);
width = 1030;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = omacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (955,0);
ref = uni0304;
}
);
width = 1030;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = uni01EB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(715,604,o),
(643,713,qs),
(590,795,o),
(518,793,qs),
(436,793,o),
(379,688,qs),
(320,579,o),
(319,420,qs),
(319,236,o),
(391,133,qs),
(442,61,o),
(516,61,qs),
(610,61,o),
(666,174,qs),
(715,275,o),
(715,420,q),
(715,420,l)
);
},
{
closed = 1;
nodes = (
(969,324,o),
(913,168,o),
(795,49,o),
(625,-29,o),
(496,-156,o),
(496,-246,qs),
(496,-367,o),
(618,-367,qs),
(679,-367,o),
(721,-336,q),
(741,-342,o),
(741,-375,q),
(665,-488,o),
(524,-487,q),
(319,-475,o),
(319,-303,qs),
(319,-151,o),
(500,-23,q),
(328,-17,o),
(205,98,qs),
(66,229,o),
(66,424,qs),
(66,594,o),
(176,721,qs),
(307,871,o),
(516,870,qs),
(733,870,o),
(866,713,qs),
(969,590,o),
(969,426,q),
(969,426,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
37 1 5 3 35 1 4 5 2 76 0 5 0 4 5 4 101 0 1 1 2 97 0 2 2 71 77 0 0 0 3 97 0 3 3 69 3 78 36 35 22 39 38 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1030;
}
);
note = uni01EB;
},
{
glyphname = oslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-94,o),
(207,-94,qs),
(195,-94,o),
(170,-76,qs),
(137,-49,o),
(147,-35,qs),
(227,78,l),
(215,88,o),
(205,98,qs),
(66,229,o),
(66,424,qs),
(66,594,o),
(176,721,qs),
(307,871,o),
(516,870,qs),
(651,870,o),
(754,811,q),
(831,918,ls),
(837,926,o),
(848,926,qs),
(860,926,o),
(883,911,qs),
(924,884,o),
(907,864,q),
(827,754,l),
(847,736,o),
(866,713,qs),
(968,590,o),
(969,426,qs),
(969,217,o),
(846,94,qs),
(727,-25,o),
(518,-23,qs),
(399,-23,o),
(303,27,q),
(221,-88,ls)
);
},
{
closed = 1;
nodes = (
(662,682,l),
(654,698,o),
(643,713,qs),
(590,795,o),
(518,793,qs),
(436,793,o),
(379,688,qs),
(320,579,o),
(319,420,qs),
(319,316,o),
(342,238,q),
(342,238,l)
);
},
{
closed = 1;
nodes = (
(387,137,o),
(391,133,q),
(442,61,o),
(516,61,qs),
(610,61,o),
(666,174,qs),
(715,272,o),
(715,420,qs),
(715,506,o),
(698,575,q),
(385,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
18 1 4 2 56 46 28 10 4 5 4 2 76 0 1 2 1 133 0 3 0 3 134 0 4 4 2 97 0 2 2 71 77 0 5 5 0 97 0 0 0 69 0 78 42 39 43 35 43 33 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1030;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = oslashacute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,1020,o),
(475,1073,qs),
(475,1093,o),
(483,1114,qs),
(604,1415,ls),
(610,1431,o),
(633,1434,q),
(666,1434,o),
(727,1391,qs),
(766,1364,o),
(766,1343,qs),
(766,1337,o),
(762,1331,qs),
(586,1069,ls),
(555,1020,o),
(518,1020,q),
(518,1020,l)
);
},
{
closed = 1;
nodes = (
(217,-94,o),
(207,-94,qs),
(195,-94,o),
(170,-76,qs),
(137,-49,o),
(147,-35,qs),
(227,78,l),
(215,88,o),
(205,98,qs),
(66,229,o),
(66,424,qs),
(66,594,o),
(176,721,qs),
(307,871,o),
(516,870,qs),
(651,870,o),
(754,811,q),
(831,918,ls),
(837,926,o),
(848,926,qs),
(860,926,o),
(883,911,qs),
(924,884,o),
(907,864,q),
(827,754,l),
(847,736,o),
(866,713,qs),
(968,590,o),
(969,426,qs),
(969,217,o),
(846,94,qs),
(727,-25,o),
(518,-23,qs),
(399,-23,o),
(303,27,q),
(221,-88,ls)
);
},
{
closed = 1;
nodes = (
(662,682,l),
(654,698,o),
(643,713,qs),
(590,795,o),
(518,793,qs),
(436,793,o),
(379,688,qs),
(320,579,o),
(319,420,qs),
(319,316,o),
(342,238,q),
(342,238,l)
);
},
{
closed = 1;
nodes = (
(387,137,o),
(391,133,q),
(442,61,o),
(516,61,qs),
(610,61,o),
(666,174,qs),
(715,272,o),
(715,420,qs),
(715,506,o),
(698,575,q),
(385,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
35 1 6 4 73 63 45 27 4 7 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 133 8 1 0 3 0 133 0 3 4 3 133 0 5 2 5 134 0 6 6 4 97 0 4 4 71 77 0 7 7 2 97 0 2 2 69 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 0 1 3 1 0 3 128 0 3 4 1 3 4 126 0 5 2 5 134 0 1 1 74 77 0 6 6 4 97 0 4 4 71 77 0 7 7 2 97 0 2 2 69 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 133 8 1 0 3 0 133 0 3 4 3 133 0 5 2 5 134 0 6 6 4 97 0 4 4 71 77 0 7 7 2 97 0 2 2 69 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 0 1 3 1 0 3 128 0 3 4 1 3 4 126 0 5 2 5 134 0 1 1 74 77 0 6 6 4 97 0 4 4 71 77 0 7 7 2 97 0 2 2 69 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 133 8 1 0 3 0 133 0 3 4 3 133 0 5 2 5 134 0 6 6 4 97 0 4 4 71 77 0 7 7 2 97 0 2 2 69 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 72 70 60 58 51 49 38 36 33 31 20 18 9 8 0 16 1 15 9 11 22 
CALL[ ]	/* CallFunction */";
};
width = 1030;
}
);
note = oslashacute;
unicode = 511;
},
{
glyphname = otilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (999,0);
ref = tildecomb;
}
);
width = 1030;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = oe;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1468,536,o),
(1378,537,qs),
(967,537,ls),
(957,537,o),
(956,510,qs),
(956,315,o),
(1032,207,qs),
(1095,115,o),
(1200,113,qs),
(1278,113,o),
(1356,160,qs),
(1383,176,o),
(1386,178,q),
(1397,180,l),
(1420,180,o),
(1436,150,qs),
(1442,140,o),
(1444,131,q),
(1442,121,l),
(1440,119,ls),
(1379,53,o),
(1284,12,qs),
(1200,-25,o),
(1114,-25,qs),
(985,-25,o),
(877,82,qs),
(863,96,o),
(848,113,q),
(729,-22,o),
(506,-23,qs),
(322,-23,o),
(193,98,qs),
(74,211,o),
(55,373,qs),
(53,400,o),
(53,424,qs),
(53,594,o),
(164,719,qs),
(277,846,o),
(449,866,qs),
(478,868,o),
(504,870,q),
(709,870,o),
(834,731,qs),
(840,725,l),
(934,834,o),
(1057,862,qs),
(1090,870,o),
(1120,870,qs),
(1280,870,o),
(1391,756,qs),
(1457,688,o),
(1466,627,qs),
(1468,612,l)
);
},
{
closed = 1;
nodes = (
(1237,733,o),
(1180,772,qs),
(1151,790,o),
(1122,791,qs),
(989,791,o),
(969,653,qs),
(965,626,o),
(989,627,qs),
(1223,627,ls),
(1249,626,o),
(1245,651,q),
(1245,651,l)
);
},
{
closed = 1;
nodes = (
(702,604,o),
(631,713,qs),
(580,793,o),
(506,793,qs),
(422,793,o),
(367,688,qs),
(308,579,o),
(307,420,qs),
(307,236,o),
(381,133,qs),
(432,61,o),
(504,61,qs),
(598,61,o),
(653,176,qs),
(702,275,o),
(702,420,q),
(702,420,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
8 1 8 9 53 1 7 8 25 1 10 6 3 76 0 5 7 6 7 5 6 128 0 8 0 7 5 8 7 103 11 1 9 9 0 97 2 1 2 0 0 71 77 0 6 6 3 97 4 1 3 3 69 77 0 10 10 3 97 4 1 3 3 69 3 78 79 77 71 69 62 60 51 52 36 24 36 41 17 21 35 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1546;
}
);
note = oe;
unicode = 339;
},
{
glyphname = p;
kernLeft = p;
kernRight = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(958,127,o),
(758,23,qs),
(670,-22,o),
(526,-23,qs),
(436,-23,o),
(399,-4,qs),
(391,0,o),
(385,0,qs),
(367,0,o),
(367,-27,qs),
(367,-397,ls),
(367,-483,o),
(508,-483,qs),
(522,-483,o),
(522,-559,o),
(508,-559,q),
(424,-551,o),
(256,-551,qs),
(113,-551,o),
(33,-559,q),
(17,-559,o),
(16,-483,o),
(33,-483,qs),
(135,-483,o),
(137,-399,qs),
(137,549,ls),
(137,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(100,756,o),
(236,825,qs),
(293,856,o),
(313,872,qs),
(327,882,o),
(340,883,qs),
(367,883,o),
(371,862,q),
(367,815,l),
(367,790,o),
(381,791,qs),
(393,791,o),
(408,809,qs),
(437,842,o),
(492,860,qs),
(523,868,o),
(559,870,q),
(709,870,o),
(801,805,qs),
(958,690,o),
(958,475,q),
(958,475,l)
);
},
{
closed = 1;
nodes = (
(725,626,o),
(641,719,q),
(590,770,o),
(518,770,qs),
(432,770,o),
(379,686,qs),
(367,668,o),
(367,616,qs),
(367,178,l),
(373,59,o),
(545,59,qs),
(633,59,o),
(688,199,qs),
(725,290,o),
(725,401,q),
(725,401,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
13 12 2 1 0 1 76 36 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 11 0 1 11 128 0 3 0 4 10 3 4 105 0 11 11 0 97 2 1 0 0 71 77 0 8 8 69 77 0 10 10 9 98 0 9 9 69 77 7 1 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 11 0 1 11 128 0 3 0 4 10 3 4 105 0 2 2 71 77 0 11 11 0 97 0 0 0 71 77 0 8 8 69 77 0 10 10 9 98 0 9 9 69 77 7 1 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 11 0 1 11 128 0 3 0 4 10 3 4 105 0 11 11 0 97 2 1 0 0 71 77 0 8 8 69 77 0 10 10 9 98 0 9 9 69 77 7 1 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 11 0 1 11 128 0 3 0 4 10 3 4 105 0 2 2 71 77 0 11 11 0 97 0 0 0 71 77 0 8 8 69 77 0 10 10 9 98 0 9 9 69 77 7 1 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 11 0 1 11 128 0 8 10 9 9 8 114 0 3 0 4 10 3 4 105 0 2 2 71 77 0 11 11 0 97 0 0 0 71 77 0 10 10 9 98 0 9 9 69 77 7 1 5 5 6 97 0 6 6 73 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
65 63 58 56 49 47 35 35 36 19 34 21 19 36 35 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = p;
unicode = 112;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,244,o),
(735,92,qs),
(631,26,o),
(391,-12,qs),
(366,-16,o),
(367,-45,qs),
(367,-393,ls),
(367,-473,o),
(285,-500,qs),
(111,-557,l),
(82,-563,o),
(57,-518,q),
(39,-479,o),
(61,-465,qs),
(123,-422,l),
(137,-414,o),
(137,-391,qs),
(137,1153,ls),
(137,1286,o),
(45,1286,qs),
(31,1286,o),
(31,1360,o),
(45,1360,qs),
(88,1360,o),
(231,1427,qs),
(297,1458,o),
(317,1477,q),
(331,1487,o),
(346,1487,qs),
(375,1487,o),
(375,1458,q),
(367,1327,o),
(367,1229,qs),
(367,825,ls),
(367,802,o),
(381,803,qs),
(389,803,o),
(399,811,qs),
(469,870,o),
(588,870,qs),
(748,870,o),
(852,793,qs),
(977,698,o),
(977,508,q),
(977,508,l)
);
},
{
closed = 1;
nodes = (
(723,779,o),
(545,778,qs),
(441,778,o),
(379,688,q),
(367,663,o),
(367,625,qs),
(367,100,ls),
(367,82,o),
(385,82,qs),
(395,82,l),
(526,98,o),
(606,195,qs),
(723,336,o),
(723,457,q),
(723,457,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
10 8 2 5 0 1 76 0 4 5 4 134 0 1 1 70 77 0 3 3 2 97 0 2 2 68 77 0 5 5 0 97 0 0 0 71 5 78 58 56 51 49 34 21 25 35 6 11 26 
CALL[ ]	/* CallFunction */";
};
width = 1044;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(936,-551,o),
(625,-551,o),
(541,-559,q),
(527,-559,o),
(526,-483,o),
(541,-483,qs),
(664,-483,o),
(664,-397,qs),
(664,-6,l),
(603,-22,o),
(514,-23,qs),
(65,-23,o),
(66,481,qs),
(66,653,o),
(180,766,qs),
(289,870,o),
(467,870,qs),
(621,870,o),
(711,817,qs),
(717,813,o),
(725,811,q),
(834,864,ls),
(869,880,o),
(899,836,qs),
(924,801,o),
(907,788,q),
(893,774,o),
(893,616,qs),
(893,-399,ls),
(893,-483,o),
(1016,-483,qs),
(1032,-483,o),
(1032,-559,o),
(1016,-559,q),
(1016,-559,l)
);
},
{
closed = 1;
nodes = (
(664,643,ls),
(664,666,o),
(655,678,qs),
(587,770,o),
(508,770,qs),
(299,770,o),
(299,420,qs),
(299,266,o),
(350,160,qs),
(397,60,o),
(487,59,qs),
(608,59,o),
(645,117,qs),
(664,143,o),
(664,180,q),
(664,180,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
13 1 6 1 25 1 2 5 2 76 0 6 6 1 97 0 1 1 71 77 0 5 5 2 97 0 2 2 69 77 3 1 0 0 4 97 0 4 4 73 4 78 36 37 20 19 36 44 34 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 978;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(756,693,o),
(715,657,qs),
(688,632,o),
(653,633,qs),
(602,633,o),
(551,684,qs),
(528,707,o),
(502,707,qs),
(459,707,o),
(426,649,qs),
(393,594,o),
(393,522,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(123,756,o),
(262,825,qs),
(321,856,o),
(342,872,qs),
(354,882,o),
(371,883,qs),
(396,883,o),
(399,862,q),
(393,788,l),
(393,765,o),
(420,766,o),
(442,791,qs),
(510,871,o),
(610,870,qs),
(680,870,o),
(725,825,qs),
(756,795,o),
(756,752,q),
(756,752,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
10 9 2 1 0 1 76 33 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 4 5 8 9 114 3 1 1 0 4 9 1 4 105 0 8 8 0 97 2 1 0 0 71 77 7 1 5 5 6 98 0 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 4 5 4 9 5 128 3 1 1 0 4 9 1 4 105 0 8 8 0 97 2 1 0 0 71 77 7 1 5 5 6 98 0 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 4 5 4 9 5 128 3 1 1 0 4 9 1 4 105 0 2 2 71 77 0 8 8 0 97 0 0 0 71 77 7 1 5 5 6 98 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 9 4 5 4 9 5 128 3 1 1 0 4 9 1 4 105 7 1 5 0 6 5 6 102 0 2 2 71 77 0 8 8 0 97 0 0 0 71 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
48 46 37 35 36 19 34 21 19 18 35 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = r;
unicode = 114;
},
{
glyphname = racute;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (794,0);
ref = acutecomb;
}
);
width = 753;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (866,0);
ref = uni030C;
}
);
width = 753;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = uni0157;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,-401,o),
(342,-457,qs),
(268,-504,o),
(170,-506,qs),
(45,-506,o),
(18,-444,qs),
(12,-432,o),
(12,-416,qs),
(12,-373,o),
(47,-354,qs),
(59,-348,o),
(78,-346,q),
(109,-346,o),
(152,-385,qs),
(195,-422,o),
(217,-424,q),
(270,-424,o),
(270,-373,qs),
(270,-295,o),
(127,-229,qs),
(107,-221,o),
(109,-213,q),
(109,-209,o),
(115,-201,qs),
(250,0,l),
(133,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(123,756,o),
(262,825,qs),
(321,856,o),
(342,872,qs),
(354,882,o),
(371,883,qs),
(396,883,o),
(399,862,q),
(393,788,l),
(393,765,o),
(420,766,o),
(442,791,qs),
(510,871,o),
(610,870,qs),
(680,870,o),
(725,825,qs),
(756,794,o),
(756,752,qs),
(756,693,o),
(715,657,qs),
(688,632,o),
(653,633,qs),
(602,633,o),
(551,684,qs),
(528,707,o),
(502,707,qs),
(459,707,o),
(426,649,qs),
(393,594,o),
(393,522,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(437,-2,o),
(356,0,q),
(287,-96,ls),
(279,-108,o),
(276,-115,q),
(276,-125,o),
(305,-141,qs),
(428,-206,o),
(428,-315,q),
(428,-315,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
37 36 2 5 4 9 1 12 0 75 1 11 12 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 8 1 2 3 114 0 12 0 11 11 12 114 7 1 5 0 8 3 5 8 105 0 11 0 13 11 13 102 0 2 2 4 97 6 1 4 4 71 77 9 1 1 1 0 98 10 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 8 1 2 3 114 0 12 0 11 0 12 11 128 7 1 5 0 8 3 5 8 105 0 11 0 13 11 13 102 0 2 2 4 97 6 1 4 4 71 77 9 1 1 1 0 98 10 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 8 1 8 3 1 128 0 12 0 11 0 12 11 128 7 1 5 0 8 3 5 8 105 0 11 0 13 11 13 102 0 2 2 4 97 6 1 4 4 71 77 9 1 1 1 0 98 10 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 3 8 1 8 3 1 128 0 12 0 11 0 12 11 128 7 1 5 0 8 3 5 8 105 0 11 0 13 11 13 102 0 6 6 71 77 0 2 2 4 97 0 4 4 71 77 9 1 1 1 0 98 10 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 3 8 1 8 3 1 128 0 12 0 11 0 12 11 128 7 1 5 0 8 3 5 8 105 9 1 1 10 1 0 12 1 0 106 0 11 0 13 11 13 102 0 6 6 71 77 0 2 2 4 97 0 4 4 71 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
80 78 71 70 67 66 58 57 53 52 34 21 19 18 38 34 37 35 23 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uni0157;
unicode = 343;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-23,o),
(106,37,q),
(77,105,o),
(78,258,qs),
(78,276,o),
(113,276,qs),
(152,276,o),
(154,260,qs),
(158,207,o),
(221,133,qs),
(287,57,o),
(379,57,qs),
(428,57,o),
(469,98,qs),
(502,133,o),
(502,174,qs),
(502,295,o),
(330,340,qs),
(154,387,o),
(92,489,qs),
(61,540,o),
(63,612,qs),
(63,727,o),
(164,801,qs),
(256,871,o),
(387,870,qs),
(510,870,o),
(604,834,q),
(643,730,o),
(643,643,qs),
(643,625,o),
(612,625,qs),
(579,625,o),
(578,635,q),
(560,686,o),
(498,748,qs),
(457,789,o),
(373,788,qs),
(312,788,o),
(274,737,qs),
(251,706,o),
(252,674,qs),
(252,574,o),
(420,532,qs),
(580,491,o),
(643,416,qs),
(692,355,o),
(694,258,qs),
(694,125,o),
(584,43,qs),
(489,-25,o),
(346,-23,q),
(346,-23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 71 77 0 4 4 0 97 6 1 0 0 69 0 78 1 0 47 46 41 39 27 25 21 20 15 13 0 52 1 51 7 11 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = s;
unicode = 115;
},
{
glyphname = sacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (781,0);
ref = acutecomb;
}
);
width = 747;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = scaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (853,0);
ref = uni030C;
}
);
width = 747;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = scedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,-418,o),
(377,-473,qs),
(303,-520,o),
(205,-520,qs),
(80,-520,o),
(53,-461,qs),
(47,-449,o),
(47,-430,qs),
(47,-387,o),
(84,-371,qs),
(96,-365,o),
(113,-362,q),
(144,-362,o),
(188,-401,qs),
(231,-438,o),
(254,-438,qs),
(307,-438,o),
(305,-387,qs),
(305,-309,o),
(164,-246,qs),
(144,-238,o),
(143,-229,qs),
(143,-225,o),
(150,-215,qs),
(283,-20,l),
(179,-10,o),
(106,37,q),
(77,105,o),
(78,258,qs),
(78,276,o),
(113,276,qs),
(152,276,o),
(154,260,qs),
(158,207,o),
(221,133,qs),
(287,57,o),
(379,57,qs),
(428,57,o),
(469,98,qs),
(502,133,o),
(502,174,qs),
(502,295,o),
(330,340,qs),
(154,387,o),
(92,489,qs),
(61,540,o),
(63,612,qs),
(63,727,o),
(164,801,qs),
(256,871,o),
(387,870,qs),
(510,870,o),
(604,834,q),
(643,730,o),
(643,643,qs),
(643,625,o),
(612,625,qs),
(579,625,o),
(578,635,q),
(560,686,o),
(498,748,qs),
(457,789,o),
(373,788,qs),
(312,788,o),
(274,737,qs),
(251,706,o),
(252,674,qs),
(252,574,o),
(420,532,qs),
(580,491,o),
(643,416,qs),
(692,355,o),
(694,258,qs),
(694,125,o),
(584,43,qs),
(504,-14,o),
(389,-23,q),
(322,-113,ls),
(314,-125,o),
(313,-131,q),
(313,-141,o),
(342,-158,qs),
(465,-223,o),
(465,-332,q),
(465,-332,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
62 59 2 6 3 76 1 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 3 6 0 3 6 126 0 6 5 5 6 112 0 0 0 2 97 0 2 2 71 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 3 6 0 3 6 126 0 6 5 5 6 112 0 5 0 7 5 7 102 0 0 0 2 97 0 2 2 71 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 3 6 0 3 6 126 0 6 5 0 6 5 126 0 5 0 7 5 7 102 0 0 0 2 97 0 2 2 71 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
81 79 72 71 69 67 54 53 48 46 34 32 28 27 22 20 8 11 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = scedilla;
unicode = 351;
},
{
glyphname = scircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (855,0);
ref = uni0302;
}
);
width = 747;
}
);
note = scircumflex;
unicode = 349;
},
{
glyphname = uni0219;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (782,0);
ref = uni0326;
}
);
width = 747;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1124,115,o),
(1016,35,qs),
(936,-24,o),
(813,-25,qs),
(704,-25,o),
(618,37,q),
(589,109,o),
(590,217,qs),
(590,235,o),
(625,236,qs),
(666,236,o),
(666,219,qs),
(666,172,o),
(723,113,qs),
(778,58,o),
(838,57,qs),
(932,57,o),
(932,174,qs),
(932,303,o),
(795,381,qs),
(559,512,o),
(559,674,qs),
(559,801,o),
(723,918,qs),
(844,1004,o),
(842,1139,qs),
(842,1227,o),
(795,1303,qs),
(740,1391,o),
(647,1391,qs),
(516,1391,o),
(442,1200,qs),
(393,1073,o),
(393,893,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,31,qs),
(543,-8,o),
(526,-8,q),
(446,0,o),
(287,0,qs),
(140,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(56,705,o),
(55,778,o),
(72,778,qs),
(164,778,o),
(164,891,qs),
(164,1167,o),
(309,1321,qs),
(465,1487,o),
(674,1487,qs),
(860,1487,o),
(971,1382,qs),
(1059,1296,o),
(1059,1178,qs),
(1059,1047,o),
(862,907,qs),
(747,827,o),
(748,735,qs),
(748,647,o),
(885,573,qs),
(1026,497,o),
(1085,399,qs),
(1124,336,o),
(1124,258,q),
(1124,258,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
65 1 3 8 38 1 4 3 36 1 9 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
65 1 3 8 38 1 4 7 36 1 9 4 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 2 3 2 8 3 128 0 1 0 2 8 1 2 105 0 6 6 0 97 0 0 0 70 77 7 5 2 3 3 4 97 0 4 4 69 77 7 5 2 3 3 9 97 0 9 9 69 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 2 3 2 8 3 128 0 1 0 2 8 1 2 105 5 1 3 0 4 9 3 4 105 0 6 6 0 97 0 0 0 70 77 0 7 7 9 97 0 9 9 69 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
74 72 21 44 37 36 36 19 50 20 45 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1150;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = longs;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(56,705,o),
(55,778,o),
(72,778,qs),
(119,778,o),
(164,850,o),
(164,891,qs),
(164,1176,o),
(471,1487,o),
(674,1487,qs),
(780,1487,o),
(897,1405,o),
(897,1339,qs),
(897,1292,o),
(817,1223,o),
(784,1223,qs),
(688,1223,o),
(608,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1196,o),
(393,1049,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(293,0,qs),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 1 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 6 3 4 114 0 6 0 7 0 6 7 105 0 3 3 5 97 0 5 5 70 77 2 1 0 0 1 97 0 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 6 3 4 6 128 0 6 0 7 0 6 7 105 0 3 3 5 97 0 5 5 70 77 2 1 0 0 1 97 0 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 6 3 4 6 128 0 6 0 7 0 6 7 105 2 1 0 0 1 0 1 101 0 3 3 5 97 0 5 5 70 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
50 20 36 33 36 35 36 17 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = longs;
unicode = 383;
},
{
glyphname = t;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(577,-23,o),
(412,-23,qs),
(193,-21,o),
(160,160,qs),
(154,193,o),
(154,233,qs),
(154,715,ls),
(154,746,o),
(123,745,qs),
(68,745,ls),
(52,745,o),
(51,819,o),
(68,819,qs),
(129,819,o),
(201,879,qs),
(271,936,o),
(293,1004,qs),
(297,1016,o),
(336,1006,qs),
(379,994,o),
(385,975,q),
(385,881,ls),
(385,850,o),
(416,850,qs),
(631,850,ls),
(645,850,o),
(645,745,o),
(631,745,qs),
(416,745,ls),
(385,745,o),
(385,715,qs),
(385,299,ls),
(385,178,o),
(420,139,qs),
(447,108,o),
(506,109,qs),
(557,109,o),
(633,156,q),
(643,164,o),
(672,131,qs),
(690,108,o),
(688,96,qs),
(688,92,o),
(686,90,q),
(686,90,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
23 1 2 74 0 3 1 1 3 89 4 1 1 1 2 95 0 2 2 71 77 0 0 0 5 97 0 5 5 69 5 78 37 50 25 50 37 39 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = t;
unicode = 116;
},
{
glyphname = tcaron;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-10,-150);
ref = caron.alt;
},
{
ref = t;
}
);
width = 669;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = uni0163;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(530,-416,o),
(442,-471,qs),
(368,-518,o),
(270,-518,qs),
(145,-518,o),
(121,-459,qs),
(115,-447,o),
(115,-428,qs),
(115,-385,o),
(150,-369,qs),
(162,-363,o),
(178,-360,q),
(209,-360,o),
(254,-399,qs),
(297,-436,o),
(319,-436,qs),
(372,-436,o),
(373,-385,qs),
(373,-307,o),
(229,-244,qs),
(209,-236,o),
(211,-227,q),
(211,-223,o),
(215,-213,q),
(348,-18,l),
(188,7,o),
(160,160,qs),
(154,193,o),
(154,233,qs),
(154,715,ls),
(154,746,o),
(123,745,qs),
(68,745,ls),
(52,745,o),
(51,819,o),
(68,819,qs),
(129,819,o),
(201,879,qs),
(271,936,o),
(293,1004,qs),
(297,1016,o),
(336,1006,qs),
(379,994,o),
(385,975,q),
(385,881,ls),
(385,850,o),
(416,850,qs),
(631,850,ls),
(645,850,o),
(645,745,o),
(631,745,qs),
(416,745,ls),
(385,745,o),
(385,715,qs),
(385,299,ls),
(385,178,o),
(420,139,qs),
(447,108,o),
(506,109,qs),
(557,109,o),
(633,156,q),
(643,164,o),
(672,131,qs),
(697,100,o),
(686,90,qs),
(592,-8,o),
(455,-20,q),
(387,-111,ls),
(379,-123,o),
(379,-129,qs),
(379,-139,o),
(408,-156,qs),
(530,-221,o),
(530,-330,q),
(530,-330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
49 1 6 0 66 1 5 6 2 76 30 1 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 1 6 1 0 6 128 0 6 5 5 6 112 0 3 1 1 3 89 4 1 1 1 2 95 0 2 2 71 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 6 1 0 6 128 0 6 5 5 6 112 0 3 1 1 3 89 0 5 0 7 5 7 102 4 1 1 1 2 95 0 2 2 71 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 6 1 0 6 128 0 6 5 1 6 5 126 0 3 1 1 3 89 0 5 0 7 5 7 102 4 1 1 1 2 95 0 2 2 71 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
39 18 46 50 25 50 37 46 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = u;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1030,29,o),
(934,10,qs),
(907,6,o),
(883,0,qs),
(828,-12,o),
(768,-31,qs),
(756,-35,o),
(743,-35,qs),
(729,-35,o),
(729,10,qs),
(729,57,ls),
(729,80,o),
(705,80,o),
(690,66,qs),
(598,-22,o),
(444,-23,qs),
(317,-23,o),
(274,12,qs),
(127,131,o),
(127,309,qs),
(127,655,ls),
(127,757,o),
(43,758,qs),
(29,758,o),
(29,831,o),
(43,831,qs),
(156,831,o),
(266,850,qs),
(297,854,o),
(317,854,qs),
(362,854,o),
(362,811,q),
(356,713,o),
(356,649,qs),
(356,307,ls),
(356,184,o),
(406,125,qs),
(435,92,o),
(504,92,qs),
(567,92,o),
(637,147,qs),
(690,190,o),
(690,240,qs),
(690,655,ls),
(690,757,o),
(606,758,qs),
(590,758,o),
(590,831,o),
(606,831,qs),
(717,831,o),
(836,850,qs),
(861,854,o),
(874,854,qs),
(927,854,o),
(928,817,q),
(920,723,o),
(920,662,qs),
(920,256,ls),
(920,166,o),
(930,139,qs),
(944,98,o),
(981,98,qs),
(993,98,o),
(1016,104,qs),
(1032,108,o),
(1042,72,q),
(1044,58,o),
(1044,49,qs),
(1044,33,o),
(1038,31,q),
(1038,31,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 1 3 2 2 1 8 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 0 8 0 9 8 128 5 1 1 1 71 77 7 1 3 3 2 97 6 1 2 2 71 77 4 1 0 0 8 97 10 1 8 8 69 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 0 8 0 9 8 128 6 1 2 7 1 3 0 2 3 105 5 1 1 1 71 77 4 1 0 0 8 97 10 1 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 9 0 8 0 9 8 128 6 1 2 7 1 3 0 2 3 105 5 1 1 1 71 77 4 1 0 0 8 97 0 8 8 69 77 0 10 10 75 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
63 61 58 57 37 34 18 39 37 34 19 23 39 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1026;
}
);
note = u;
unicode = 117;
},
{
glyphname = uacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (910,0);
ref = acutecomb;
}
);
width = 1026;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ubreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (964,0);
ref = uni0306;
}
);
width = 1026;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = ucircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (984,0);
ref = uni0302;
}
);
width = 1026;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (946,0);
ref = uni0308;
}
);
width = 1026;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = ugrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (1047,0);
ref = gravecomb;
}
);
width = 1026;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uhungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (956,0);
ref = uni030B;
}
);
width = 1026;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = umacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (953,0);
ref = uni0304;
}
);
width = 1026;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uni0180;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,233,o),
(758,-23,o),
(537,-23,qs),
(480,-23,o),
(350,31,o),
(303,31,qs),
(287,31,o),
(231,-20,o),
(215,-20,qs),
(184,-20,o),
(141,12,qs),
(121,26,o),
(123,35,qs),
(129,68,o),
(129,279,qs),
(129,1032,ls),
(129,1069,o),
(92,1069,qs),
(-55,1069,ls),
(-71,1069,o),
(-72,1174,o),
(-55,1174,qs),
(92,1174,ls),
(125,1174,o),
(125,1194,q),
(115,1284,o),
(35,1286,qs),
(19,1286,o),
(18,1360,o),
(35,1360,qs),
(82,1360,o),
(276,1450,o),
(309,1477,qs),
(321,1487,o),
(338,1487,qs),
(367,1487,o),
(367,1462,q),
(359,1351,o),
(358,1286,qs),
(358,1210,ls),
(358,1173,o),
(395,1174,qs),
(535,1174,ls),
(549,1174,o),
(551,1069,o),
(535,1069,qs),
(395,1069,ls),
(358,1069,o),
(358,1032,qs),
(358,840,ls),
(358,811,o),
(375,811,qs),
(383,811,o),
(393,819,qs),
(467,870,o),
(561,870,qs),
(737,870,o),
(981,626,o),
(981,440,q),
(981,440,l)
);
},
{
closed = 1;
nodes = (
(727,586,o),
(600,770,o),
(502,770,qs),
(430,770,o),
(389,727,qs),
(358,696,o),
(358,647,qs),
(358,297,ls),
(358,186,o),
(481,57,o),
(565,57,qs),
(727,57,o),
(727,428,q),
(727,428,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
22 1 4 3 34 1 2 5 9 7 2 12 0 46 1 9 11 4 76 0 9 11 8 11 9 8 128 6 1 2 7 1 1 0 2 1 106 0 3 3 70 77 0 5 5 4 97 0 4 4 68 77 0 12 12 0 97 0 0 0 71 77 0 11 11 8 97 10 1 8 8 69 8 78 71 69 63 61 57 55 54 52 23 50 34 34 20 21 50 39 34 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = uni0180;
unicode = 384;
},
{
glyphname = uni0195;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(311,1454,o),
(342,1477,qs),
(354,1487,o),
(371,1487,qs),
(400,1487,o),
(399,1460,qs),
(393,1384,o),
(393,1286,qs),
(393,821,ls),
(393,798,o),
(403,799,qs),
(411,799,o),
(426,809,q),
(504,870,o),
(637,870,qs),
(725,870,o),
(864,805,o),
(963,643,o),
(963,557,qs),
(963,311,ls),
(963,166,o),
(1069,61,o),
(1135,61,qs),
(1246,61,o),
(1360,256,o),
(1360,436,qs),
(1360,665,o),
(1147,727,q),
(1147,778,o),
(1260,870,o),
(1329,870,qs),
(1464,870,o),
(1614,586,o),
(1614,426,qs),
(1614,291,o),
(1507,90,o),
(1313,-23,o),
(1112,-23,qs),
(952,-23,o),
(733,158,o),
(733,305,qs),
(733,555,ls),
(733,631,o),
(655,762,o),
(475,762,o),
(422,698,qs),
(393,663,o),
(393,627,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(398,0,o),
(274,0,qs),
(149,0,o),
(51,-8,q),
(37,-8,o),
(37,68,o),
(51,68,qs),
(164,67,o),
(164,137,q),
(164,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
57 1 9 8 54 1 3 5 35 1 0 3 9 1 4 1 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 8 70 77 0 10 10 9 97 0 9 9 68 77 0 3 3 5 97 7 1 5 5 71 77 6 2 2 0 0 1 97 0 1 1 69 77 6 2 2 0 0 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 4 0 1 89 0 8 8 70 77 0 10 10 9 97 0 9 9 68 77 0 3 3 5 97 7 1 5 5 71 77 6 2 2 0 0 4 97 0 4 4 69 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
69 67 65 64 25 38 38 37 37 21 35 36 17 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1673;
}
);
note = uni0195;
unicode = 405;
},
{
glyphname = uni01BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(834,354,o),
(684,141,o),
(487,6,o),
(391,-12,qs),
(366,-16,o),
(367,-45,qs),
(367,-393,ls),
(367,-473,o),
(285,-500,qs),
(111,-557,l),
(96,-557,ls),
(76,-557,o),
(57,-518,q),
(51,-502,o),
(49,-489,q),
(49,-473,o),
(61,-465,qs),
(123,-422,l),
(137,-414,o),
(137,-391,qs),
(137,549,ls),
(137,639,o),
(80,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(293,856,o),
(313,872,qs),
(327,882,o),
(342,883,qs),
(371,883,o),
(371,850,qs),
(371,846,o),
(367,819,o),
(367,815,qs),
(367,799,o),
(379,799,qs),
(389,799,o),
(399,811,qs),
(450,870,o),
(532,870,qs),
(653,870,o),
(834,684,o),
(834,477,q),
(834,477,l)
);
},
{
closed = 1;
nodes = (
(604,657,o),
(537,778,o),
(489,778,qs),
(428,778,o),
(379,688,qs),
(367,663,o),
(367,625,qs),
(367,100,l),
(369,80,o),
(385,80,qs),
(420,80,o),
(518,178,o),
(575,287,o),
(604,389,o),
(604,434,q),
(604,434,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
54 1 6 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 7 0 1 7 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 7 7 0 97 2 1 0 0 71 77 0 5 5 73 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 7 0 1 7 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 2 2 71 77 0 7 7 0 97 0 0 0 71 77 0 5 5 73 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 51 27 34 20 21 34 34 8 11 28 
CALL[ ]	/* CallFunction */";
};
width = 903;
}
);
note = uni01BF;
unicode = 447;
},
{
glyphname = uni01C6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1040,0);
ref = caron;
},
{
pos = (1036,0);
ref = z;
},
{
ref = d;
}
);
width = 1804;
}
);
note = uni01C6;
unicode = 454;
},
{
glyphname = uni01C9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (524,0);
ref = j;
},
{
ref = l;
}
);
width = 1021;
}
);
note = uni01C9;
unicode = 457;
},
{
glyphname = uni01CC;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1087,0);
ref = j;
},
{
ref = n;
}
);
width = 1585;
}
);
note = uni01CC;
unicode = 460;
},
{
glyphname = uni01CE;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (898,0);
ref = uni030C;
}
);
width = 858;
}
);
note = uni01CE;
unicode = 462;
},
{
glyphname = uni01D0;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (730,0);
ref = uni030C;
}
);
width = 522;
}
);
note = uni01D0;
unicode = 464;
},
{
glyphname = uni01D2;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (984,0);
ref = uni030C;
}
);
width = 1030;
}
);
note = uni01D2;
unicode = 466;
},
{
glyphname = uni01D4;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (982,0);
ref = uni030C;
}
);
width = 1026;
}
);
note = uni01D4;
unicode = 468;
},
{
glyphname = uni01D6;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (946,0);
ref = uni0308;
},
{
pos = (953,384);
ref = uni0304;
}
);
width = 1026;
}
);
note = uni01D6;
unicode = 470;
},
{
glyphname = uni01D8;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (946,0);
ref = uni0308;
},
{
pos = (910,384);
ref = acutecomb;
}
);
width = 1026;
}
);
note = uni01D8;
unicode = 472;
},
{
glyphname = uni01DA;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (946,0);
ref = uni0308;
},
{
pos = (982,384);
ref = uni030C;
}
);
width = 1026;
}
);
note = uni01DA;
unicode = 474;
},
{
glyphname = uni01DC;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (946,0);
ref = uni0308;
},
{
pos = (1047,384);
ref = gravecomb;
}
);
width = 1026;
}
);
note = uni01DC;
unicode = 476;
},
{
glyphname = uni01DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,312,o),
(154,309,q),
(539,309,ls),
(576,309,o),
(575,338,qs),
(575,576,o),
(465,672,qs),
(404,725,o),
(311,725,qs),
(229,725,o),
(145,670,q),
(125,660,o),
(96,694,qs),
(69,729,o),
(82,741,qs),
(129,790,o),
(215,829,qs),
(303,870,o),
(418,870,qs),
(553,870,o),
(662,762,qs),
(805,619,o),
(805,412,qs),
(805,246,o),
(698,121,qs),
(575,-22,o),
(412,-23,qs),
(234,-23,o),
(129,96,q),
(63,187,o),
(63,236,q),
(63,236,l)
);
},
{
closed = 1;
nodes = (
(563,222,o),
(526,219,q),
(324,219,ls),
(287,219,o),
(287,197,qs),
(287,129,o),
(342,84,qs),
(377,55,o),
(410,55,qs),
(473,55,o),
(522,98,q),
(563,140,o),
(563,195,q),
(563,195,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 0 5 4 3 5 103 0 2 2 1 97 0 1 1 71 77 0 4 4 0 97 0 0 0 69 0 78 36 37 52 40 38 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 868;
}
);
note = uni01DD;
unicode = 477;
},
{
glyphname = uni01DF;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (862,0);
ref = uni0308;
},
{
pos = (869,384);
ref = uni0304;
}
);
width = 858;
}
);
note = uni01DF;
unicode = 479;
},
{
glyphname = uni01E1;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (897,0);
ref = uni0307;
},
{
pos = (869,411);
ref = uni0304;
}
);
width = 858;
}
);
note = uni01E1;
unicode = 481;
},
{
glyphname = uni01E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(592,698,o),
(520,764,qs),
(489,793,o),
(446,793,qs),
(374,793,o),
(328,707,qs),
(289,637,o),
(289,549,qs),
(289,428,o),
(348,352,qs),
(393,295,o),
(461,295,qs),
(549,295,o),
(580,414,qs),
(592,463,o),
(592,522,q),
(592,522,l)
);
},
{
closed = 1;
nodes = (
(1103,-225,o),
(1104,-330,o),
(1081,-330,qs),
(922,-330,l),
(887,-379,o),
(834,-422,qs),
(662,-559,o),
(412,-559,qs),
(113,-559,o),
(41,-412,qs),
(23,-375,o),
(20,-330,q),
(-61,-330,ls),
(-79,-330,o),
(-82,-225,o),
(-61,-225,qs),
(53,-225,l),
(78,-190,o),
(123,-154,qs),
(158,-125,o),
(203,-102,qs),
(217,-96,o),
(217,-88,qs),
(217,-84,o),
(201,-76,q),
(68,-21,o),
(68,98,qs),
(68,174,o),
(213,236,qs),
(229,242,o),
(229,250,qs),
(229,254,o),
(211,266,qs),
(57,362,o),
(57,528,qs),
(57,669,o),
(166,768,qs),
(279,870,o),
(442,870,qs),
(553,870,o),
(664,827,qs),
(730,798,o),
(756,797,qs),
(948,797,ls),
(964,797,o),
(965,682,o),
(948,682,qs),
(856,682,ls),
(825,682,o),
(825,653,qs),
(825,575,ls),
(825,405,o),
(707,305,qs),
(603,217,o),
(430,217,qs),
(381,217,o),
(324,223,q),
(312,223,o),
(301,217,q),
(264,186,o),
(264,160,qs),
(264,127,o),
(303,109,qs),
(336,93,o),
(391,92,qs),
(645,92,ls),
(772,92,o),
(838,72,qs),
(981,25,o),
(981,-141,qs),
(981,-184,o),
(971,-225,q),
(1083,-225,ls)
);
},
{
closed = 1;
nodes = (
(811,-225,l),
(797,-110,o),
(575,-111,qs),
(362,-111,ls),
(342,-111,o),
(322,-125,qs),
(268,-164,o),
(260,-225,q),
(260,-225,l)
);
},
{
closed = 1;
nodes = (
(279,-330,l),
(293,-357,o),
(317,-379,qs),
(385,-440,o),
(504,-440,qs),
(727,-441,o),
(788,-330,q),
(788,-330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
32 1 3 0 1 76 0 5 0 4 0 5 4 105 0 0 0 3 2 0 3 105 0 2 0 12 7 2 12 103 13 16 11 3 7 15 10 2 8 14 7 8 103 0 1 1 6 97 0 6 6 71 77 0 14 14 9 97 0 9 9 73 9 78 17 17 106 105 102 100 98 97 96 93 17 89 17 88 87 85 82 80 77 75 74 72 34 50 37 40 57 38 35 17 11 29 
CALL[ ]	/* CallFunction */";
};
width = 946;
}
);
note = uni01E5;
unicode = 485;
},
{
glyphname = uni01E9;
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
pos = (1179,122);
ref = uni030C.case;
}
);
width = 1071;
}
);
note = uni01E9;
unicode = 489;
},
{
glyphname = uni01ED;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni01EB;
},
{
pos = (955,0);
ref = uni0304;
}
);
width = 1030;
}
);
note = uni01ED;
unicode = 493;
},
{
glyphname = uni01F0;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
pos = (718,0);
ref = uni030C;
}
);
width = 497;
}
);
note = uni01F0;
unicode = 496;
},
{
glyphname = uni01F3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1036,0);
ref = z;
},
{
ref = d;
}
);
width = 1804;
}
);
note = uni01F3;
unicode = 499;
},
{
glyphname = uni01F5;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (870,0);
ref = acutecomb;
}
);
width = 946;
}
);
note = uni01F5;
unicode = 501;
},
{
glyphname = uni01F9;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (1147,0);
ref = gravecomb;
}
);
width = 1085;
}
);
note = uni01F9;
unicode = 505;
},
{
glyphname = uni0201;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (970,0);
ref = uni030F;
}
);
width = 858;
}
);
note = uni0201;
unicode = 513;
},
{
glyphname = uni0203;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (871,0);
ref = uni0311;
}
);
width = 858;
}
);
note = uni0203;
unicode = 515;
},
{
glyphname = uni0205;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (1008,0);
ref = uni030F;
}
);
width = 874;
}
);
note = uni0205;
unicode = 517;
},
{
glyphname = uni0207;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (909,0);
ref = uni0311;
}
);
width = 874;
}
);
note = uni0207;
unicode = 519;
},
{
glyphname = uni0209;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (802,0);
ref = uni030F;
}
);
width = 522;
}
);
note = uni0209;
unicode = 521;
},
{
glyphname = uni020B;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (703,0);
ref = uni0311;
}
);
width = 522;
}
);
note = uni020B;
unicode = 523;
},
{
glyphname = uni020D;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (1056,0);
ref = uni030F;
}
);
width = 1030;
}
);
note = uni020D;
unicode = 525;
},
{
glyphname = uni020F;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (957,0);
ref = uni0311;
}
);
width = 1030;
}
);
note = uni020F;
unicode = 527;
},
{
glyphname = uni0211;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (938,0);
ref = uni030F;
}
);
width = 753;
}
);
note = uni0211;
unicode = 529;
},
{
glyphname = uni0213;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (839,0);
ref = uni0311;
}
);
width = 753;
}
);
note = uni0213;
unicode = 531;
},
{
glyphname = uni0215;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (1054,0);
ref = uni030F;
}
);
width = 1026;
}
);
note = uni0215;
unicode = 533;
},
{
glyphname = uni0217;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (955,0);
ref = uni0311;
}
);
width = 1026;
}
);
note = uni0217;
unicode = 535;
},
{
glyphname = uni021B;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (743,0);
ref = uni0326;
}
);
width = 669;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = uni021F;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (1189,62);
ref = uni030C.case;
}
);
width = 1091;
}
);
note = uni021F;
unicode = 543;
},
{
glyphname = uni0227;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (897,0);
ref = uni0307;
}
);
width = 858;
}
);
note = uni0227;
unicode = 551;
},
{
glyphname = uni0229;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(573,-418,o),
(485,-473,qs),
(411,-520,o),
(313,-522,qs),
(188,-522,o),
(164,-461,q),
(158,-449,o),
(158,-432,qs),
(158,-389,o),
(193,-371,qs),
(205,-365,o),
(221,-365,qs),
(252,-365,o),
(297,-403,qs),
(340,-440,o),
(362,-440,qs),
(415,-440,o),
(416,-389,qs),
(416,-311,o),
(272,-248,qs),
(252,-240,o),
(254,-229,q),
(254,-225,o),
(258,-217,q),
(393,-16,l),
(295,2,o),
(213,86,qs),
(70,229,o),
(68,436,qs),
(68,602,o),
(174,727,qs),
(297,870,o),
(461,870,qs),
(639,870,o),
(743,752,q),
(809,664,o),
(809,612,qs),
(809,536,o),
(719,537,qs),
(334,537,ls),
(297,537,o),
(297,510,qs),
(297,272,o),
(410,176,qs),
(471,123,o),
(561,123,qs),
(643,123,o),
(727,178,q),
(747,188,o),
(776,152,qs),
(803,117,o),
(791,106,qs),
(744,57,o),
(657,18,qs),
(585,-15,o),
(500,-20,q),
(430,-115,ls),
(422,-127,o),
(422,-131,qs),
(422,-141,o),
(451,-158,qs),
(573,-223,o),
(573,-332,q),
(573,-332,l)
);
},
{
closed = 1;
nodes = (
(309,626,o),
(346,627,qs),
(549,627,ls),
(586,627,o),
(586,651,qs),
(586,719,o),
(530,764,qs),
(495,793,o),
(463,791,qs),
(400,791,o),
(350,748,q),
(309,708,o),
(309,653,q),
(309,653,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
38 1 0 1 55 1 4 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 0 4 4 5 114 0 8 0 2 1 8 2 103 0 7 7 3 97 0 3 3 71 77 0 1 1 0 97 0 0 0 69 77 0 4 4 6 98 0 6 6 73 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 4 4 5 114 0 8 0 2 1 8 2 103 0 4 0 6 4 6 102 0 7 7 3 97 0 3 3 71 77 0 1 1 0 97 0 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 5 0 4 0 5 4 128 0 8 0 2 1 8 2 103 0 4 0 6 4 6 102 0 7 7 3 97 0 3 3 71 77 0 1 1 0 97 0 0 0 69 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 39 39 18 47 36 52 40 23 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uni0229;
unicode = 553;
},
{
glyphname = uni022B;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (948,0);
ref = uni0308;
},
{
pos = (955,384);
ref = uni0304;
}
);
width = 1030;
}
);
note = uni022B;
unicode = 555;
},
{
glyphname = uni022D;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (999,0);
ref = tildecomb;
},
{
pos = (955,341);
ref = uni0304;
}
);
width = 1030;
}
);
note = uni022D;
unicode = 557;
},
{
glyphname = uni022F;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (983,0);
ref = uni0307;
}
);
width = 1030;
}
);
note = uni022F;
unicode = 559;
},
{
glyphname = uni0231;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (983,0);
ref = uni0307;
},
{
pos = (955,411);
ref = uni0304;
}
);
width = 1030;
}
);
note = uni0231;
unicode = 561;
},
{
glyphname = uni0233;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (881,0);
ref = uni0304;
}
);
width = 882;
}
);
note = uni0233;
unicode = 563;
},
{
glyphname = uni0250;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,871,o),
(233,870,qs),
(325,870,o),
(395,788,qs),
(409,770,o),
(416,768,q),
(428,768,o),
(444,786,qs),
(526,868,o),
(643,868,qs),
(768,868,o),
(819,782,qs),
(846,739,o),
(846,682,qs),
(846,561,o),
(635,453,qs),
(483,381,l),
(448,361,o),
(449,334,qs),
(449,143,ls),
(449,71,o),
(553,72,qs),
(633,72,o),
(670,123,q),
(678,137,o),
(680,197,qs),
(680,232,o),
(684,250,qs),
(709,338,o),
(776,338,qs),
(866,338,o),
(866,258,qs),
(866,190,o),
(811,115,qs),
(780,72,o),
(745,49,qs),
(624,-27,o),
(481,-25,qs),
(368,-25,o),
(287,31,qs),
(221,74,o),
(219,137,qs),
(219,645,ls),
(219,760,o),
(152,760,qs),
(121,762,o),
(80,725,qs),
(72,717,o),
(51,733,q),
(39,748,o),
(43,758,q),
(43,758,l)
);
},
{
closed = 1;
nodes = (
(449,469,ls),
(449,446,o),
(463,446,qs),
(469,446,o),
(475,451,q),
(616,521,o),
(616,639,qs),
(616,756,o),
(545,758,q),
(449,755,o),
(449,651,q),
(449,651,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 0 3 0 2 3 128 6 1 0 0 4 97 5 1 4 4 71 77 0 3 3 1 97 0 1 1 75 1 78 35 38 42 38 38 37 37 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 858;
}
);
note = uni0250;
unicode = 592;
},
{
glyphname = uni0251;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(735,811,l),
(846,864,ls),
(881,880,o),
(911,836,qs),
(936,801,o),
(920,788,qs),
(906,774,o),
(903,616,qs),
(903,199,ls),
(903,88,o),
(971,86,qs),
(1006,86,o),
(1042,121,qs),
(1050,129,o),
(1069,113,qs),
(1083,101,o),
(1079,88,q),
(1024,-25,o),
(889,-25,qs),
(797,-25,o),
(727,57,q),
(719,61,o),
(702,61,qs),
(692,61,o),
(674,47,qs),
(582,-23,o),
(479,-23,qs),
(235,-23,o),
(125,152,qs),
(53,263,o),
(53,418,qs),
(53,594,o),
(174,721,qs),
(321,871,o),
(567,870,qs),
(602,870,o),
(659,848,qs),
(698,831,o),
(723,817,q),
(723,817,l)
);
},
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(408,793,o),
(344,649,qs),
(305,561,o),
(307,444,qs),
(307,251,o),
(385,141,qs),
(444,59,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
38 1 6 0 59 22 2 4 6 2 76 0 2 4 5 4 2 5 128 0 6 6 0 97 0 0 0 71 77 0 4 4 1 97 3 1 1 1 69 77 0 5 5 1 97 3 1 1 1 69 1 78 38 46 38 34 34 38 35 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = uni0251;
unicode = 593;
},
{
glyphname = uni0252;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(398,33,o),
(395,35,q),
(287,-18,ls),
(252,-34,o),
(221,8,qs),
(196,43,o),
(213,57,qs),
(227,71,o),
(227,229,qs),
(227,647,ls),
(227,758,o),
(162,760,qs),
(127,760,o),
(90,725,qs),
(82,717,o),
(61,733,qs),
(47,745,o),
(53,758,qs),
(108,871,o),
(244,870,qs),
(336,870,o),
(406,788,q),
(414,784,o),
(430,784,qs),
(440,784,o),
(459,799,qs),
(551,869,o),
(653,868,qs),
(897,868,o),
(1008,694,qs),
(1080,583,o),
(1079,426,qs),
(1079,250,o),
(956,125,qs),
(809,-25,o),
(565,-25,qs),
(530,-25,o),
(473,-2,qs),
(435,13,o),
(410,27,q),
(410,27,l)
);
},
{
closed = 1;
nodes = (
(459,152,ls),
(459,109,o),
(467,88,o),
(479,82,q),
(526,53,o),
(592,51,qs),
(725,51,o),
(786,197,qs),
(825,285,o),
(825,401,qs),
(825,594,o),
(745,702,qs),
(686,784,o),
(602,784,qs),
(516,784,o),
(471,731,qs),
(459,715,o),
(459,705,q),
(459,705,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
59 22 2 6 4 1 76 0 2 5 4 5 2 4 128 0 5 5 1 97 3 1 1 1 71 77 0 4 4 1 97 3 1 1 1 71 77 0 6 6 0 97 0 0 0 69 0 78 38 47 38 34 34 38 35 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = uni0252;
unicode = 594;
},
{
glyphname = uni0253;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,233,o),
(758,-23,o),
(537,-23,qs),
(478,-23,o),
(350,31,o),
(303,31,qs),
(291,31,o),
(225,-20,o),
(215,-20,qs),
(184,-20,o),
(141,12,qs),
(121,26,o),
(123,35,qs),
(129,68,o),
(129,279,qs),
(129,793,ls),
(129,1086,o),
(219,1335,o),
(395,1487,o),
(528,1487,qs),
(591,1487,o),
(688,1409,o),
(688,1358,qs),
(688,1315,o),
(623,1255,o),
(580,1255,qs),
(533,1255,o),
(457,1380,o),
(420,1380,qs),
(381,1380,o),
(371,1323,qs),
(359,1264,o),
(358,1155,qs),
(358,840,ls),
(358,811,o),
(375,811,qs),
(383,811,o),
(393,819,qs),
(467,870,o),
(561,870,qs),
(737,870,o),
(981,626,o),
(981,440,q),
(981,440,l)
);
},
{
closed = 1;
nodes = (
(727,586,o),
(600,770,o),
(502,770,qs),
(430,770,o),
(389,727,qs),
(358,696,o),
(358,647,qs),
(358,297,ls),
(358,193,o),
(477,57,o),
(565,57,qs),
(727,57,o),
(727,428,q),
(727,428,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
9 7 2 8 0 30 1 5 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 0 1 2 114 0 5 7 4 7 5 4 128 0 1 1 3 97 0 3 3 70 77 0 8 8 0 97 0 0 0 71 77 0 7 7 4 97 6 1 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 5 7 4 7 5 4 128 0 1 1 3 97 0 3 3 70 77 0 8 8 0 97 0 0 0 71 77 0 7 7 4 97 6 1 4 4 69 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
38 36 33 34 25 36 33 41 34 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = uni0253;
unicode = 595;
},
{
glyphname = uni0254;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,227,o),
(217,199,qs),
(256,131,l),
(295,72,o),
(369,74,qs),
(451,74,o),
(510,166,qs),
(576,268,o),
(575,412,qs),
(575,545,o),
(487,639,qs),
(407,723,o),
(307,723,qs),
(198,723,o),
(121,668,qs),
(105,656,o),
(76,696,q),
(60,723,o),
(59,737,qs),
(59,745,o),
(66,752,q),
(147,805,l),
(264,871,o),
(414,870,qs),
(553,870,o),
(666,770,qs),
(805,647,o),
(805,461,qs),
(805,291,o),
(698,154,qs),
(563,-22,o),
(348,-23,qs),
(213,-23,o),
(127,23,qs),
(88,43,o),
(72,68,q),
(66,84,o),
(66,106,qs),
(66,157,o),
(96,193,q),
(131,227,o),
(162,227,q),
(162,227,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
23 1 3 2 1 76 5 1 0 3 4 3 0 4 128 0 3 3 2 97 0 2 2 71 77 0 4 4 1 97 0 1 1 69 1 78 1 0 38 36 30 28 19 17 11 9 0 42 1 41 6 11 22 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = uni0254;
unicode = 596;
},
{
glyphname = uni0255;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(850,133,o),
(645,-23,o),
(457,-23,qs),
(375,-23,o),
(305,10,q),
(205,-190,ls),
(195,-213,o),
(109,-186,o),
(121,-164,qs),
(180,-39,o),
(231,55,q),
(207,76,ls),
(68,201,o),
(66,387,qs),
(66,557,o),
(172,694,qs),
(307,870,o),
(522,870,qs),
(657,870,o),
(745,825,qs),
(788,802,o),
(799,780,qs),
(805,768,o),
(805,739,qs),
(805,686,o),
(774,655,qs),
(739,620,o),
(709,621,qs),
(670,621,o),
(653,649,qs),
(614,715,ls),
(579,774,o),
(502,774,qs),
(420,774,o),
(360,682,qs),
(294,580,o),
(295,436,qs),
(295,330,o),
(352,248,q),
(375,279,o),
(393,299,qs),
(506,422,o),
(649,422,qs),
(743,422,o),
(850,325,o),
(850,262,q),
(850,262,l)
);
},
{
closed = 1;
nodes = (
(756,285,o),
(690,350,o),
(639,350,qs),
(545,350,o),
(459,258,qs),
(436,233,o),
(406,186,q),
(478,125,o),
(563,125,qs),
(643,125,o),
(756,197,o),
(756,246,q),
(756,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
52 7 2 5 6 41 35 2 4 5 2 76 0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 0 3 3 71 77 0 5 5 4 97 0 4 4 69 4 78 36 37 45 40 35 40 34 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 897;
}
);
note = uni0255;
unicode = 597;
},
{
glyphname = uni0256;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,-338,o),
(924,-449,o),
(965,-449,qs),
(1002,-449,o),
(1075,-324,o),
(1124,-324,qs),
(1163,-324,o),
(1233,-379,o),
(1233,-426,qs),
(1233,-479,o),
(1133,-555,o),
(1071,-555,qs),
(999,-555,o),
(848,-492,o),
(729,-332,o),
(676,-131,o),
(676,47,q),
(582,-25,o),
(479,-23,qs),
(266,-23,o),
(53,236,o),
(53,418,qs),
(53,608,o),
(340,870,o),
(567,870,qs),
(616,870,o),
(647,866,qs),
(674,864,o),
(674,889,qs),
(674,1161,ls),
(674,1286,o),
(582,1286,qs),
(566,1286,o),
(565,1360,o),
(582,1360,qs),
(631,1360,o),
(831,1458,o),
(852,1477,qs),
(864,1487,o),
(879,1487,qs),
(912,1487,o),
(909,1454,qs),
(903,1352,o),
(903,1286,qs),
(903,-229,ls)
);
},
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(471,793,o),
(375,719,o),
(307,561,o),
(307,444,qs),
(307,266,o),
(434,61,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
2 1 1 0 63 1 8 9 27 1 4 8 3 76 0 7 6 5 6 7 5 128 0 0 0 70 77 0 2 2 1 97 0 1 1 68 77 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 0 4 4 69 77 0 6 6 5 97 0 5 5 73 5 78 57 55 38 33 36 37 36 37 34 20 19 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = uni0256;
unicode = 598;
},
{
glyphname = uni0257;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,256,ls),
(903,174,o),
(913,139,qs),
(925,98,o),
(967,98,qs),
(979,98,o),
(999,104,qs),
(1017,108,o),
(1026,74,qs),
(1036,37,o),
(1022,31,q),
(1014,29,o),
(866,-4,qs),
(764,-27,o),
(735,-35,q),
(723,-35,ls),
(713,-35,o),
(713,10,qs),
(713,39,ls),
(713,62,o),
(692,61,o),
(674,47,qs),
(582,-23,o),
(479,-23,qs),
(235,-23,o),
(125,152,qs),
(53,263,o),
(53,418,qs),
(53,594,o),
(174,721,qs),
(321,871,o),
(567,870,qs),
(616,870,o),
(647,866,qs),
(674,864,o),
(674,889,qs),
(674,932,ls),
(674,1059,o),
(797,1339,o),
(1005,1327,o),
(1120,1327,qs),
(1196,1327,o),
(1294,1403,o),
(1294,1346,qs),
(1294,1303,o),
(1241,1239,o),
(1194,1239,qs),
(1126,1239,o),
(1069,1374,o),
(1028,1374,qs),
(977,1374,o),
(903,1199,o),
(903,1049,q),
(903,1049,l)
);
},
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(408,793,o),
(344,649,qs),
(305,561,o),
(307,444,qs),
(307,251,o),
(385,141,qs),
(444,59,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
73 1 7 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 2 0 133 0 7 9 5 9 7 5 128 0 5 8 9 5 8 126 0 1 1 2 97 0 2 2 68 77 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 6 1 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 2 0 133 0 7 9 5 9 7 5 128 0 5 8 9 5 8 126 0 2 0 1 3 2 1 105 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 0 4 4 69 77 0 6 6 75 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
67 65 40 41 35 18 38 38 52 33 34 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = uni0257;
unicode = 599;
},
{
glyphname = uni0258;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,661,o),
(133,752,q),
(237,871,o),
(416,870,qs),
(580,870,o),
(702,727,qs),
(808,600,o),
(809,436,qs),
(809,229,o),
(666,86,qs),
(557,-23,o),
(422,-23,qs),
(307,-23,o),
(219,18,qs),
(133,57,o),
(86,106,qs),
(76,116,o),
(100,152,q),
(129,189,o),
(150,178,q),
(236,123,o),
(315,123,qs),
(405,123,o),
(469,176,qs),
(582,272,o),
(580,510,qs),
(580,537,o),
(543,537,qs),
(158,537,ls),
(68,536,o),
(68,612,q),
(68,612,l)
);
},
{
closed = 1;
nodes = (
(567,708,o),
(526,748,qs),
(477,791,o),
(414,791,qs),
(379,791,o),
(346,764,qs),
(291,719,o),
(291,651,qs),
(291,626,o),
(328,627,qs),
(530,627,ls),
(567,626,o),
(567,653,q),
(567,653,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 4 0 0 1 4 0 103 0 5 5 3 97 0 3 3 71 77 0 1 1 2 97 0 2 2 69 2 78 36 53 38 40 36 49 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uni0258;
unicode = 600;
},
{
glyphname = uni025B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(651,49,o),
(553,10,qs),
(463,-25,o),
(375,-23,qs),
(244,-23,o),
(178,12,qs),
(47,84,o),
(47,346,o),
(223,438,q),
(65,501,o),
(66,637,qs),
(66,731,o),
(150,795,qs),
(248,871,o),
(412,870,qs),
(670,870,o),
(662,766,qs),
(656,688,o),
(594,682,q),
(576,766,o),
(432,766,qs),
(360,766,o),
(311,717,qs),
(274,678,o),
(276,651,q),
(276,594,o),
(309,553,qs),
(338,518,o),
(381,518,qs),
(479,518,ls),
(491,518,o),
(492,457,qs),
(492,398,o),
(477,395,q),
(391,395,ls),
(332,395,o),
(295,360,qs),
(256,323,o),
(256,270,qs),
(256,209,o),
(332,147,qs),
(371,116,o),
(481,117,qs),
(514,117,o),
(647,172,qs),
(653,174,o),
(682,137,qs),
(694,119,o),
(692,106,q),
(692,98,o),
(688,94,q),
(688,94,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
32 26 2 2 3 42 19 2 1 2 2 76 0 2 0 1 0 2 1 105 0 3 3 4 97 0 4 4 71 77 0 0 0 5 97 0 5 5 69 5 78 41 36 38 51 38 39 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 729;
}
);
note = uni025B;
unicode = 603;
},
{
glyphname = uni025C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,98,o),
(47,106,q),
(47,118,o),
(59,137,qs),
(86,176,o),
(92,172,q),
(225,119,o),
(258,117,q),
(371,117,o),
(410,147,qs),
(486,206,o),
(485,270,qs),
(485,325,o),
(408,395,o),
(350,395,qs),
(262,395,ls),
(248,395,o),
(250,457,qs),
(250,520,o),
(260,518,q),
(360,518,ls),
(401,518,o),
(430,553,qs),
(465,594,o),
(465,651,qs),
(465,678,o),
(428,717,qs),
(379,766,o),
(309,766,qs),
(166,766,o),
(147,682,q),
(86,686,o),
(80,766,qs),
(72,870,o),
(330,870,qs),
(494,870,o),
(592,795,qs),
(676,732,o),
(676,637,qs),
(676,502,o),
(518,438,q),
(692,346,o),
(692,84,o),
(561,12,qs),
(495,-23,o),
(367,-23,qs),
(281,-23,o),
(188,10,qs),
(90,49,o),
(53,94,q),
(53,94,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
32 9 2 5 4 44 1 6 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 4 3 2 114 0 4 0 5 6 4 5 105 0 3 3 1 97 0 1 1 71 77 0 6 6 0 97 0 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 4 3 2 4 128 0 4 0 5 6 4 5 105 0 3 3 1 97 0 1 1 71 77 0 6 6 0 97 0 0 0 69 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
37 51 38 33 18 41 35 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 729;
}
);
note = uni025C;
unicode = 604;
},
{
glyphname = uni025D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(495,-23,o),
(367,-23,qs),
(281,-23,o),
(188,10,qs),
(90,47,o),
(53,94,q),
(49,98,o),
(47,106,q),
(47,118,o),
(59,137,qs),
(86,176,o),
(92,172,q),
(225,119,o),
(258,117,q),
(371,117,o),
(410,147,qs),
(486,206,o),
(485,270,qs),
(485,325,o),
(408,395,o),
(350,395,qs),
(262,395,ls),
(248,395,o),
(250,457,qs),
(250,520,o),
(260,518,q),
(360,518,ls),
(401,518,o),
(430,553,qs),
(465,594,o),
(465,651,qs),
(465,678,o),
(428,717,qs),
(379,766,o),
(309,766,qs),
(166,766,o),
(147,682,q),
(86,686,o),
(80,766,qs),
(72,870,o),
(330,870,qs),
(492,870,o),
(592,795,qs),
(635,762,o),
(655,721,q),
(799,758,ls),
(830,766,o),
(829,723,qs),
(829,608,o),
(866,469,o),
(926,469,qs),
(963,469,o),
(987,496,qs),
(991,500,o),
(1022,477,o),
(1018,473,q),
(977,416,o),
(895,416,qs),
(832,416,o),
(750,522,o),
(741,618,q),
(741,637,l),
(674,621,l),
(666,498,o),
(518,438,q),
(692,346,o),
(692,84,o),
(561,12,q),
(561,12,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
23 1 3 4 6 5 2 5 3 12 1 1 5 44 3 2 0 1 56 1 7 6 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 4 5 4 3 114 0 1 0 0 6 1 0 105 0 5 0 6 7 5 6 105 0 4 4 2 97 0 2 2 71 77 0 7 7 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 5 4 3 5 128 0 1 0 0 6 1 0 105 0 5 0 6 7 5 6 105 0 4 4 2 97 0 2 2 71 77 0 7 7 8 97 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
42 37 51 38 33 18 40 37 41 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1054;
}
);
note = uni025D;
unicode = 605;
},
{
glyphname = uni025E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(854,502,o),
(696,438,q),
(870,346,o),
(870,84,o),
(739,12,qs),
(673,-23,o),
(522,-23,qs),
(276,-23,o),
(66,213,o),
(66,424,qs),
(66,594,o),
(283,870,o),
(500,870,qs),
(670,870,o),
(770,795,qs),
(854,731,o),
(854,637,q),
(854,637,l)
);
},
{
closed = 1;
nodes = (
(664,326,o),
(586,395,o),
(528,395,qs),
(440,395,ls),
(426,395,o),
(426,457,qs),
(426,520,o),
(438,518,q),
(539,518,ls),
(580,518,o),
(643,602,o),
(643,664,qs),
(643,703,o),
(578,782,o),
(496,782,qs),
(400,782,o),
(293,580,o),
(293,420,qs),
(293,311,o),
(322,188,o),
(416,80,o),
(489,80,qs),
(587,80,o),
(664,187,o),
(664,248,q),
(664,248,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
37 15 2 5 4 1 76 0 4 0 5 2 4 5 105 0 3 3 0 97 0 0 0 71 77 0 2 2 1 97 0 1 1 69 1 78 51 36 37 41 36 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 907;
}
);
note = uni025E;
unicode = 606;
},
{
glyphname = uni025F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,-47,o),
(356,-129,qs),
(331,-303,o),
(248,-416,qs),
(170,-518,o),
(41,-547,qs),
(4,-555,o),
(-33,-555,qs),
(-92,-555,o),
(-150,-512,qs),
(-193,-477,o),
(-193,-426,qs),
(-193,-369,o),
(-141,-340,qs),
(-114,-326,o),
(-84,-324,qs),
(-37,-324,o),
(-4,-377,qs),
(41,-451,o),
(76,-449,qs),
(121,-449,o),
(131,-358,qs),
(135,-315,o),
(137,-229,qs),
(137,438,l),
(23,438,ls),
(7,438,o),
(6,545,o),
(23,545,qs),
(137,545,l),
(137,557,ls),
(137,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(375,883,o),
(375,856,q),
(367,764,o),
(367,682,qs),
(367,545,l),
(483,545,ls),
(497,545,o),
(500,438,o),
(483,438,qs),
(367,438,l),
(367,139,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
8 1 3 2 21 1 1 4 2 76 0 6 7 8 7 6 8 128 0 3 0 4 1 3 4 105 0 1 5 1 0 7 1 0 106 0 2 2 71 77 0 7 7 8 97 0 8 8 73 8 78 38 34 36 37 34 21 20 34 16 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uni025F;
unicode = 607;
},
{
glyphname = uni0260;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,-68,ls),
(903,-328,o),
(557,-559,o),
(356,-559,qs),
(266,-559,o),
(170,-498,o),
(170,-444,qs),
(170,-409,o),
(229,-356,o),
(256,-356,qs),
(311,-356,o),
(403,-467,o),
(459,-467,qs),
(551,-467,o),
(612,-412,qs),
(673,-359,o),
(674,-238,qs),
(674,-12,ls),
(674,19,o),
(653,18,qs),
(645,18,o),
(641,16,qs),
(571,-23,o),
(500,-23,qs),
(285,-23,o),
(53,197,o),
(53,444,qs),
(53,610,o),
(342,870,o),
(537,870,qs),
(605,870,o),
(676,842,q),
(676,932,ls),
(676,1059,o),
(799,1337,o),
(987,1487,o),
(1102,1487,qs),
(1178,1487,o),
(1296,1403,o),
(1296,1346,qs),
(1296,1303,o),
(1241,1239,o),
(1194,1239,qs),
(1126,1239,o),
(1071,1374,o),
(1028,1374,qs),
(977,1374,o),
(903,1199,o),
(903,1049,q),
(903,1049,l)
);
},
{
closed = 1;
nodes = (
(674,688,ls),
(674,792,o),
(541,793,qs),
(451,793,o),
(307,625,o),
(307,420,qs),
(307,281,o),
(432,59,o),
(532,59,qs),
(674,60,o),
(674,197,q),
(674,197,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
17 1 9 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 3 0 1 114 0 6 4 5 5 6 114 0 0 0 2 97 0 2 2 70 77 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 0 4 4 69 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 3 0 1 3 128 0 6 4 5 5 6 114 0 0 0 2 97 0 2 2 70 77 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 0 4 4 69 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 97 0 2 2 70 77 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 0 4 4 69 77 0 5 5 7 98 0 7 7 73 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
59 57 37 36 33 41 36 37 36 33 34 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 931;
}
);
note = uni0260;
unicode = 608;
},
{
glyphname = uni0261;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,-68,ls),
(903,-328,o),
(557,-559,o),
(356,-559,qs),
(266,-559,o),
(170,-498,o),
(170,-444,qs),
(170,-409,o),
(229,-356,o),
(256,-356,qs),
(311,-356,o),
(403,-467,o),
(459,-467,qs),
(551,-467,o),
(612,-412,qs),
(673,-359,o),
(674,-238,qs),
(674,-12,ls),
(674,19,o),
(653,18,qs),
(645,18,o),
(641,16,qs),
(575,-23,o),
(500,-23,qs),
(285,-23,o),
(53,197,o),
(53,444,qs),
(53,610,o),
(342,870,o),
(537,870,qs),
(633,870,o),
(735,811,q),
(893,866,l),
(897,868,o),
(903,868,qs),
(911,868,o),
(936,842,o),
(936,825,o),
(932,821,qs),
(903,796,o),
(903,522,q),
(903,522,l)
);
},
{
closed = 1;
nodes = (
(674,688,ls),
(674,792,o),
(541,793,qs),
(451,793,o),
(307,625,o),
(307,420,qs),
(307,281,o),
(432,59,o),
(532,59,qs),
(674,60,o),
(674,197,q),
(674,197,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
9 1 6 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 1 2 2 3 114 0 6 6 0 97 0 0 0 71 77 0 5 5 1 97 0 1 1 69 77 0 2 2 4 98 0 4 4 73 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 128 0 6 6 0 97 0 0 0 71 77 0 5 5 1 97 0 1 1 69 77 0 2 2 4 98 0 4 4 73 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 37 36 33 41 36 42 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 931;
}
);
note = uni0261;
unicode = 609;
},
{
glyphname = uni0262;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(854,102,ls),
(854,71,o),
(883,72,qs),
(897,72,o),
(897,20,o),
(883,20,qs),
(803,20,o),
(590,-23,o),
(514,-23,qs),
(319,-23,o),
(66,229,o),
(66,408,qs),
(66,605,o),
(324,870,o),
(526,870,qs),
(624,870,o),
(758,842,qs),
(781,838,o),
(813,836,q),
(825,811,o),
(840,651,o),
(840,612,qs),
(840,602,o),
(799,600,qs),
(756,598,o),
(756,608,qs),
(756,651,o),
(653,793,o),
(524,793,qs),
(440,793,o),
(319,592,o),
(319,440,qs),
(319,245,o),
(377,152,qs),
(434,62,o),
(522,61,qs),
(612,61,o),
(645,82,q),
(678,98,o),
(678,127,qs),
(680,242,ls),
(680,275,o),
(643,291,o),
(559,291,qs),
(543,291,o),
(545,367,o),
(559,367,q),
(598,363,o),
(741,362,qs),
(884,362,o),
(924,367,q),
(938,367,o),
(938,291,o),
(924,291,qs),
(879,291,o),
(854,273,o),
(854,242,q),
(854,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
31 1 5 4 10 1 1 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 2 1 0 3 1 0 105 0 4 4 7 97 0 7 7 71 77 0 5 5 6 97 0 6 6 71 77 10 1 3 3 9 97 0 9 9 69 77 10 1 3 3 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 3 1 0 105 0 9 8 3 9 89 0 4 4 7 97 0 7 7 71 77 0 5 5 6 97 0 6 6 71 77 10 1 3 3 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 0 5 1 6 5 105 0 1 2 1 0 3 1 0 105 0 9 8 3 9 89 0 4 4 7 97 0 7 7 71 77 10 1 3 3 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 6 0 5 1 6 5 105 0 1 2 1 0 10 1 0 105 0 10 0 9 8 10 9 105 0 4 4 7 97 0 7 7 71 77 0 3 3 8 97 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
55 53 51 50 36 34 20 20 37 38 35 36 18 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = uni0262;
unicode = 610;
},
{
glyphname = uni0263;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(731,-406,o),
(580,-559,o),
(457,-559,qs),
(310,-559,o),
(178,-403,o),
(178,-338,qs),
(178,-262,o),
(213,-186,qs),
(360,125,l),
(127,713,ls),
(98,785,o),
(23,784,qs),
(9,784,o),
(8,856,o),
(23,856,q),
(97,850,o),
(229,850,qs),
(362,850,o),
(438,856,q),
(454,856,o),
(455,784,o),
(438,784,qs),
(358,784,o),
(360,727,qs),
(360,713,o),
(365,700,qs),
(485,389,l),
(639,711,ls),
(643,719,o),
(643,733,qs),
(643,784,o),
(549,786,qs),
(535,786,o),
(535,858,o),
(549,858,q),
(621,852,o),
(719,852,qs),
(819,852,o),
(893,858,q),
(907,858,o),
(907,786,o),
(893,786,qs),
(805,786,o),
(772,715,qs),
(551,225,l),
(705,-164,ls),
(731,-236,o),
(731,-332,q),
(731,-332,l)
);
},
{
closed = 1;
nodes = (
(530,-301,o),
(500,-225,qs),
(424,-43,l),
(350,-201,ls),
(307,-287,o),
(307,-324,qs),
(307,-367,o),
(336,-414,qs),
(365,-459,o),
(418,-459,q),
(463,-554,o),
(530,-371,o),
(530,-334,q),
(530,-334,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
59 39 24 21 18 3 6 7 0 1 76 33 13 2 1 74 5 3 2 3 0 0 1 95 4 1 1 1 71 77 0 7 7 6 97 0 6 6 73 6 78 22 39 35 66 24 35 66 21 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 837;
}
);
note = uni0263;
unicode = 611;
},
{
glyphname = uni0264;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(793,90,o),
(686,-23,o),
(518,-23,qs),
(434,-23,o),
(291,63,o),
(291,135,qs),
(291,203,o),
(362,287,qs),
(457,397,l),
(365,537,ls),
(293,646,o),
(219,705,o),
(176,705,qs),
(106,705,o),
(106,561,qs),
(106,553,o),
(27,553,o),
(27,561,qs),
(27,643,ls),
(27,735,o),
(127,866,o),
(215,866,qs),
(301,866,o),
(432,782,o),
(500,686,qs),
(588,559,l),
(664,649,ls),
(848,866,o),
(950,866,qs),
(1038,866,o),
(1110,750,o),
(1110,643,qs),
(1110,561,ls),
(1110,553,o),
(1030,555,o),
(1030,561,qs),
(1030,704,o),
(934,705,qs),
(891,705,o),
(797,627,o),
(711,524,qs),
(655,459,l),
(727,356,ls),
(793,264,o),
(793,145,q),
(793,145,l)
);
},
{
closed = 1;
nodes = (
(618,170,o),
(582,221,qs),
(524,301,l),
(471,240,ls),
(424,185,o),
(424,102,o),
(479,61,o),
(520,61,qs),
(561,61,o),
(618,104,o),
(618,137,q),
(618,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
54 36 27 19 9 3 6 5 0 1 76 3 1 0 0 1 97 2 1 1 1 71 77 0 5 5 4 97 0 4 4 69 4 78 37 40 39 37 39 38 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1134;
}
);
note = uni0264;
unicode = 612;
},
{
glyphname = uni0265;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,848,o),
(248,848,qs),
(393,848,o),
(473,856,q),
(489,856,o),
(489,782,o),
(473,782,qs),
(369,782,o),
(369,719,qs),
(369,293,ls),
(369,217,o),
(463,86,o),
(537,86,qs),
(588,86,o),
(657,123,o),
(709,184,o),
(709,221,qs),
(709,707,ls),
(709,783,o),
(606,782,qs),
(592,782,o),
(592,856,o),
(606,856,q),
(690,848,o),
(827,848,qs),
(964,848,o),
(1051,856,q),
(1065,856,o),
(1067,782,o),
(1051,782,qs),
(938,782,o),
(938,713,qs),
(938,-313,ls),
(938,-438,o),
(1030,-438,qs),
(1046,-438,o),
(1047,-512,o),
(1030,-512,qs),
(981,-512,o),
(881,-561,qs),
(791,-606,o),
(760,-629,qs),
(748,-639,o),
(731,-639,qs),
(700,-639,o),
(702,-612,qs),
(708,-536,o),
(709,-438,qs),
(709,27,ls),
(709,50,o),
(698,49,qs),
(690,49,o),
(676,39,qs),
(594,-22,o),
(465,-23,qs),
(373,-23,o),
(240,47,o),
(139,199,o),
(139,291,qs),
(139,707,ls),
(139,783,o),
(23,782,qs),
(7,782,o),
(7,856,o),
(23,856,q),
(23,856,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
42 1 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 9 1 9 2 1 128 0 3 4 3 134 10 8 6 3 0 0 7 97 11 1 7 7 71 77 0 9 9 1 97 0 1 1 69 77 0 5 5 4 97 0 4 4 73 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 9 1 9 2 1 128 0 3 4 3 134 0 5 0 4 3 5 4 105 10 8 6 3 0 0 7 97 11 1 7 7 71 77 0 9 9 1 97 0 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 9 1 9 2 1 128 0 3 4 3 134 11 1 7 10 8 6 3 0 9 7 0 105 0 5 0 4 3 5 4 105 0 9 9 1 97 0 1 1 69 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
64 62 58 57 53 51 35 36 19 34 21 21 34 37 34 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1091;
}
);
note = uni0265;
unicode = 613;
},
{
glyphname = uni0266;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,821,ls),
(393,798,o),
(403,799,qs),
(411,799,o),
(426,809,qs),
(508,870,o),
(637,870,qs),
(729,870,o),
(864,801,o),
(963,649,o),
(963,557,qs),
(963,143,ls),
(963,67,o),
(1079,68,qs),
(1095,68,o),
(1096,-8,o),
(1079,-8,q),
(999,0,o),
(854,0,qs),
(709,0,o),
(629,-8,q),
(613,-8,o),
(612,68,o),
(629,68,qs),
(733,68,o),
(733,131,qs),
(733,555,ls),
(733,631,o),
(639,762,o),
(565,762,qs),
(475,762,o),
(422,698,qs),
(393,663,o),
(393,627,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(274,0,qs),
(137,0,o),
(51,-8,q),
(37,-8,o),
(37,68,o),
(51,68,qs),
(164,62,o),
(164,137,qs),
(164,932,ls),
(164,1077,o),
(274,1311,o),
(520,1487,o),
(674,1487,qs),
(780,1487,o),
(897,1401,o),
(897,1343,qs),
(897,1296,o),
(817,1223,o),
(784,1223,qs),
(686,1223,o),
(606,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1194,o),
(393,1049,q),
(393,1049,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
65 1 6 10 1 76 49 26 2 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 70 77 0 6 6 10 97 0 10 10 71 77 9 7 5 3 3 3 4 97 8 1 4 4 69 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 10 0 1 10 128 0 0 0 2 97 0 2 2 70 77 0 6 6 10 97 0 10 10 71 77 9 7 5 3 3 3 4 97 8 1 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 10 0 1 10 128 9 7 5 3 3 8 1 4 3 4 101 0 0 0 2 97 0 2 2 70 77 0 6 6 10 97 0 10 10 71 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
60 58 53 51 36 20 37 35 36 21 36 33 34 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1091;
}
);
note = uni0266;
unicode = 614;
},
{
glyphname = uni0267;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(963,139,ls),
(963,-70,o),
(924,-299,o),
(795,-492,o),
(631,-555,o),
(565,-555,qs),
(502,-555,o),
(403,-477,o),
(406,-377,o),
(471,-324,o),
(512,-324,qs),
(559,-324,o),
(637,-449,o),
(672,-449,qs),
(713,-449,o),
(733,-328,o),
(733,-229,qs),
(733,555,ls),
(733,651,o),
(686,696,qs),
(616,762,o),
(565,762,qs),
(475,762,o),
(422,698,qs),
(393,663,o),
(393,627,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(274,0,qs),
(137,0,o),
(51,-8,q),
(37,-8,o),
(37,68,o),
(51,68,qs),
(164,62,o),
(164,137,qs),
(164,932,ls),
(164,1077,o),
(274,1311,o),
(520,1487,o),
(674,1487,qs),
(780,1487,o),
(897,1401,o),
(897,1343,qs),
(897,1296,o),
(817,1223,o),
(784,1223,qs),
(686,1223,o),
(606,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1194,o),
(393,1049,qs),
(393,821,ls),
(393,798,o),
(403,799,qs),
(411,799,o),
(426,809,qs),
(508,870,o),
(637,870,qs),
(729,870,o),
(864,801,o),
(963,649,o),
(963,557,q),
(963,557,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 7 0 37 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 1 0 1 2 114 0 8 9 10 9 8 10 128 0 1 1 3 97 0 3 3 70 77 0 7 7 0 97 0 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 9 9 10 97 0 10 10 73 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 1 0 1 2 0 128 0 8 9 10 9 8 10 128 0 1 1 3 97 0 3 3 70 77 0 7 7 0 97 0 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 9 9 10 97 0 10 10 73 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 1 0 1 2 0 128 0 8 9 10 9 8 10 128 6 1 4 0 5 9 4 5 105 0 1 1 3 97 0 3 3 70 77 0 7 7 0 97 0 0 0 71 77 0 9 9 10 97 0 10 10 73 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
64 62 59 57 38 37 35 36 21 36 33 40 35 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1087;
}
);
note = uni0267;
unicode = 615;
},
{
glyphname = uni0268;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,qs),
(381,0,o),
(270,0,qs),
(157,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,438,l),
(47,438,ls),
(31,438,o),
(33,545,o),
(47,545,qs),
(164,545,l),
(164,557,ls),
(164,682,o),
(72,682,qs),
(58,682,o),
(55,756,o),
(72,756,qs),
(125,756,o),
(324,854,o),
(342,872,qs),
(354,884,o),
(373,883,qs),
(402,883,o),
(401,856,qs),
(393,764,o),
(393,682,qs),
(393,545,l),
(510,545,ls),
(524,545,o),
(524,438,o),
(510,438,qs),
(393,438,l),
(393,143,ls)
);
},
{
closed = 1;
nodes = (
(401,1114,o),
(342,1073,qs),
(303,1046,o),
(256,1049,q),
(180,1049,o),
(139,1106,qs),
(112,1143,o),
(113,1186,qs),
(113,1256,o),
(170,1296,qs),
(209,1325,o),
(256,1323,qs),
(334,1323,o),
(375,1266,qs),
(401,1227,o),
(401,1186,q),
(401,1186,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 3 2 20 1 1 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 0 4 1 3 4 105 0 1 5 1 0 6 1 0 106 0 10 10 9 97 0 9 9 68 77 0 2 2 71 77 8 1 6 6 7 95 0 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 2 9 10 105 0 3 0 4 1 3 4 105 0 1 5 1 0 6 1 0 106 0 2 2 71 77 8 1 6 6 7 95 0 7 7 69 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
55 53 47 45 34 52 18 37 34 19 36 34 16 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni0268;
unicode = 616;
},
{
glyphname = uni0269;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,107,o),
(459,106,qs),
(494,106,o),
(530,141,qs),
(538,149,o),
(588,96,o),
(582,86,q),
(549,41,o),
(444,-23,o),
(360,-23,qs),
(288,-23,o),
(203,41,o),
(164,166,o),
(164,266,qs),
(164,532,ls),
(164,626,o),
(117,682,o),
(72,682,qs),
(58,682,o),
(55,756,o),
(72,756,qs),
(115,756,o),
(279,825,o),
(330,862,qs),
(357,880,o),
(381,883,q),
(399,883,o),
(397,862,qs),
(393,786,o),
(393,737,qs),
(393,209,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
23 1 2 3 1 76 2 1 0 74 0 0 0 1 3 0 1 105 0 3 3 2 97 0 2 2 69 2 78 38 38 34 24 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 595;
}
);
note = uni0269;
unicode = 617;
},
{
glyphname = uni026A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,67,o),
(496,68,qs),
(510,68,o),
(510,-8,o),
(496,-8,q),
(394,0,o),
(272,0,qs),
(149,0,o),
(57,-8,q),
(43,-8,o),
(43,68,o),
(57,68,qs),
(163,68,o),
(164,145,qs),
(164,702,ls),
(164,780,o),
(61,780,qs),
(47,780,o),
(47,856,o),
(61,856,qs),
(139,850,o),
(281,850,qs),
(422,850,o),
(496,856,q),
(510,856,o),
(510,780,o),
(496,780,qs),
(394,780,o),
(393,702,qs),
(393,145,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 1 1 74 24 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 95 0 1 1 71 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
5 1 3 0 4 3 4 101 2 1 0 0 1 95 0 1 1 71 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 36 19 35 66 17 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni026A;
unicode = 618;
},
{
glyphname = uni026B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(279,0,qs),
(146,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,135,qs),
(164,662,l),
(129,672,o),
(104,672,qs),
(71,672,o),
(-2,623,o),
(-25,600,qs),
(-39,586,o),
(-66,610,qs),
(-82,624,o),
(-82,639,qs),
(-82,645,o),
(-78,649,q),
(-25,719,o),
(35,764,qs),
(88,805,o),
(164,807,q),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(322,1458,o),
(342,1477,qs),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1378,o),
(393,1286,qs),
(393,731,l),
(432,717,o),
(457,717,qs),
(500,717,o),
(586,784,o),
(596,795,q),
(610,807,o),
(635,784,qs),
(653,768,o),
(653,758,qs),
(653,756,o),
(651,752,q),
(588,676,o),
(571,664,q),
(536,629,o),
(446,580,o),
(397,580,qs),
(393,580,l),
(393,143,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
20 1 3 2 17 6 2 1 5 48 1 0 6 3 76 58 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 6 0 5 6 105 0 1 0 0 7 1 0 105 0 2 2 70 77 0 4 4 3 97 0 3 3 68 77 9 1 7 7 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 0 6 0 5 6 105 0 1 0 0 7 1 0 105 9 1 7 0 8 7 8 101 0 2 2 70 77 0 4 4 3 97 0 3 3 68 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
62 60 36 19 43 18 34 20 21 44 32 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni026B;
unicode = 619;
},
{
glyphname = uni026C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,135,qs),
(164,580,l),
(90,582,o),
(-18,604,o),
(-82,668,o),
(-82,723,qs),
(-82,780,o),
(6,854,o),
(53,854,qs),
(88,854,o),
(139,825,o),
(164,805,q),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(129,1360,o),
(322,1458,o),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1378,o),
(393,1286,qs),
(393,672,l),
(563,674,ls),
(579,674,o),
(580,621,o),
(563,616,q),
(477,600,o),
(393,592,q),
(393,143,ls)
);
},
{
closed = 1;
nodes = (
(164,682,l),
(146,709,o),
(111,739,qs),
(74,772,o),
(29,772,o),
(4,745,o),
(4,725,qs),
(4,709,o),
(25,680,o),
(82,672,o),
(135,672,qs),
(164,672,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
9 1 2 1 21 1 10 4 0 1 5 0 3 76 41 1 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 0 5 6 0 5 105 0 1 1 70 77 0 3 3 2 97 0 2 2 68 77 0 10 10 4 97 0 4 4 71 77 8 1 6 6 7 98 0 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
9 1 0 0 5 6 0 5 105 8 1 6 0 7 6 7 102 0 1 1 70 77 0 3 3 2 97 0 2 2 68 77 0 10 10 4 97 0 4 4 71 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
54 53 48 47 35 36 18 21 36 34 19 20 36 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni026C;
unicode = 620;
},
{
glyphname = uni026D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-315,o),
(397,-358,qs),
(407,-448,o),
(455,-449,qs),
(492,-449,o),
(535,-377,qs),
(568,-326,o),
(614,-324,qs),
(647,-324,o),
(672,-340,qs),
(723,-371,o),
(723,-426,qs),
(723,-479,o),
(680,-512,qs),
(623,-555,o),
(561,-555,qs),
(526,-555,o),
(489,-547,qs),
(358,-518,o),
(283,-416,qs),
(199,-303,o),
(174,-129,qs),
(164,-53,o),
(164,139,qs),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(311,1454,o),
(342,1477,qs),
(354,1487,o),
(369,1487,qs),
(402,1487,o),
(399,1454,qs),
(393,1343,o),
(393,1286,qs),
(393,-229,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
2 1 1 0 1 76 0 5 4 3 4 5 3 128 0 0 0 70 77 0 2 2 1 97 0 1 1 68 77 0 4 4 3 97 0 3 3 73 3 78 34 38 41 34 21 19 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni026D;
unicode = 621;
},
{
glyphname = uni026E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1163,-303,o),
(975,-557,o),
(700,-557,qs),
(565,-557,o),
(287,-471,o),
(287,-385,qs),
(287,-326,o),
(360,-276,o),
(391,-276,qs),
(448,-276,o),
(565,-473,o),
(664,-473,qs),
(799,-473,o),
(909,-276,o),
(909,-121,qs),
(909,49,o),
(795,219,o),
(700,219,qs),
(628,219,o),
(569,193,qs),
(563,190,l),
(483,233,o),
(485,307,qs),
(485,309,o),
(487,311,q),
(565,368,o),
(731,522,o),
(846,668,qs),
(854,678,o),
(854,684,qs),
(854,707,o),
(834,709,q),
(393,707,l),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(279,0,qs),
(146,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,135,qs),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(133,1360,o),
(322,1458,o),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1378,o),
(393,1286,qs),
(393,848,l),
(909,848,ls),
(962,848,o),
(1085,852,o),
(1104,852,qs),
(1139,852,o),
(1137,799,o),
(1130,791,qs),
(927,525,o),
(713,322,o),
(713,311,qs),
(713,309,o),
(801,309,qs),
(948,309,o),
(1163,123,o),
(1163,-88,q),
(1163,-88,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
18 1 3 2 53 48 2 0 8 57 1 5 9 39 1 11 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 6 10 6 11 10 128 0 0 0 9 5 0 9 105 0 2 2 70 77 0 4 4 3 97 0 3 3 68 77 0 8 8 1 95 0 1 1 71 77 7 1 5 5 6 97 0 6 6 69 77 0 10 10 12 97 0 12 12 73 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 11 6 10 6 11 10 128 0 0 0 9 5 0 9 105 7 1 5 0 6 11 5 6 105 0 2 2 70 77 0 4 4 3 97 0 3 3 68 77 0 8 8 1 95 0 1 1 71 77 0 10 10 12 97 0 12 12 73 12 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
76 74 70 68 67 65 61 59 18 35 36 19 34 19 20 86 34 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni026E;
unicode = 622;
},
{
glyphname = uni026F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,848,o),
(270,848,qs),
(407,848,o),
(487,856,q),
(503,856,o),
(504,782,o),
(487,782,qs),
(387,782,o),
(387,715,qs),
(387,238,ls),
(387,86,o),
(539,86,qs),
(609,86,o),
(657,147,qs),
(702,202,o),
(702,279,qs),
(702,711,ls),
(702,783,o),
(598,782,qs),
(582,782,o),
(584,856,o),
(598,856,q),
(678,848,o),
(813,848,qs),
(948,848,o),
(1032,856,q),
(1046,856,o),
(1049,782,o),
(1032,782,qs),
(932,782,o),
(932,719,qs),
(932,283,ls),
(932,146,o),
(977,106,qs),
(1004,83,o),
(1073,86,qs),
(1126,86,o),
(1171,117,qs),
(1247,172,o),
(1245,244,qs),
(1245,717,ls),
(1245,783,o),
(1147,782,qs),
(1133,782,o),
(1133,856,o),
(1147,856,q),
(1233,848,o),
(1368,848,qs),
(1503,848,o),
(1587,856,q),
(1601,856,o),
(1604,782,o),
(1587,782,qs),
(1474,782,o),
(1475,713,qs),
(1475,297,ls),
(1475,166,o),
(1567,166,qs),
(1583,166,o),
(1583,129,qs),
(1583,90,o),
(1567,90,qs),
(1518,90,o),
(1380,23,qs),
(1317,-8,o),
(1296,-25,qs),
(1284,-35,o),
(1268,-37,q),
(1237,-37,o),
(1239,-12,qs),
(1245,59,ls),
(1247,77,o),
(1237,78,qs),
(1229,78,o),
(1219,70,q),
(1137,-22,o),
(999,-23,qs),
(856,-23,o),
(784,104,qs),
(776,120,o),
(768,121,qs),
(758,121,o),
(741,102,qs),
(661,18,o),
(555,-10,qs),
(512,-22,o),
(471,-23,qs),
(344,-23,o),
(266,45,qs),
(157,141,o),
(158,295,qs),
(158,711,ls),
(158,783,o),
(51,782,qs),
(35,782,o),
(35,856,o),
(51,856,q),
(51,856,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
37 1 4 5 26 24 2 1 9 2 76 75 51 2 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 0 4 9 5 4 105 14 12 10 8 6 5 0 0 7 97 15 11 2 7 7 71 77 13 1 9 9 1 97 3 2 2 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 4 9 5 4 105 14 12 10 8 6 5 0 0 7 97 15 11 2 7 7 71 77 13 1 9 9 1 97 2 1 1 1 69 77 0 3 3 75 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 0 4 9 5 4 105 14 12 10 8 6 5 0 0 7 97 15 11 2 7 7 71 77 13 1 9 9 1 97 3 2 2 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 4 9 5 4 105 14 12 10 8 6 5 0 0 7 97 15 11 2 7 7 71 77 13 1 9 9 1 97 2 1 1 1 69 77 0 3 3 75 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
15 11 2 7 14 12 10 8 6 5 0 5 7 0 105 0 5 0 4 9 5 4 105 13 1 9 9 1 97 2 1 1 1 69 77 0 3 3 75 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
96 94 90 89 86 84 79 77 74 72 68 67 62 60 35 36 19 35 21 23 40 37 34 16 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1628;
}
);
note = uni026F;
unicode = 623;
},
{
glyphname = uni0270;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,848,o),
(270,848,qs),
(407,848,o),
(487,856,q),
(503,856,o),
(504,782,o),
(487,782,qs),
(387,782,o),
(387,715,qs),
(387,238,ls),
(387,86,o),
(539,86,qs),
(609,86,o),
(702,203,o),
(702,279,qs),
(702,711,ls),
(702,783,o),
(598,782,qs),
(582,782,o),
(584,856,o),
(598,856,q),
(678,848,o),
(813,848,qs),
(948,848,o),
(1032,856,q),
(1046,856,o),
(1049,782,o),
(1032,782,qs),
(932,782,o),
(932,719,qs),
(932,283,ls),
(932,146,o),
(977,106,qs),
(1004,83,o),
(1073,86,qs),
(1126,86,o),
(1171,117,qs),
(1247,172,o),
(1245,244,qs),
(1245,717,ls),
(1245,783,o),
(1147,782,qs),
(1133,782,o),
(1133,856,o),
(1147,856,q),
(1233,848,o),
(1368,848,qs),
(1503,848,o),
(1587,856,q),
(1601,856,o),
(1604,782,o),
(1587,782,qs),
(1474,782,o),
(1475,713,qs),
(1475,-221,ls),
(1475,-352,o),
(1567,-352,qs),
(1583,-352,o),
(1583,-426,o),
(1567,-426,qs),
(1518,-426,o),
(1317,-526,o),
(1296,-543,qs),
(1284,-553,o),
(1268,-555,q),
(1239,-555,o),
(1239,-530,qs),
(1245,-411,o),
(1247,-360,q),
(1245,59,ls),
(1245,77,o),
(1229,78,o),
(1219,70,q),
(1137,-22,o),
(999,-23,qs),
(856,-23,o),
(784,104,qs),
(776,120,o),
(768,121,qs),
(758,121,o),
(741,102,qs),
(700,59,o),
(608,2,o),
(512,-23,o),
(471,-23,qs),
(326,-23,o),
(158,162,o),
(158,295,qs),
(158,711,ls),
(158,783,o),
(51,782,qs),
(35,782,o),
(35,856,o),
(51,856,q),
(51,856,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
73 49 2 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 4 3 5 4 105 14 12 10 8 6 5 0 0 7 97 15 11 2 7 7 71 77 13 1 9 9 1 97 2 1 1 1 69 77 0 3 3 73 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
15 11 2 7 14 12 10 8 6 5 0 9 7 0 105 0 5 0 4 3 5 4 105 13 1 9 9 1 97 2 1 1 1 69 77 0 3 3 73 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
93 91 87 86 83 81 77 75 72 70 66 65 60 58 35 36 19 34 20 24 40 36 34 16 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1628;
}
);
note = uni0270;
unicode = 624;
},
{
glyphname = uni0271;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1481,139,ls),
(1481,-68,o),
(1438,-307,o),
(1311,-489,o),
(1149,-555,o),
(1081,-555,qs),
(1018,-555,o),
(922,-477,o),
(922,-426,qs),
(922,-377,o),
(993,-322,o),
(1030,-324,qs),
(1077,-326,o),
(1153,-449,o),
(1190,-449,qs),
(1235,-449,o),
(1245,-358,qs),
(1249,-317,o),
(1251,-229,qs),
(1251,610,ls),
(1251,762,o),
(1100,762,qs),
(1030,762,o),
(936,643,o),
(936,569,qs),
(936,139,ls),
(936,67,o),
(1040,68,qs),
(1056,68,o),
(1057,-8,o),
(1040,-8,q),
(960,0,o),
(825,0,qs),
(690,0,o),
(606,-8,q),
(592,-8,o),
(592,68,o),
(606,68,qs),
(706,68,o),
(707,131,qs),
(707,565,ls),
(707,702,o),
(662,739,qs),
(635,762,o),
(565,762,qs),
(512,762,o),
(469,729,qs),
(393,674,o),
(393,604,qs),
(393,133,ls),
(393,67,o),
(492,68,qs),
(506,68,o),
(508,-8,o),
(492,-8,q),
(408,0,o),
(272,0,qs),
(137,0,o),
(51,-8,q),
(37,-8,o),
(37,68,o),
(51,68,qs),
(164,68,o),
(164,137,qs),
(164,551,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(322,854,o),
(342,872,qs),
(354,882,o),
(371,883,qs),
(402,883,o),
(399,858,qs),
(393,788,ls),
(391,770,o),
(401,768,q),
(409,768,o),
(420,778,q),
(502,870,o),
(639,870,qs),
(782,870,o),
(854,743,qs),
(862,727,o),
(870,727,qs),
(880,727,o),
(897,745,qs),
(932,782,o),
(1024,842,o),
(1126,870,o),
(1167,870,qs),
(1312,870,o),
(1481,684,o),
(1481,553,q),
(1481,553,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
66 42 2 14 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 13 14 15 14 13 15 128 0 3 0 4 5 3 4 105 12 1 8 8 0 97 2 1 2 0 0 71 77 11 9 7 3 5 5 6 97 10 1 6 6 69 77 0 14 14 15 97 0 15 15 73 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 13 14 15 14 13 15 128 0 3 0 4 5 3 4 105 0 2 2 71 77 12 1 8 8 0 97 1 1 0 0 71 77 11 9 7 3 5 5 6 97 10 1 6 6 69 77 0 14 14 15 97 0 15 15 73 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 13 14 15 14 13 15 128 0 3 0 4 5 3 4 105 11 9 7 3 5 10 1 6 14 5 6 105 0 2 2 71 77 12 1 8 8 0 97 1 1 0 0 71 77 0 14 14 15 97 0 15 15 73 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
92 90 86 84 83 81 76 74 70 68 65 63 59 58 37 35 36 19 34 20 23 40 34 16 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1628;
}
);
note = uni0271;
unicode = 625;
},
{
glyphname = uni0272;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(963,67,o),
(1069,68,qs),
(1085,68,o),
(1085,-8,o),
(1069,-8,q),
(963,0,o),
(754,0,o),
(633,-8,qs),
(619,-8,o),
(618,68,o),
(633,68,qs),
(733,68,o),
(733,129,qs),
(733,537,ls),
(733,687,o),
(676,737,qs),
(647,762,o),
(580,762,qs),
(519,762,o),
(461,713,qs),
(393,656,o),
(393,592,qs),
(393,143,ls),
(393,-47,o),
(383,-129,qs),
(358,-303,o),
(274,-416,qs),
(196,-518,o),
(66,-547,qs),
(29,-555,o),
(-6,-555,qs),
(-69,-555,o),
(-123,-512,qs),
(-166,-477,o),
(-168,-426,qs),
(-168,-369,o),
(-117,-340,qs),
(-90,-326,o),
(-57,-324,qs),
(-10,-324,o),
(23,-377,qs),
(68,-451,o),
(102,-449,qs),
(147,-449,o),
(158,-358,qs),
(164,-307,o),
(164,-229,qs),
(164,549,ls),
(164,678,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(369,883,qs),
(402,883,o),
(399,856,qs),
(393,788,ls),
(391,770,o),
(414,768,o),
(420,778,q),
(463,833,o),
(557,858,qs),
(598,868,o),
(653,870,qs),
(839,870,o),
(928,684,qs),
(965,606,o),
(963,465,qs),
(963,135,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
68 1 5 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 5 6 5 4 6 128 0 2 0 3 8 2 3 105 0 7 7 0 97 1 1 0 0 71 77 10 1 8 8 9 97 0 9 9 69 77 0 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 5 6 5 4 6 128 0 2 0 3 8 2 3 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 10 1 8 8 9 97 0 9 9 69 77 0 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 5 6 5 4 6 128 0 2 0 3 8 2 3 105 0 7 7 0 97 1 1 0 0 71 77 10 1 8 8 9 97 0 9 9 69 77 0 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 5 6 5 4 6 128 0 2 0 3 8 2 3 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 10 1 8 8 9 97 0 9 9 69 77 0 5 5 6 97 0 6 6 73 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
72 70 67 64 21 43 38 34 37 34 21 24 35 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1085;
}
);
note = uni0272;
unicode = 626;
},
{
glyphname = uni0273;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(963,-229,ls),
(963,-319,o),
(969,-358,qs),
(979,-448,o),
(1024,-449,qs),
(1061,-449,o),
(1104,-377,qs),
(1137,-326,o),
(1184,-324,qs),
(1217,-324,o),
(1241,-340,qs),
(1292,-371,o),
(1292,-426,qs),
(1292,-479,o),
(1249,-512,qs),
(1192,-555,o),
(1133,-555,qs),
(1098,-555,o),
(1061,-547,qs),
(930,-518,o),
(852,-416,qs),
(766,-299,o),
(743,-129,qs),
(733,-47,o),
(733,139,qs),
(733,537,ls),
(733,687,o),
(676,737,qs),
(647,762,o),
(580,762,qs),
(519,762,o),
(461,713,qs),
(393,656,o),
(393,592,qs),
(393,143,ls),
(393,67,o),
(492,68,qs),
(506,68,o),
(508,-8,o),
(492,-8,q),
(408,0,o),
(276,0,qs),
(141,0,o),
(57,-8,q),
(43,-8,o),
(43,68,o),
(57,68,qs),
(163,68,o),
(164,143,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(369,883,qs),
(402,883,o),
(399,856,qs),
(393,788,ls),
(391,770,o),
(414,768,o),
(420,778,q),
(463,833,o),
(557,858,qs),
(598,868,o),
(653,870,qs),
(839,870,o),
(928,684,qs),
(963,608,o),
(963,465,q),
(963,465,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 9 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 10 9 8 9 10 8 128 0 2 0 3 4 2 3 105 0 7 7 0 97 1 1 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 9 9 8 97 0 8 8 73 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 9 8 9 10 8 128 0 2 0 3 4 2 3 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 9 9 8 97 0 8 8 73 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 10 9 8 9 10 8 128 0 2 0 3 4 2 3 105 0 7 7 0 97 1 1 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 9 9 8 97 0 8 8 73 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 9 8 9 10 8 128 0 2 0 3 4 2 3 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 6 1 4 4 5 97 0 5 5 69 77 0 9 9 8 97 0 8 8 73 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 9 8 9 10 8 128 0 2 0 3 4 2 3 105 6 1 4 0 5 9 4 5 105 0 1 1 71 77 0 7 7 0 97 0 0 0 71 77 0 9 9 8 97 0 8 8 73 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
71 69 67 65 43 37 35 36 19 34 21 24 35 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1085;
}
);
note = uni0273;
unicode = 627;
},
{
glyphname = uni0274;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-15,o),
(856,-12,o),
(803,45,qs),
(309,582,ls),
(299,594,o),
(287,590,o),
(287,578,qs),
(287,139,ls),
(287,104,o),
(350,68,o),
(391,68,qs),
(405,68,o),
(406,-8,o),
(391,-8,q),
(330,0,o),
(225,0,qs),
(121,0,o),
(61,-8,q),
(45,-8,o),
(43,68,o),
(61,68,qs),
(170,68,o),
(170,139,qs),
(170,672,ls),
(170,738,o),
(125,784,o),
(49,784,qs),
(35,784,o),
(37,856,o),
(49,856,qs),
(139,850,o),
(186,850,qs),
(270,850,ls),
(309,850,o),
(350,831,o),
(369,813,q),
(831,295,ls),
(843,281,o),
(860,281,qs),
(874,281,o),
(874,297,qs),
(874,711,ls),
(874,756,o),
(823,784,o),
(770,784,qs),
(754,784,o),
(754,856,o),
(770,856,q),
(827,850,o),
(926,850,qs),
(1024,850,o),
(1085,856,q),
(1099,856,o),
(1102,784,o),
(1085,784,qs),
(1036,784,o),
(991,752,o),
(991,711,qs),
(991,63,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
51 17 2 5 0 1 76 10 1 1 74 44 1 6 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
51 17 2 5 0 44 1 8 6 2 76 10 1 1 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
51 17 2 5 0 1 76 10 1 1 74 44 1 6 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
51 17 2 5 0 44 1 8 6 2 76 10 1 1 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 2 2 0 0 1 97 3 1 1 1 71 77 7 1 5 5 6 97 8 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 2 2 0 0 1 97 3 1 1 1 71 77 7 1 5 5 6 97 0 6 6 69 77 0 8 8 69 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 2 2 0 0 1 97 3 1 1 1 71 77 7 1 5 5 6 97 8 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 2 2 0 0 1 97 3 1 1 1 71 77 7 1 5 5 6 97 0 6 6 69 77 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
7 1 5 0 6 8 5 6 105 4 2 2 0 0 1 97 3 1 1 1 71 77 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
24 35 36 20 34 74 35 36 18 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1142;
}
);
note = uni0274;
unicode = 628;
},
{
glyphname = uni0275;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(969,217,o),
(846,94,qs),
(727,-25,o),
(518,-23,qs),
(334,-23,o),
(205,98,qs),
(66,229,o),
(66,424,qs),
(66,594,o),
(176,721,qs),
(307,871,o),
(516,870,qs),
(733,870,o),
(866,713,qs),
(969,590,o),
(969,426,q),
(969,426,l)
);
},
{
closed = 1;
nodes = (
(713,475,l),
(705,620,o),
(643,713,qs),
(590,795,o),
(518,793,qs),
(436,793,o),
(379,688,qs),
(330,600,o),
(322,475,q),
(322,475,l)
);
},
{
closed = 1;
nodes = (
(319,371,l),
(327,221,o),
(391,133,qs),
(442,61,o),
(516,61,qs),
(610,61,o),
(666,174,qs),
(707,258,o),
(713,371,q),
(713,371,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 0 5 4 3 5 103 0 2 2 0 97 0 0 0 71 77 0 4 4 1 97 0 1 1 69 1 78 19 36 19 39 38 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1030;
}
);
note = uni0275;
unicode = 629;
},
{
glyphname = uni0276;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1448,25,o),
(1444,10,qs),
(1440,-6,o),
(1386,-6,qs),
(1269,-6,o),
(1012,0,o),
(801,0,qs),
(735,0,o),
(621,-8,o),
(522,-8,qs),
(338,-8,o),
(66,248,o),
(66,426,qs),
(66,594,o),
(319,862,o),
(524,862,qs),
(596,862,o),
(752,858,o),
(784,858,qs),
(991,858,o),
(1280,860,o),
(1374,860,qs),
(1409,860,o),
(1409,827,qs),
(1409,616,ls),
(1409,604,o),
(1317,604,o),
(1317,616,qs),
(1317,702,o),
(1251,756,qs),
(1210,789,o),
(1163,791,qs),
(942,799,ls),
(924,799,o),
(924,770,qs),
(924,492,ls),
(924,472,o),
(944,471,qs),
(1071,471,ls),
(1155,471,o),
(1155,532,qs),
(1155,602,ls),
(1155,616,o),
(1249,618,o),
(1251,602,q),
(1247,575,o),
(1247,307,o),
(1251,287,q),
(1251,271,o),
(1155,270,o),
(1155,287,qs),
(1155,346,ls),
(1155,407,o),
(1071,408,qs),
(944,408,ls),
(924,408,o),
(924,387,qs),
(924,152,ls),
(924,103,o),
(985,74,qs),
(1018,60,o),
(1053,59,q),
(1202,63,ls),
(1356,67,o),
(1356,236,qs),
(1356,248,o),
(1448,248,o),
(1448,236,qs),
(1448,39,ls)
);
},
{
closed = 1;
nodes = (
(694,723,ls),
(694,752,o),
(670,772,qs),
(643,792,o),
(522,793,qs),
(440,793,o),
(319,592,o),
(319,453,qs),
(319,361,o),
(362,188,o),
(479,61,o),
(557,61,qs),
(620,61,o),
(694,102,o),
(694,145,q),
(694,145,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
40 23 2 2 3 17 0 2 0 1 68 1 5 0 3 76 0 2 0 1 0 2 1 105 7 1 3 3 4 95 0 4 4 71 77 6 1 0 0 5 95 0 5 5 69 5 78 37 38 132 136 51 61 53 52 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1511;
}
);
note = uni0276;
unicode = 630;
},
{
glyphname = uni0277;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(766,664,o),
(819,559,o),
(819,481,qs),
(819,372,o),
(772,254,q),
(805,154,o),
(903,68,o),
(956,68,qs),
(1005,68,o),
(1096,156,o),
(1139,328,o),
(1139,379,qs),
(1139,512,o),
(989,727,o),
(817,784,o),
(733,784,qs),
(639,784,o),
(471,727,o),
(324,512,o),
(324,379,qs),
(324,330,o),
(367,156,o),
(457,68,o),
(506,68,qs),
(557,68,o),
(655,154,o),
(688,254,q),
(643,375,o),
(643,481,qs),
(643,559,o),
(694,664,o),
(731,664,q),
(731,664,l)
);
},
{
closed = 1;
nodes = (
(641,-22,o),
(438,-23,qs),
(346,-23,o),
(184,57,o),
(66,244,o),
(66,373,qs),
(66,559,o),
(262,795,o),
(510,870,o),
(733,870,qs),
(966,870,o),
(1200,795,o),
(1395,559,o),
(1395,373,qs),
(1395,246,o),
(1278,57,o),
(1116,-23,o),
(1024,-23,qs),
(813,-22,o),
(727,158,q),
(727,158,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
27 5 2 1 0 1 76 7 1 0 2 1 2 0 1 128 0 2 2 5 97 0 5 5 71 77 3 1 1 1 4 97 6 1 4 4 69 4 78 1 0 52 50 44 42 36 34 25 23 17 15 9 7 0 32 1 31 8 11 22 
CALL[ ]	/* CallFunction */";
};
width = 1456;
}
);
note = uni0277;
unicode = 631;
},
{
glyphname = uni0278;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1110,217,o),
(985,94,qs),
(879,-12,o),
(700,-23,q),
(700,-193,ls),
(700,-269,o),
(803,-268,qs),
(817,-268,o),
(817,-344,o),
(803,-344,q),
(717,-336,o),
(584,-336,qs),
(451,-336,o),
(367,-344,q),
(353,-344,o),
(350,-268,o),
(367,-268,qs),
(471,-268,o),
(471,-201,qs),
(471,-20,l),
(317,-6,o),
(205,98,qs),
(66,229,o),
(66,424,qs),
(66,594,o),
(176,721,qs),
(293,854,o),
(469,868,q),
(469,1085,ls),
(469,1161,o),
(367,1159,qs),
(353,1159,o),
(350,1237,o),
(367,1237,q),
(451,1229,o),
(584,1229,qs),
(717,1229,o),
(803,1237,q),
(817,1237,o),
(817,1159,o),
(803,1159,qs),
(699,1159,o),
(698,1094,qs),
(698,868,l),
(886,854,o),
(1008,713,qs),
(1110,590,o),
(1110,426,q),
(1110,426,l)
);
},
{
closed = 1;
nodes = (
(854,604,o),
(784,713,qs),
(745,770,o),
(698,786,q),
(700,68,l),
(763,88,o),
(807,174,qs),
(854,275,o),
(854,420,q),
(854,420,l)
);
},
{
closed = 1;
nodes = (
(469,782,l),
(418,759,o),
(379,688,qs),
(320,579,o),
(319,420,qs),
(319,236,o),
(391,133,q),
(428,86,o),
(471,70,q),
(471,70,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
68 67 54 53 20 4 6 6 0 28 1 3 6 2 76 14 1 1 74 38 1 4 73 0 1 2 1 0 6 1 0 105 5 1 3 0 4 3 4 101 0 6 6 69 6 78 18 35 36 28 35 36 22 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 1171;
}
);
note = uni0278;
unicode = 632;
},
{
glyphname = uni0279;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,143,o),
(106,213,o),
(147,213,qs),
(196,213,o),
(264,139,o),
(299,139,qs),
(342,139,o),
(408,254,o),
(408,326,qs),
(408,707,ls),
(408,783,o),
(303,782,qs),
(289,782,o),
(289,856,o),
(303,856,q),
(352,850,o),
(516,850,qs),
(678,850,o),
(741,856,q),
(755,856,o),
(756,782,o),
(741,782,qs),
(637,782,o),
(637,707,qs),
(637,299,ls),
(637,166,o),
(727,166,qs),
(743,166,o),
(743,90,o),
(727,90,qs),
(676,90,o),
(539,20,qs),
(480,-11,o),
(459,-25,q),
(447,-35,o),
(428,-37,q),
(397,-37,o),
(401,-16,q),
(408,59,ls),
(410,82,o),
(393,82,qs),
(381,82,o),
(358,55,qs),
(290,-25,o),
(190,-23,qs),
(124,-23,o),
(43,49,o),
(43,94,q),
(43,94,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
33 1 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 5 4 8 9 114 0 4 3 1 1 0 4 1 105 7 1 5 5 6 97 0 6 6 71 77 0 8 8 0 98 2 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 5 4 5 9 4 128 0 4 3 1 1 0 4 1 105 7 1 5 5 6 97 0 6 6 71 77 0 8 8 0 98 2 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 9 5 4 5 9 4 128 0 4 3 1 1 0 4 1 105 7 1 5 5 6 97 0 6 6 71 77 0 8 8 0 98 0 0 0 69 77 0 2 2 75 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 44 36 35 36 19 34 21 19 34 34 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni0279;
unicode = 633;
},
{
glyphname = uni027A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,143,o),
(106,213,o),
(147,213,qs),
(196,213,o),
(264,139,o),
(299,139,qs),
(342,139,o),
(375,197,qs),
(410,254,o),
(408,326,qs),
(408,1251,ls),
(408,1327,o),
(303,1325,qs),
(289,1325,o),
(289,1401,o),
(303,1401,q),
(352,1395,o),
(516,1395,qs),
(678,1395,o),
(741,1401,q),
(755,1401,o),
(756,1325,o),
(741,1325,qs),
(637,1325,o),
(637,1251,qs),
(637,299,ls),
(637,166,o),
(727,166,qs),
(743,166,o),
(743,90,o),
(727,90,qs),
(676,90,o),
(539,20,qs),
(480,-11,o),
(459,-25,q),
(447,-35,o),
(428,-37,q),
(397,-37,o),
(401,-16,q),
(408,59,ls),
(410,82,o),
(393,82,qs),
(381,82,o),
(358,55,qs),
(290,-25,o),
(190,-23,qs),
(124,-23,o),
(43,49,o),
(43,94,q),
(43,94,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
33 1 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 5 4 8 9 114 0 4 3 1 1 0 4 1 105 7 1 5 5 6 97 0 6 6 74 77 0 8 8 0 98 2 1 0 0 69 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 5 4 5 9 4 128 0 4 3 1 1 0 4 1 105 7 1 5 5 6 97 0 6 6 74 77 0 8 8 0 98 2 1 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 9 5 4 5 9 4 128 0 4 3 1 1 0 4 1 105 7 1 5 5 6 97 0 6 6 74 77 0 8 8 0 98 0 0 0 69 77 0 2 2 75 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
47 45 37 35 36 19 34 21 19 34 34 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni027A;
unicode = 634;
},
{
glyphname = uni027B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(637,-229,ls),
(637,-315,o),
(641,-358,qs),
(651,-448,o),
(696,-449,qs),
(733,-449,o),
(776,-377,qs),
(809,-326,o),
(856,-324,qs),
(889,-324,o),
(915,-340,qs),
(966,-371,o),
(967,-426,qs),
(967,-479,o),
(922,-512,qs),
(865,-555,o),
(805,-555,qs),
(770,-555,o),
(733,-547,qs),
(602,-518,o),
(524,-416,qs),
(434,-295,o),
(418,-129,qs),
(408,-35,o),
(408,59,qs),
(408,82,o),
(381,82,o),
(358,55,qs),
(288,-25,o),
(190,-23,qs),
(124,-23,o),
(43,49,o),
(43,94,qs),
(43,143,o),
(106,213,o),
(147,213,qs),
(196,213,o),
(264,139,o),
(299,139,qs),
(342,139,o),
(408,254,o),
(408,326,qs),
(408,707,ls),
(408,783,o),
(303,782,qs),
(289,782,o),
(289,856,o),
(303,856,q),
(352,850,o),
(516,850,qs),
(678,850,o),
(741,856,q),
(755,856,o),
(756,782,o),
(741,782,qs),
(637,783,o),
(637,707,q),
(637,707,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 0 3 3 4 114 0 6 3 5 3 6 5 128 0 9 8 7 8 9 7 128 2 1 0 0 1 97 0 1 1 71 77 0 3 3 5 98 0 5 5 69 77 0 8 8 7 97 0 7 7 73 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 4 0 3 0 4 3 128 0 6 3 5 3 6 5 128 0 9 8 7 8 9 7 128 2 1 0 0 1 97 0 1 1 71 77 0 3 3 5 98 0 5 5 69 77 0 8 8 7 97 0 7 7 73 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
53 51 38 40 18 36 33 36 35 36 17 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni027B;
unicode = 635;
},
{
glyphname = uni027C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(756,693,o),
(715,657,qs),
(688,632,o),
(653,633,qs),
(602,633,o),
(551,684,qs),
(528,707,o),
(502,707,qs),
(459,707,o),
(426,649,qs),
(393,594,o),
(393,522,qs),
(393,-408,ls),
(393,-484,o),
(496,-483,qs),
(510,-483,o),
(512,-559,o),
(496,-559,q),
(412,-551,o),
(279,-551,qs),
(146,-551,o),
(59,-559,q),
(45,-559,o),
(43,-483,o),
(59,-483,qs),
(163,-483,o),
(164,-408,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(123,756,o),
(262,825,qs),
(321,856,o),
(342,872,qs),
(354,882,o),
(371,883,qs),
(400,883,o),
(399,862,q),
(393,817,o),
(393,788,qs),
(393,765,o),
(420,766,o),
(442,791,qs),
(510,871,o),
(610,870,qs),
(680,870,o),
(725,825,qs),
(756,795,o),
(756,752,q),
(756,752,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 1 0 1 76 34 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 4 5 8 9 114 3 1 1 0 4 9 1 4 105 0 8 8 0 97 2 1 0 0 71 77 7 1 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 4 5 4 9 5 128 3 1 1 0 4 9 1 4 105 0 8 8 0 97 2 1 0 0 71 77 7 1 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 9 4 5 4 9 5 128 3 1 1 0 4 9 1 4 105 0 2 2 71 77 0 8 8 0 97 0 0 0 71 77 7 1 5 5 6 97 0 6 6 73 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
49 47 37 35 36 19 34 21 20 18 35 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uni027C;
unicode = 636;
},
{
glyphname = uni027D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-229,ls),
(393,-315,o),
(397,-358,qs),
(407,-448,o),
(455,-449,qs),
(492,-449,o),
(535,-377,qs),
(568,-326,o),
(614,-324,qs),
(647,-324,o),
(672,-340,qs),
(723,-371,o),
(723,-426,qs),
(723,-479,o),
(680,-512,qs),
(623,-555,o),
(561,-555,qs),
(526,-555,o),
(489,-547,qs),
(358,-518,o),
(283,-416,qs),
(199,-303,o),
(174,-129,qs),
(164,-55,o),
(164,139,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(123,756,o),
(262,825,qs),
(321,856,o),
(342,872,qs),
(354,882,o),
(371,883,qs),
(400,883,o),
(399,862,q),
(393,817,o),
(393,788,qs),
(393,765,o),
(420,766,o),
(442,791,qs),
(512,871,o),
(610,870,qs),
(680,870,o),
(725,825,qs),
(756,794,o),
(756,752,qs),
(756,693,o),
(715,657,qs),
(688,632,o),
(653,633,qs),
(602,633,o),
(551,684,qs),
(528,707,o),
(502,707,qs),
(459,707,o),
(426,649,qs),
(393,594,o),
(393,522,q),
(393,522,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 6 8 0 1 114 0 9 8 7 8 9 7 128 5 1 3 0 6 1 3 6 105 0 0 0 2 97 4 1 2 2 71 77 0 8 8 7 97 0 7 7 73 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 8 6 1 8 128 0 9 8 7 8 9 7 128 5 1 3 0 6 1 3 6 105 0 0 0 2 97 4 1 2 2 71 77 0 8 8 7 97 0 7 7 73 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 6 8 6 1 8 128 0 9 8 7 8 9 7 128 5 1 3 0 6 1 3 6 105 0 4 4 71 77 0 0 0 2 97 0 2 2 71 77 0 8 8 7 97 0 7 7 73 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
58 56 38 41 34 21 20 18 38 34 35 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uni027D;
unicode = 637;
},
{
glyphname = uni027E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,281,ls),
(164,535,o),
(385,870,o),
(610,870,qs),
(680,870,o),
(725,825,qs),
(756,794,o),
(756,752,qs),
(756,693,o),
(715,657,qs),
(688,632,o),
(653,633,qs),
(602,633,o),
(551,684,qs),
(528,707,o),
(502,707,qs),
(459,707,o),
(426,649,qs),
(393,594,o),
(393,522,qs),
(393,143,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
29 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 3 0 1 114 0 0 0 2 97 0 2 2 71 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 71 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 0 1 3 128 5 1 3 0 4 3 4 101 0 0 0 2 97 0 2 2 71 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 36 20 38 34 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uni027E;
unicode = 638;
},
{
glyphname = uni027F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,143,ls),
(616,67,o),
(721,68,qs),
(735,68,o),
(735,-8,o),
(721,-8,q),
(637,0,o),
(494,0,qs),
(369,0,o),
(285,-8,q),
(271,-8,o),
(268,68,o),
(285,68,qs),
(387,68,o),
(387,143,qs),
(387,522,ls),
(387,594,o),
(354,649,qs),
(319,706,o),
(279,707,qs),
(252,707,o),
(229,684,qs),
(178,633,o),
(127,633,qs),
(92,633,o),
(66,657,qs),
(23,694,o),
(25,752,qs),
(25,795,o),
(55,825,qs),
(100,868,o),
(170,870,qs),
(395,870,o),
(616,535,o),
(616,281,q),
(616,281,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
29 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 2 3 2 1 114 0 2 2 0 97 0 0 0 71 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 71 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 2 3 2 1 3 128 5 1 3 0 4 3 4 101 0 2 2 0 97 0 0 0 71 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 36 21 34 38 34 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uni027F;
unicode = 639;
},
{
glyphname = uni0280;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(913,430,o),
(748,383,qs),
(728,377,o),
(743,352,q),
(819,246,o),
(901,160,qs),
(979,80,o),
(1079,29,qs),
(1095,21,o),
(1098,6,q),
(1098,-14,o),
(1079,-12,q),
(923,-12,o),
(778,43,o),
(680,145,o),
(596,258,o),
(563,303,o),
(518,360,o),
(489,362,o),
(469,362,qs),
(420,362,o),
(393,365,o),
(393,348,qs),
(393,141,ls),
(393,100,o),
(442,68,o),
(500,68,qs),
(514,68,o),
(514,-8,o),
(500,-8,q),
(410,0,o),
(276,0,qs),
(145,0,o),
(53,-8,q),
(39,-8,o),
(39,68,o),
(53,68,qs),
(164,68,o),
(164,141,qs),
(164,709,ls),
(164,779,o),
(47,778,qs),
(31,778,o),
(31,854,o),
(47,854,qs),
(153,850,o),
(248,850,qs),
(342,850,o),
(485,854,o),
(543,854,qs),
(705,854,o),
(913,725,o),
(913,608,q),
(913,608,l)
);
},
{
closed = 1;
nodes = (
(682,686,o),
(553,791,o),
(463,791,qs),
(412,791,o),
(393,782,o),
(393,764,qs),
(393,455,ls),
(393,432,o),
(412,430,qs),
(473,426,o),
(481,426,qs),
(567,426,o),
(682,524,o),
(682,608,q),
(682,608,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
62 1 7 1 30 1 2 5 43 1 3 2 3 76 23 1 3 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
62 1 7 1 30 1 2 5 43 1 3 2 23 1 6 3 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 7 0 5 2 7 5 105 8 1 1 1 0 95 0 0 0 71 77 4 1 2 2 3 97 6 1 3 3 69 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 8 7 8 1 114 0 7 0 5 2 7 5 105 0 8 8 0 95 0 0 0 71 77 4 1 2 2 3 97 6 1 3 3 69 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 8 7 8 1 114 0 7 0 5 2 7 5 105 0 8 8 0 95 0 0 0 71 77 4 1 2 2 3 97 0 3 3 69 77 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 8 7 8 1 114 0 7 0 5 2 7 5 105 4 1 2 0 3 6 2 3 105 0 8 8 0 95 0 0 0 71 77 0 6 6 69 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
37 63 21 53 35 36 19 34 98 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1052;
}
);
note = uni0280;
unicode = 640;
},
{
glyphname = uni0281;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(913,125,o),
(705,-4,o),
(543,-4,qs),
(486,-4,o),
(342,0,o),
(256,0,qs),
(170,0,o),
(47,-4,qs),
(31,-4,o),
(31,72,o),
(47,72,qs),
(164,72,o),
(164,141,qs),
(164,709,ls),
(164,783,o),
(53,782,qs),
(39,782,o),
(39,854,o),
(53,854,qs),
(112,850,o),
(276,850,qs),
(438,850,o),
(500,854,qs),
(514,854,o),
(514,782,o),
(500,782,qs),
(443,782,o),
(393,750,o),
(393,709,qs),
(393,502,ls),
(393,486,o),
(422,489,o),
(469,487,qs),
(489,487,o),
(518,489,o),
(563,547,o),
(596,592,o),
(680,705,o),
(778,807,o),
(924,862,o),
(1079,862,qs),
(1097,862,o),
(1098,844,qs),
(1098,832,o),
(1079,821,qs),
(979,768,o),
(901,690,qs),
(817,604,o),
(743,498,qs),
(727,473,o),
(748,469,q),
(913,420,o),
(913,242,q),
(913,242,l)
);
},
{
closed = 1;
nodes = (
(682,326,o),
(567,426,o),
(481,426,qs),
(473,426,o),
(412,420,qs),
(394,418,o),
(393,395,qs),
(393,86,ls),
(393,68,o),
(412,59,o),
(463,59,qs),
(551,59,o),
(682,164,o),
(682,242,q),
(682,242,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 8 5 1 8 105 4 1 2 2 0 97 3 1 0 0 71 77 7 1 5 5 6 95 0 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 8 7 7 5 114 0 1 0 8 5 1 8 105 4 1 2 2 0 97 3 1 0 0 71 77 0 7 7 6 96 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 8 7 7 5 114 0 1 0 8 5 1 8 105 0 7 0 6 7 6 100 0 0 0 71 77 4 1 2 2 3 95 0 3 3 71 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
38 37 114 19 34 82 21 53 43 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1052;
}
);
note = uni0281;
unicode = 641;
},
{
glyphname = uni0282;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,127,o),
(584,43,qs),
(490,-27,o),
(346,-23,qs),
(322,-23,l),
(322,-45,ls),
(322,-111,o),
(342,-266,o),
(371,-266,qs),
(400,-266,o),
(422,-176,o),
(459,-176,qs),
(488,-176,o),
(530,-231,o),
(530,-264,qs),
(530,-319,o),
(461,-373,o),
(410,-373,qs),
(260,-373,o),
(102,-37,o),
(78,258,q),
(78,276,o),
(150,276,o),
(154,260,q),
(158,207,o),
(221,133,qs),
(287,57,o),
(379,57,qs),
(428,57,o),
(469,98,qs),
(502,133,o),
(502,174,qs),
(502,295,o),
(330,340,qs),
(154,387,o),
(92,489,qs),
(61,540,o),
(63,612,qs),
(63,727,o),
(164,801,qs),
(256,871,o),
(387,870,qs),
(510,870,o),
(604,834,q),
(643,730,o),
(643,643,qs),
(643,625,o),
(612,625,qs),
(579,625,o),
(578,635,q),
(560,686,o),
(498,748,qs),
(457,789,o),
(373,788,qs),
(316,788,o),
(252,713,o),
(252,674,qs),
(252,574,o),
(420,532,qs),
(580,491,o),
(643,416,qs),
(694,354,o),
(694,258,q),
(694,258,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 6 8 7 7 6 114 0 7 0 5 7 5 102 0 0 0 2 97 0 2 2 71 77 0 3 3 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 6 8 7 8 6 7 128 0 7 0 5 7 5 102 0 0 0 2 97 0 2 2 71 77 0 3 3 8 97 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
35 33 36 35 20 44 36 21 40 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni0282;
unicode = 642;
},
{
glyphname = uni0283;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-256,o),
(201,-559,o),
(-2,-559,qs),
(-65,-559,o),
(-166,-498,o),
(-166,-457,qs),
(-166,-420,o),
(-123,-369,o),
(-88,-369,qs),
(-39,-369,o),
(41,-446,o),
(66,-446,qs),
(164,-446,o),
(164,-233,qs),
(164,872,ls),
(164,1177,o),
(391,1487,o),
(559,1487,qs),
(653,1487,o),
(723,1415,o),
(723,1384,qs),
(723,1341,o),
(688,1290,o),
(645,1290,qs),
(592,1290,o),
(524,1374,o),
(492,1374,qs),
(394,1374,o),
(393,1161,qs),
(393,55,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 4 0 1 114 0 4 3 3 4 112 0 0 0 2 97 0 2 2 70 77 0 3 3 5 98 0 5 5 73 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 4 0 1 4 128 0 4 3 3 4 112 0 0 0 2 97 0 2 2 70 77 0 3 3 5 98 0 5 5 73 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 0 0 2 97 0 2 2 70 77 0 3 3 5 98 0 5 5 73 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 33 36 36 33 33 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni0283;
unicode = 643;
},
{
glyphname = uni0284;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-256,o),
(201,-559,o),
(-2,-559,qs),
(-65,-559,o),
(-166,-498,o),
(-166,-457,qs),
(-166,-420,o),
(-123,-369,o),
(-88,-369,qs),
(-39,-369,o),
(41,-446,o),
(66,-446,qs),
(164,-446,o),
(164,-233,qs),
(164,76,l),
(-55,76,ls),
(-73,76,o),
(-76,207,o),
(-55,207,qs),
(164,207,l),
(164,872,ls),
(164,1177,o),
(391,1487,o),
(559,1487,qs),
(653,1487,o),
(723,1415,o),
(723,1384,qs),
(723,1341,o),
(688,1290,o),
(645,1290,qs),
(592,1290,o),
(524,1374,o),
(492,1374,qs),
(394,1374,o),
(393,1161,qs),
(393,207,l),
(516,207,ls),
(536,207,o),
(537,76,o),
(514,76,qs),
(393,76,l),
(393,55,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 1 2 3 114 0 8 0 7 7 8 114 5 1 1 6 1 0 8 1 0 105 0 2 2 4 97 0 4 4 70 77 0 7 7 9 98 0 9 9 73 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 2 1 2 3 1 128 0 8 0 7 7 8 114 5 1 1 6 1 0 8 1 0 105 0 2 2 4 97 0 4 4 70 77 0 7 7 9 98 0 9 9 73 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 1 2 3 1 128 0 8 0 7 0 8 7 128 5 1 1 6 1 0 8 1 0 105 0 2 2 4 97 0 4 4 70 77 0 7 7 9 98 0 9 9 73 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 37 33 34 33 35 36 33 34 33 32 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni0284;
unicode = 644;
},
{
glyphname = uni0285;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,963,ls),
(168,1176,o),
(68,1176,qs),
(35,1176,o),
(-33,1090,o),
(-86,1090,qs),
(-129,1090,o),
(-164,1143,o),
(-164,1186,qs),
(-164,1217,o),
(-94,1286,o),
(0,1286,qs),
(170,1286,o),
(283,1133,qs),
(398,975,o),
(395,674,qs),
(393,299,ls),
(393,86,o),
(492,86,qs),
(517,86,o),
(596,164,o),
(645,164,qs),
(682,164,o),
(723,113,o),
(723,76,qs),
(723,35,o),
(625,-27,o),
(561,-27,qs),
(356,-27,o),
(260,125,qs),
(162,279,o),
(164,588,q),
(164,588,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 5 1 5 4 114 0 1 2 2 1 112 0 3 0 5 4 3 5 105 0 2 2 0 98 0 0 0 75 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 1 5 4 1 128 0 1 2 2 1 112 0 3 0 5 4 3 5 105 0 2 2 0 98 0 0 0 75 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 3 0 5 4 3 5 105 0 2 2 0 98 0 0 0 75 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
33 36 37 33 36 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni0285;
unicode = 645;
},
{
glyphname = uni0286;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,-346,o),
(444,-381,o),
(428,-373,q),
(387,-330,o),
(346,-301,q),
(326,-362,o),
(297,-408,qs),
(203,-560,o),
(0,-559,qs),
(-102,-559,o),
(-199,-432,o),
(-199,-342,qs),
(-199,-260,o),
(-68,-127,o),
(35,-127,qs),
(101,-127,o),
(164,-139,q),
(164,872,ls),
(164,1177,o),
(391,1487,o),
(559,1487,qs),
(653,1487,o),
(723,1415,o),
(723,1384,qs),
(723,1341,o),
(688,1290,o),
(645,1290,qs),
(592,1290,o),
(524,1374,o),
(492,1374,qs),
(394,1374,o),
(393,1161,qs),
(393,55,ls),
(393,-107,o),
(367,-225,q),
(436,-271,o),
(481,-334,q),
(481,-334,l)
);
},
{
closed = 1;
nodes = (
(164,-446,o),
(164,-233,qs),
(164,-225,l),
(105,-215,o),
(35,-213,qs),
(-10,-213,o),
(-72,-289,o),
(-74,-342,q),
(-71,-446,o),
(66,-446,q),
(66,-446,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
20 1 6 3 45 32 2 3 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 114 0 3 0 6 5 3 6 105 0 0 0 2 97 0 2 2 70 77 7 1 5 5 4 97 0 4 4 73 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 3 0 1 3 128 0 3 0 6 5 3 6 105 0 0 0 2 97 0 2 2 70 77 7 1 5 5 4 97 0 4 4 73 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
39 38 44 42 38 48 39 47 36 36 36 33 38 8 11 27 
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = uni0286;
unicode = 646;
},
{
glyphname = uni0287;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(549,135,ls),
(549,104,o),
(580,104,qs),
(635,104,ls),
(651,104,o),
(651,31,o),
(635,31,qs),
(574,31,o),
(502,-29,qs),
(432,-86,o),
(410,-154,qs),
(406,-166,o),
(369,-156,qs),
(326,-144,o),
(317,-125,q),
(317,-31,ls),
(317,0,o),
(287,0,qs),
(72,0,ls),
(58,0,o),
(57,104,o),
(72,104,qs),
(287,104,ls),
(318,104,o),
(317,135,qs),
(317,549,ls),
(317,670,o),
(285,707,qs),
(258,738,o),
(135,737,o),
(70,690,qs),
(60,682,o),
(33,715,qs),
(8,746,o),
(16,758,q),
(125,873,o),
(291,870,qs),
(510,868,o),
(543,686,qs),
(549,655,o),
(549,614,q),
(549,614,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
26 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 3 2 4 89 0 1 1 0 97 0 0 0 71 77 5 1 2 2 3 95 0 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 4 3 2 4 89 5 1 2 0 3 2 3 99 0 1 1 0 97 0 0 0 71 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
50 25 50 37 22 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = uni0287;
unicode = 647;
},
{
glyphname = uni0288;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(577,-557,o),
(412,-555,qs),
(191,-553,o),
(160,-373,qs),
(154,-338,o),
(154,-299,qs),
(154,715,ls),
(154,746,o),
(123,745,qs),
(68,745,ls),
(52,745,o),
(51,819,o),
(68,819,qs),
(129,819,o),
(270,936,o),
(293,1004,qs),
(297,1016,o),
(336,1006,qs),
(379,994,o),
(385,975,q),
(385,881,ls),
(385,850,o),
(416,850,qs),
(631,850,ls),
(645,850,o),
(645,745,o),
(631,745,qs),
(416,745,ls),
(385,745,o),
(385,715,qs),
(385,-233,ls),
(385,-354,o),
(420,-391,qs),
(447,-422,o),
(506,-424,qs),
(567,-424,o),
(633,-377,qs),
(643,-369,o),
(672,-399,q),
(696,-432,o),
(686,-442,q),
(686,-442,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
21 1 2 74 0 3 1 1 3 89 4 1 1 1 2 95 0 2 2 71 77 0 0 0 5 97 0 5 5 73 5 78 37 50 24 50 37 37 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = uni0288;
unicode = 648;
},
{
glyphname = uni0289;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,166,o),
(930,139,qs),
(944,98,o),
(981,98,qs),
(993,98,o),
(1016,104,qs),
(1032,108,o),
(1040,72,qs),
(1044,56,o),
(1044,45,qs),
(1044,33,o),
(1038,31,q),
(999,27,o),
(883,0,qs),
(840,-8,o),
(768,-31,qs),
(756,-35,o),
(743,-35,qs),
(729,-35,o),
(729,10,qs),
(729,57,ls),
(729,80,o),
(705,80,o),
(690,66,qs),
(598,-22,o),
(444,-23,qs),
(317,-23,o),
(274,12,qs),
(127,131,o),
(127,309,qs),
(127,494,l),
(20,494,ls),
(4,494,o),
(4,598,o),
(20,598,qs),
(127,598,l),
(127,655,ls),
(127,757,o),
(43,758,qs),
(29,758,o),
(29,831,o),
(43,831,qs),
(156,831,o),
(266,850,qs),
(297,854,o),
(317,854,qs),
(362,854,o),
(362,811,q),
(356,713,o),
(356,649,qs),
(356,598,l),
(690,598,l),
(690,655,ls),
(690,757,o),
(606,758,qs),
(590,758,o),
(590,831,o),
(606,831,qs),
(717,831,o),
(836,850,qs),
(861,854,o),
(874,854,qs),
(927,854,o),
(928,817,q),
(920,723,o),
(920,662,qs),
(920,598,l),
(1018,598,ls),
(1032,598,o),
(1032,494,o),
(1018,494,qs),
(920,494,l),
(920,256,ls)
);
},
{
closed = 1;
nodes = (
(356,494,l),
(356,307,ls),
(356,184,o),
(406,125,qs),
(435,92,o),
(504,92,qs),
(567,92,o),
(637,147,qs),
(690,190,o),
(690,240,qs),
(690,494,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 12 14 11 14 12 11 128 9 5 2 1 16 10 2 0 14 1 0 103 6 1 2 2 71 77 8 1 4 4 3 97 7 1 3 3 71 77 15 1 14 14 11 97 13 1 11 11 69 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 12 14 11 14 12 11 128 7 1 3 8 1 4 1 3 4 105 9 5 2 1 16 10 2 0 14 1 0 103 6 1 2 2 71 77 15 1 14 14 11 97 13 1 11 11 69 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 12 14 11 14 12 11 128 7 1 3 8 1 4 1 3 4 105 9 5 2 1 16 10 2 0 14 1 0 103 6 1 2 2 71 77 15 1 14 14 11 97 0 11 11 69 77 0 13 13 75 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
83 82 78 76 69 67 55 53 50 49 47 45 41 39 37 36 34 18 36 18 34 19 20 34 16 17 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1026;
}
);
note = uni0289;
unicode = 649;
},
{
glyphname = uni028A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,555,o),
(127,653,q),
(127,757,o),
(41,758,qs),
(27,758,o),
(27,829,o),
(41,829,qs),
(147,829,o),
(319,854,o),
(354,854,qs),
(403,854,o),
(399,811,qs),
(393,745,o),
(393,713,q),
(317,598,o),
(319,416,qs),
(319,246,o),
(438,61,o),
(512,61,qs),
(598,61,o),
(715,250,o),
(715,416,qs),
(715,592,o),
(647,707,q),
(645,760,o),
(641,811,qs),
(639,854,o),
(692,854,qs),
(723,854,o),
(883,829,o),
(995,829,qs),
(1009,829,o),
(1010,758,o),
(995,758,qs),
(909,758,o),
(909,651,q),
(968,557,o),
(969,412,qs),
(969,244,o),
(733,-23,o),
(518,-23,qs),
(319,-23,o),
(66,244,o),
(66,412,q),
(66,412,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
18 1 1 2 42 30 20 8 4 4 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
5 1 3 3 71 77 7 1 1 1 2 97 6 1 2 2 71 77 0 4 4 0 97 0 0 0 69 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 2 7 1 1 4 2 1 105 5 1 3 3 71 77 0 4 4 0 97 0 0 0 69 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 17 39 39 33 34 21 34 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1015;
}
);
note = uni028A;
unicode = 650;
},
{
glyphname = uni028B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1044,291,o),
(938,90,o),
(743,-23,o),
(543,-23,qs),
(381,-23,o),
(274,68,qs),
(163,160,o),
(164,305,qs),
(164,557,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(373,883,qs),
(402,883,o),
(399,856,qs),
(393,768,o),
(393,682,qs),
(393,311,ls),
(393,168,o),
(500,61,o),
(565,61,qs),
(676,61,o),
(791,256,o),
(791,436,qs),
(791,665,o),
(578,727,q),
(578,778,o),
(690,870,o),
(760,870,qs),
(895,870,o),
(1044,586,o),
(1044,426,q),
(1044,426,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
17 1 3 0 6 1 4 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 1 3 4 105 2 1 0 0 71 77 0 1 1 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 1 3 4 105 0 2 2 71 77 0 0 0 71 77 0 1 1 5 97 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 34 20 38 38 34 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1105;
}
);
note = uni028B;
unicode = 651;
},
{
glyphname = uni028C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(863,67,o),
(934,68,qs),
(948,68,o),
(948,-8,o),
(934,-8,q),
(856,0,o),
(731,0,qs),
(606,0,o),
(522,-8,q),
(508,-8,o),
(508,68,o),
(522,68,qs),
(592,68,o),
(592,111,qs),
(592,131,o),
(590,137,qs),
(444,594,ls),
(440,608,o),
(430,608,qs),
(422,608,o),
(418,594,qs),
(262,143,ls),
(258,129,o),
(256,119,q),
(256,68,o),
(348,68,qs),
(362,68,o),
(362,-8,o),
(348,-8,q),
(278,0,o),
(174,0,qs),
(70,0,o),
(12,-8,q),
(-2,-8,o),
(-2,68,o),
(12,68,qs),
(110,68,o),
(137,137,qs),
(395,811,ls),
(420,872,o),
(473,872,qs),
(524,872,o),
(547,821,qs),
(834,137,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
29 24 19 3 1 0 1 76 38 14 2 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 71 77 6 4 3 3 1 1 2 97 5 1 2 2 69 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
6 4 3 3 1 5 1 2 1 2 101 0 0 0 71 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 36 28 35 36 19 33 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 923;
}
);
note = uni028C;
unicode = 652;
},
{
glyphname = uni028D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1379,67,o),
(1450,68,qs),
(1464,68,o),
(1464,-8,o),
(1450,-8,q),
(1362,0,o),
(1241,0,qs),
(1120,0,o),
(1038,-8,q),
(1024,-8,o),
(1024,68,o),
(1038,68,qs),
(1108,68,o),
(1108,111,qs),
(1108,131,o),
(1102,150,qs),
(961,594,ls),
(957,608,o),
(938,608,o),
(934,594,qs),
(811,236,ls),
(807,224,o),
(807,213,qs),
(807,201,o),
(811,190,qs),
(834,137,ls),
(863,67,o),
(922,68,qs),
(938,68,o),
(938,-8,o),
(922,-8,q),
(840,0,o),
(721,0,qs),
(602,0,o),
(522,-8,q),
(506,-8,o),
(506,68,o),
(522,68,qs),
(592,68,o),
(592,113,qs),
(592,129,o),
(586,150,qs),
(444,594,ls),
(440,608,o),
(424,608,o),
(418,594,q),
(262,143,ls),
(258,129,o),
(256,119,q),
(256,68,o),
(348,68,qs),
(362,68,o),
(362,-8,o),
(348,-8,q),
(262,0,o),
(172,0,qs),
(84,0,o),
(12,-8,q),
(-2,-8,o),
(-2,68,o),
(12,68,qs),
(110,68,o),
(137,137,qs),
(395,811,ls),
(420,872,o),
(471,872,qs),
(524,872,o),
(547,821,qs),
(725,395,l),
(729,383,o),
(745,383,o),
(752,395,q),
(911,811,ls),
(936,872,o),
(989,872,qs),
(1040,872,o),
(1063,821,qs),
(1350,137,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
54 28 2 2 0 1 76 72 46 23 3 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
1 1 0 0 71 77 10 8 7 5 4 5 2 2 3 97 9 6 2 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
10 8 7 5 4 5 2 9 6 2 3 2 3 101 1 1 0 0 71 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
76 74 71 69 30 35 36 27 35 36 19 39 33 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1456;
}
);
note = uni028D;
unicode = 653;
},
{
glyphname = uni028E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(629,1355,o),
(715,1391,qs),
(748,1403,o),
(782,1403,qs),
(843,1403,o),
(885,1360,qs),
(912,1329,o),
(909,1292,q),
(909,1231,o),
(852,1200,q),
(821,1186,o),
(784,1186,qs),
(680,1186,o),
(664,1147,qs),
(586,965,ls),
(580,949,o),
(580,930,qs),
(580,916,o),
(586,895,q),
(856,137,ls),
(881,67,o),
(963,68,qs),
(977,68,o),
(979,-8,o),
(963,-8,q),
(887,0,o),
(760,0,qs),
(633,0,o),
(549,-8,q),
(535,-8,o),
(535,68,o),
(549,68,qs),
(629,68,o),
(629,113,qs),
(629,127,o),
(621,150,qs),
(469,573,ls),
(463,593,o),
(453,594,qs),
(441,594,o),
(430,571,q),
(264,150,ls),
(260,138,o),
(260,127,qs),
(260,68,o),
(381,68,qs),
(397,68,o),
(397,-8,o),
(381,-8,q),
(291,0,o),
(184,0,qs),
(78,0,o),
(12,-8,q),
(-4,-8,o),
(-2,68,o),
(12,68,qs),
(114,68,o),
(137,125,qs),
(586,1249,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
50 1 7 8 14 1 0 3 2 76 33 9 2 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 7 0 7 3 0 128 0 7 7 8 97 0 8 8 74 77 6 4 2 3 0 0 1 97 5 1 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 7 0 7 3 0 128 6 4 2 3 0 5 1 1 0 1 101 0 7 7 8 97 0 8 8 74 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
38 40 35 36 21 37 35 36 17 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 952;
}
);
note = uni028E;
unicode = 654;
},
{
glyphname = uni028F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(881,784,o),
(811,733,o),
(770,676,qs),
(600,430,ls),
(573,389,o),
(567,360,o),
(567,311,qs),
(567,141,ls),
(567,67,o),
(659,68,qs),
(671,68,o),
(672,-8,o),
(659,-8,q),
(602,0,o),
(453,0,qs),
(303,0,o),
(248,-8,q),
(234,-8,o),
(233,68,o),
(248,68,qs),
(338,68,o),
(338,141,qs),
(338,309,ls),
(338,354,o),
(326,381,o),
(297,428,qs),
(117,715,ls),
(99,744,o),
(43,784,o),
(8,784,qs),
(-4,784,o),
(-4,856,o),
(8,856,qs),
(98,850,o),
(217,850,qs),
(336,850,o),
(393,856,q),
(407,856,o),
(408,784,o),
(393,784,qs),
(323,784,o),
(326,758,q),
(326,744,o),
(350,702,q),
(481,498,ls),
(487,488,o),
(504,485,o),
(512,498,qs),
(659,715,ls),
(673,738,o),
(674,752,qs),
(674,770,o),
(639,784,o),
(610,784,qs),
(596,784,o),
(596,856,o),
(610,856,q),
(676,850,o),
(778,850,qs),
(880,850,o),
(936,856,q),
(950,856,o),
(950,784,o),
(936,784,q),
(936,784,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
7 1 0 74 51 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
8 4 2 3 1 1 0 97 3 1 0 0 71 77 7 1 5 5 6 97 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
7 1 5 0 6 5 6 101 8 4 2 3 1 1 0 97 3 1 0 0 71 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
24 35 36 24 34 52 28 35 36 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 940;
}
);
note = uni028F;
unicode = 655;
},
{
glyphname = uni0290;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(741,76,l),
(739,41,o),
(739,16,qs),
(739,-229,ls),
(739,-315,o),
(743,-358,qs),
(753,-448,o),
(801,-449,qs),
(836,-449,o),
(881,-377,qs),
(914,-326,o),
(961,-324,qs),
(994,-324,o),
(1018,-340,qs),
(1069,-371,o),
(1069,-426,qs),
(1069,-479,o),
(1024,-512,qs),
(967,-555,o),
(907,-555,qs),
(872,-555,o),
(836,-547,qs),
(705,-518,o),
(629,-416,qs),
(545,-303,o),
(520,-129,qs),
(514,-86,o),
(512,0,q),
(70,0,ls),
(29,0,o),
(29,37,qs),
(29,49,o),
(37,68,q),
(393,727,ls),
(401,743,o),
(401,754,qs),
(401,774,o),
(373,774,qs),
(262,774,ls),
(199,774,o),
(137,645,qs),
(92,543,ls),
(88,535,o),
(74,535,qs),
(56,535,o),
(39,547,qs),
(27,555,o),
(25,569,q),
(54,821,o),
(55,825,qs),
(61,868,o),
(86,870,q),
(244,850,o),
(297,850,qs),
(645,850,ls),
(690,850,o),
(690,817,qs),
(690,799,o),
(682,784,qs),
(324,119,l),
(320,113,o),
(319,104,qs),
(319,79,o),
(348,80,qs),
(457,80,ls),
(588,80,o),
(682,285,qs),
(686,295,o),
(709,297,qs),
(717,297,o),
(735,293,q),
(766,282,o),
(766,264,q),
(766,264,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
37 25 2 3 4 11 1 1 0 72 1 5 1 3 76 21 1 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 8 7 6 7 8 6 128 0 4 4 2 95 0 2 2 71 77 0 1 1 5 95 0 5 5 69 77 0 7 7 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 8 7 6 7 8 6 128 0 1 0 5 7 1 5 103 0 4 4 2 95 0 2 2 71 77 0 7 7 6 97 0 6 6 73 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
34 38 39 39 51 40 55 50 35 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 768;
}
);
note = uni0290;
unicode = 656;
},
{
glyphname = uni0291;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(770,199,o),
(721,250,o),
(684,250,qs),
(635,250,o),
(524,125,o),
(502,80,q),
(676,82,ls),
(723,82,o),
(770,125,o),
(770,162,q),
(770,162,l)
);
},
{
closed = 1;
nodes = (
(469,0,l),
(430,-74,o),
(406,-174,qs),
(402,-190,o),
(326,-190,o),
(328,-168,qs),
(332,-88,o),
(365,0,q),
(70,0,ls),
(29,0,o),
(29,37,qs),
(29,51,o),
(37,68,qs),
(393,727,ls),
(401,743,o),
(401,754,qs),
(401,774,o),
(373,774,qs),
(262,774,ls),
(194,774,o),
(137,645,qs),
(92,543,ls),
(88,535,o),
(74,535,qs),
(56,535,o),
(39,547,qs),
(25,557,o),
(25,569,q),
(52,811,o),
(55,825,qs),
(67,872,o),
(86,870,qs),
(289,850,o),
(297,850,qs),
(645,850,ls),
(690,850,o),
(690,817,qs),
(690,801,o),
(682,784,qs),
(324,119,l),
(320,113,o),
(319,104,qs),
(319,79,o),
(348,80,qs),
(401,80,l),
(442,154,o),
(506,227,qs),
(594,327,o),
(692,328,qs),
(772,328,o),
(874,225,o),
(874,82,o),
(760,0,o),
(678,0,q),
(678,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
49 37 2 6 7 23 1 0 1 59 1 9 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 6 7 3 7 6 3 128 0 9 2 2 9 113 0 3 0 1 0 3 1 105 0 7 7 5 95 0 5 5 71 77 4 1 0 0 2 95 8 10 2 2 2 69 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 7 3 7 6 3 128 0 9 2 9 134 0 3 0 1 0 3 1 105 0 7 7 5 95 0 5 5 71 77 4 1 0 0 2 95 8 10 2 2 2 69 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 7 3 7 6 3 128 0 9 2 9 134 0 3 0 1 0 3 1 105 4 1 0 8 10 2 2 9 0 2 103 0 7 7 5 95 0 5 5 71 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
12 11 61 60 57 55 48 45 42 40 31 29 22 20 17 15 11 65 12 64 34 34 11 11 24 
CALL[ ]	/* CallFunction */";
};
width = 907;
}
);
note = uni0291;
unicode = 657;
},
{
glyphname = uni0292;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(895,-303,o),
(614,-557,o),
(342,-557,qs),
(207,-557,o),
(18,-471,o),
(18,-385,qs),
(18,-326,o),
(92,-276,o),
(123,-276,qs),
(180,-276,o),
(297,-473,o),
(395,-473,qs),
(530,-473,o),
(639,-276,o),
(639,-121,qs),
(639,49,o),
(524,219,o),
(432,219,qs),
(307,219,o),
(201,133,q),
(195,131,l),
(136,164,o),
(121,244,q),
(121,246,o),
(123,248,q),
(199,287,o),
(326,395,qs),
(432,485,o),
(575,668,qs),
(583,678,o),
(586,684,q),
(586,707,o),
(563,709,q),
(287,707,ls),
(195,707,o),
(156,662,qs),
(129,629,o),
(100,563,qs),
(98,557,o),
(78,559,o),
(78,569,q),
(115,836,ls),
(119,873,o),
(137,870,qs),
(258,847,o),
(319,848,qs),
(641,848,ls),
(694,848,o),
(815,852,o),
(834,852,qs),
(869,852,o),
(868,799,o),
(862,791,qs),
(659,525,o),
(444,322,o),
(444,311,qs),
(444,309,o),
(532,309,qs),
(679,309,o),
(895,123,o),
(895,-88,q),
(895,-88,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
30 20 2 0 2 36 1 3 0 40 1 5 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 4 3 5 4 128 0 0 0 3 5 0 3 105 0 2 2 1 95 0 1 1 71 77 0 4 4 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 3 4 3 5 4 128 0 1 0 2 0 1 2 103 0 0 0 3 5 0 3 105 0 4 4 6 97 0 6 6 73 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 33 36 46 42 102 34 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 888;
}
);
note = uni0292;
unicode = 658;
},
{
glyphname = uni0293;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-557,o),
(16,-422,o),
(16,-307,qs),
(16,-205,o),
(270,-51,o),
(426,-51,qs),
(537,-51,o),
(639,-66,q),
(631,63,o),
(524,219,o),
(432,219,qs),
(307,219,o),
(201,133,q),
(195,131,l),
(136,164,o),
(121,244,q),
(121,246,o),
(123,248,q),
(199,287,o),
(326,395,qs),
(432,485,o),
(575,668,qs),
(583,678,o),
(586,684,q),
(586,707,o),
(563,709,q),
(287,707,ls),
(195,707,o),
(156,662,qs),
(129,629,o),
(100,563,qs),
(98,557,o),
(78,559,o),
(78,569,q),
(115,836,ls),
(119,873,o),
(137,870,qs),
(258,847,o),
(319,848,qs),
(641,848,ls),
(694,848,o),
(815,852,o),
(834,852,qs),
(869,852,o),
(868,799,o),
(862,791,qs),
(772,685,o),
(553,424,qs),
(475,332,o),
(444,311,q),
(442,309,o),
(532,309,qs),
(682,309,o),
(788,215,qs),
(894,123,o),
(895,-88,qs),
(895,-129,l),
(995,-176,o),
(1073,-268,q),
(1085,-280,o),
(1026,-332,o),
(1016,-322,qs),
(950,-256,o),
(881,-215,q),
(852,-342,o),
(760,-430,qs),
(622,-557,o),
(350,-557,q),
(350,-557,l)
);
},
{
closed = 1;
nodes = (
(535,-127,o),
(426,-127,qs),
(338,-127,o),
(217,-236,o),
(217,-307,qs),
(217,-381,o),
(307,-473,o),
(397,-473,qs),
(532,-473,o),
(588,-375,qs),
(637,-282,o),
(639,-141,q),
(639,-141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
44 34 2 1 3 50 1 4 1 54 1 5 4 60 1 7 5 81 11 4 3 6 7 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 4 5 1 4 105 0 5 0 7 6 5 7 105 0 3 3 2 95 0 2 2 71 77 0 6 6 0 97 8 1 0 0 73 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 1 2 3 103 0 1 0 4 5 1 4 105 0 5 0 7 6 5 7 105 0 6 6 0 97 8 1 0 0 73 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 80 78 74 72 63 61 58 56 42 40 30 24 17 15 0 68 1 67 9 11 22 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni0293;
unicode = 659;
},
{
glyphname = uni0294;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,67,o),
(637,68,qs),
(651,68,o),
(651,-8,o),
(637,-8,q),
(553,0,o),
(418,0,qs),
(285,0,o),
(199,-8,q),
(185,-8,o),
(184,68,o),
(199,68,qs),
(303,68,o),
(303,135,qs),
(303,618,ls),
(303,643,o),
(340,649,qs),
(490,678,o),
(637,885,o),
(637,1038,qs),
(637,1206,o),
(561,1300,qs),
(487,1394,o),
(385,1395,qs),
(299,1395,o),
(207,1331,o),
(207,1280,qs),
(207,1231,o),
(276,1145,o),
(276,1104,qs),
(276,1061,o),
(211,1016,o),
(170,1016,qs),
(102,1016,o),
(35,1137,o),
(35,1202,qs),
(35,1304,o),
(248,1473,o),
(418,1473,qs),
(631,1473,o),
(887,1214,o),
(887,1028,qs),
(887,821,o),
(668,606,o),
(553,586,q),
(533,584,o),
(532,561,qs),
(532,135,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
42 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 70 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 2 3 2 1 3 128 5 1 3 0 4 3 4 101 0 2 2 0 97 0 0 0 70 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 36 26 39 36 39 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni0294;
unicode = 660;
},
{
glyphname = uni0295;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,67,o),
(723,68,qs),
(737,68,o),
(737,-8,o),
(723,-8,q),
(637,0,o),
(504,0,qs),
(371,0,o),
(287,-8,q),
(273,-8,o),
(270,68,o),
(287,68,qs),
(389,68,o),
(389,135,qs),
(389,561,ls),
(389,584,o),
(369,586,q),
(254,606,o),
(35,821,o),
(35,1028,qs),
(35,1214,o),
(291,1473,o),
(504,1473,qs),
(674,1473,o),
(887,1307,o),
(887,1202,qs),
(887,1136,o),
(819,1016,o),
(754,1016,qs),
(713,1016,o),
(645,1061,o),
(645,1104,qs),
(645,1147,o),
(717,1231,o),
(717,1280,qs),
(717,1331,o),
(625,1395,o),
(539,1395,qs),
(437,1395,o),
(287,1206,o),
(287,1038,qs),
(287,884,o),
(432,678,o),
(582,649,qs),
(619,643,o),
(618,618,qs),
(618,135,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
41 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 70 77 5 1 3 3 4 97 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 0 1 3 128 5 1 3 0 4 3 4 101 0 0 0 2 97 0 2 2 70 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 36 25 36 39 39 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni0295;
unicode = 661;
},
{
glyphname = uni0296;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(887,144,o),
(674,-23,o),
(504,-23,qs),
(291,-23,o),
(35,233,o),
(35,420,qs),
(35,627,o),
(254,844,o),
(369,862,qs),
(389,864,o),
(389,889,qs),
(389,1315,ls),
(389,1383,o),
(287,1380,qs),
(273,1380,o),
(270,1456,o),
(287,1456,q),
(371,1448,o),
(504,1450,qs),
(637,1450,o),
(723,1456,qs),
(737,1456,o),
(737,1380,o),
(723,1380,qs),
(619,1380,o),
(618,1315,qs),
(618,831,ls),
(618,806,o),
(582,799,qs),
(432,770,o),
(287,563,o),
(287,412,qs),
(287,244,o),
(436,53,o),
(539,53,qs),
(625,53,o),
(717,117,o),
(717,170,qs),
(717,219,o),
(645,303,o),
(645,346,qs),
(645,389,o),
(713,432,o),
(754,432,qs),
(822,432,o),
(887,312,o),
(887,246,q),
(887,246,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 1 2 0 1 128 4 1 2 2 3 95 0 3 3 70 77 0 1 1 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 0 2 1 2 0 1 128 0 3 4 1 2 0 3 2 105 0 1 1 5 97 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
41 35 66 25 39 34 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni0296;
unicode = 662;
},
{
glyphname = uni0297;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,70,ls),
(295,-63,o),
(383,-158,qs),
(463,-242,o),
(563,-242,qs),
(672,-242,o),
(750,-186,qs),
(768,-174,o),
(797,-217,qs),
(824,-260,o),
(805,-270,q),
(723,-324,ls),
(621,-390,o),
(457,-389,qs),
(318,-389,o),
(207,-291,qs),
(68,-166,o),
(66,20,qs),
(66,387,ls),
(66,557,o),
(172,694,qs),
(307,870,o),
(522,870,qs),
(657,870,o),
(745,825,qs),
(788,802,o),
(799,780,qs),
(805,768,o),
(805,739,qs),
(805,688,o),
(774,655,qs),
(741,620,o),
(709,621,qs),
(670,621,o),
(653,649,qs),
(614,715,ls),
(579,774,o),
(502,774,qs),
(420,774,o),
(360,682,qs),
(295,579,o),
(295,436,q),
(295,436,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 4 0 1 4 128 0 4 0 3 4 3 101 0 0 0 2 97 0 2 2 71 0 78 39 39 40 35 35 5 11 27 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = uni0297;
unicode = 663;
},
{
glyphname = uni0298;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(905,612,o),
(844,569,qs),
(805,542,o),
(756,543,qs),
(684,543,o),
(635,588,qs),
(590,631,o),
(590,700,qs),
(590,755,o),
(631,801,qs),
(676,850,o),
(756,850,qs),
(848,850,o),
(891,766,q),
(905,731,o),
(905,690,q),
(905,690,l)
);
},
{
closed = 1;
nodes = (
(1430,445,o),
(1284,246,qs),
(1081,-26,o),
(741,-27,qs),
(516,-27,o),
(336,96,qs),
(55,291,o),
(55,668,qs),
(55,920,o),
(231,1141,qs),
(426,1385,o),
(745,1384,qs),
(991,1384,o),
(1171,1231,qs),
(1430,1006,o),
(1430,664,q),
(1430,664,l)
);
},
{
closed = 1;
nodes = (
(1157,905,o),
(1032,1087,qs),
(891,1298,o),
(739,1296,qs),
(585,1296,o),
(473,1167,qs),
(328,1001,o),
(328,725,qs),
(328,422,o),
(481,229,qs),
(610,67,o),
(756,68,qs),
(1020,68,o),
(1112,346,qs),
(1157,477,o),
(1157,649,q),
(1157,649,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 5 5 2 97 0 2 2 74 77 0 1 1 0 97 0 0 0 71 77 0 4 4 3 97 0 3 3 75 3 78 38 39 38 39 38 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1523;
}
);
note = uni0298;
unicode = 664;
},
{
glyphname = uni0299;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(850,124,o),
(692,-4,o),
(514,-4,qs),
(420,-4,ls),
(383,-2,o),
(281,-2,qs),
(179,-2,o),
(63,-8,qs),
(49,-8,o),
(49,68,o),
(63,68,qs),
(102,68,o),
(164,106,o),
(164,141,qs),
(164,713,ls),
(164,783,o),
(57,780,qs),
(41,780,o),
(43,854,o),
(57,854,qs),
(135,850,o),
(244,850,qs),
(355,850,o),
(494,854,o),
(512,854,qs),
(639,854,o),
(793,741,o),
(793,639,qs),
(793,533,o),
(678,473,qs),
(653,461,o),
(678,453,qs),
(746,430,o),
(850,313,o),
(850,233,q),
(850,233,l)
);
},
{
closed = 1;
nodes = (
(584,805,o),
(403,805,qs),
(393,805,o),
(393,786,qs),
(393,502,ls),
(393,488,o),
(430,483,o),
(438,483,qs),
(584,483,o),
(584,637,q),
(584,637,l)
);
},
{
closed = 1;
nodes = (
(621,286,o),
(565,389,o),
(469,424,o),
(410,424,qs),
(394,424,o),
(393,401,qs),
(393,158,ls),
(393,121,o),
(442,47,o),
(477,47,qs),
(530,47,o),
(582,86,o),
(621,186,o),
(621,233,q),
(621,233,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
42 1 1 5 1 76 0 1 5 4 5 1 114 0 2 7 6 6 2 114 0 4 0 7 2 4 7 105 0 5 5 0 95 0 0 0 71 77 0 6 6 3 96 0 3 3 69 3 78 36 37 22 20 114 20 34 105 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = uni0299;
unicode = 665;
},
{
glyphname = uni029A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(840,213,o),
(662,-23,o),
(416,-23,qs),
(262,-23,o),
(197,12,qs),
(66,84,o),
(66,346,o),
(242,438,q),
(84,501,o),
(84,637,qs),
(84,731,o),
(168,795,qs),
(266,871,o),
(436,870,qs),
(653,870,o),
(840,594,o),
(840,424,q),
(840,424,l)
);
},
{
closed = 1;
nodes = (
(643,580,o),
(537,782,o),
(440,782,qs),
(358,782,o),
(295,702,o),
(295,664,qs),
(295,603,o),
(356,518,o),
(397,518,qs),
(498,518,ls),
(510,518,o),
(510,457,qs),
(510,398,o),
(496,395,q),
(410,395,ls),
(351,395,o),
(311,360,qs),
(272,323,o),
(272,248,qs),
(272,187,o),
(348,80,o),
(446,80,qs),
(520,80,o),
(614,188,o),
(643,311,o),
(643,420,q),
(643,420,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
32 9 2 3 4 1 76 0 4 0 3 2 4 3 105 0 5 5 0 97 0 0 0 71 77 0 2 2 1 97 0 1 1 69 1 78 36 51 37 38 41 34 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 901;
}
);
note = uni029A;
unicode = 666;
},
{
glyphname = uni029B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(854,102,ls),
(854,71,o),
(883,72,qs),
(897,72,o),
(897,20,o),
(883,20,qs),
(803,20,o),
(590,-23,o),
(514,-23,qs),
(319,-23,o),
(66,229,o),
(66,408,qs),
(66,605,o),
(324,870,o),
(526,870,qs),
(575,870,o),
(635,862,q),
(645,897,o),
(662,932,qs),
(723,1071,o),
(913,1221,o),
(1026,1221,qs),
(1102,1221,o),
(1223,1137,o),
(1223,1079,qs),
(1223,1036,o),
(1167,973,o),
(1120,973,qs),
(1052,973,o),
(997,1108,o),
(954,1108,qs),
(903,1108,o),
(829,932,o),
(829,782,qs),
(829,716,o),
(840,612,q),
(840,602,o),
(799,600,qs),
(756,598,o),
(756,608,qs),
(756,651,o),
(653,793,o),
(524,793,qs),
(440,793,o),
(319,592,o),
(319,440,qs),
(319,245,o),
(377,152,qs),
(434,62,o),
(522,61,qs),
(612,61,o),
(645,82,q),
(678,98,o),
(678,127,qs),
(680,242,ls),
(680,275,o),
(643,291,o),
(559,291,qs),
(543,291,o),
(545,367,o),
(559,367,q),
(598,363,o),
(741,362,qs),
(884,362,o),
(924,367,q),
(938,367,o),
(938,291,o),
(924,291,qs),
(879,291,o),
(854,273,o),
(854,242,q),
(854,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
31 1 5 4 10 1 1 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 7 6 9 6 7 114 0 5 4 1 4 5 1 128 0 8 0 6 7 8 6 105 0 1 2 1 0 3 1 0 105 0 4 4 9 97 0 9 9 71 77 12 1 3 3 11 97 0 11 11 69 77 12 1 3 3 10 97 0 10 10 69 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 7 6 9 6 7 9 128 0 5 4 1 4 5 1 128 0 8 0 6 7 8 6 105 0 1 2 1 0 3 1 0 105 0 4 4 9 97 0 9 9 71 77 12 1 3 3 11 97 0 11 11 69 77 12 1 3 3 10 97 0 10 10 69 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 7 6 9 6 7 9 128 0 5 4 1 4 5 1 128 0 8 0 6 7 8 6 105 0 1 2 1 0 3 1 0 105 0 11 10 3 11 89 0 4 4 9 97 0 9 9 71 77 12 1 3 3 10 97 0 10 10 69 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 9 6 7 9 128 0 5 4 1 4 5 1 128 0 8 0 6 7 8 6 105 0 1 2 1 0 12 1 0 105 0 12 0 11 10 12 11 105 0 4 4 9 97 0 9 9 71 77 0 3 3 10 97 0 10 10 69 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
69 67 65 64 63 61 57 55 36 33 37 20 37 38 35 36 18 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = uni029B;
unicode = 667;
},
{
glyphname = uni029C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,709,ls),
(166,781,o),
(68,780,qs),
(52,780,o),
(51,854,o),
(68,854,q),
(113,850,o),
(281,850,qs),
(449,850,o),
(496,854,q),
(512,854,o),
(512,780,o),
(496,780,qs),
(394,780,o),
(393,709,qs),
(393,500,ls),
(393,477,o),
(416,475,q),
(760,475,ls),
(780,475,o),
(778,500,q),
(778,709,ls),
(778,781,o),
(678,780,qs),
(664,780,o),
(664,854,o),
(678,854,q),
(723,850,o),
(893,850,qs),
(1063,850,o),
(1108,854,q),
(1122,854,o),
(1122,780,o),
(1108,780,qs),
(1008,780,o),
(1008,709,qs),
(1008,141,ls),
(1008,67,o),
(1106,68,qs),
(1118,68,o),
(1118,-8,o),
(1106,-8,q),
(1024,0,o),
(891,0,qs),
(758,0,o),
(678,-8,q),
(664,-8,o),
(664,68,o),
(678,68,qs),
(780,68,o),
(778,141,qs),
(778,377,ls),
(778,400,o),
(760,399,qs),
(416,399,ls),
(393,399,o),
(393,377,qs),
(393,141,ls),
(393,67,o),
(492,68,qs),
(508,68,o),
(508,-8,o),
(492,-8,q),
(410,0,o),
(281,0,qs),
(152,0,o),
(66,-8,q),
(52,-8,o),
(51,68,o),
(66,68,qs),
(166,67,o),
(166,141,q),
(166,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
51 1 10 7 20 1 0 3 2 76 66 45 2 8 74 30 9 2 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 10 0 3 0 10 3 103 13 11 9 3 7 7 8 95 12 1 8 8 71 77 6 4 2 3 0 0 1 97 5 1 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 10 0 3 0 10 3 103 6 4 2 3 0 5 1 1 0 1 101 13 11 9 3 7 7 8 95 12 1 8 8 71 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
70 68 65 61 59 58 54 52 49 47 66 19 35 36 20 35 35 36 17 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1196;
}
);
note = uni029C;
unicode = 668;
},
{
glyphname = uni029D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,557,ls),
(137,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(377,883,o),
(375,856,qs),
(367,721,o),
(367,682,qs),
(367,139,ls),
(367,-37,o),
(354,-127,q),
(442,-174,o),
(516,-266,qs),
(526,-278,o),
(475,-330,o),
(467,-319,q),
(408,-253,o),
(344,-213,q),
(317,-340,o),
(236,-428,qs),
(113,-555,o),
(-131,-555,qs),
(-295,-555,o),
(-416,-420,o),
(-416,-305,qs),
(-414,-192,o),
(-199,-49,o),
(-72,-49,qs),
(45,-51,o),
(137,-63,q),
(137,-63,l)
);
},
{
closed = 1;
nodes = (
(37,-125,o),
(-72,-125,qs),
(-144,-125,o),
(-252,-233,o),
(-252,-305,qs),
(-252,-379,o),
(-166,-471,o),
(-92,-471,qs),
(31,-471,o),
(80,-375,qs),
(129,-280,o),
(131,-139,q),
(131,-139,l)
);
},
{
closed = 1;
nodes = (
(373,1116,o),
(313,1075,qs),
(274,1048,o),
(227,1049,qs),
(153,1049,o),
(111,1104,qs),
(82,1141,o),
(82,1188,qs),
(82,1256,o),
(139,1296,qs),
(178,1325,o),
(227,1325,qs),
(301,1325,o),
(344,1270,qs),
(373,1231,o),
(373,1188,q),
(373,1188,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
24 1 3 2 38 1 6 0 51 19 14 12 4 5 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 4 0 3 4 105 0 0 0 6 5 0 6 105 0 8 8 7 97 0 7 7 68 77 0 2 2 71 77 0 5 5 1 97 0 1 1 73 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 8 2 7 8 105 0 3 0 4 0 3 4 105 0 0 0 6 5 0 6 105 0 2 2 71 77 0 5 5 1 97 0 1 1 73 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
65 63 57 55 50 48 44 42 36 34 32 31 26 25 36 33 9 11 24 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uni029D;
unicode = 669;
},
{
glyphname = uni029E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,850,o),
(250,850,qs),
(420,850,o),
(485,854,qs),
(499,854,o),
(502,782,o),
(485,782,qs),
(411,782,o),
(412,754,qs),
(412,738,o),
(438,705,q),
(633,481,ls),
(660,450,o),
(692,451,qs),
(708,451,o),
(709,485,qs),
(709,707,ls),
(709,783,o),
(600,782,qs),
(586,782,o),
(586,854,o),
(600,854,qs),
(666,850,o),
(825,850,qs),
(985,850,o),
(1053,854,qs),
(1067,854,o),
(1067,782,o),
(1053,782,qs),
(938,782,o),
(938,711,qs),
(938,-227,ls),
(938,-346,o),
(1030,-352,qs),
(1046,-352,o),
(1047,-426,o),
(1030,-426,qs),
(981,-426,o),
(846,-494,qs),
(791,-521,o),
(760,-545,qs),
(748,-555,o),
(731,-555,qs),
(702,-555,o),
(702,-526,qs),
(708,-389,o),
(709,-354,qs),
(709,322,ls),
(709,359,o),
(688,358,qs),
(643,358,o),
(608,319,qs),
(455,150,ls),
(422,113,o),
(424,96,q),
(424,65,o),
(506,66,qs),
(522,66,o),
(522,-8,o),
(506,-8,q),
(414,0,o),
(293,0,qs),
(170,0,o),
(86,-8,q),
(72,-8,o),
(72,66,o),
(86,66,qs),
(188,66,o),
(268,137,qs),
(477,326,ls),
(487,336,o),
(487,344,qs),
(487,358,o),
(477,371,q),
(147,729,ls),
(98,782,o),
(23,782,qs),
(7,782,o),
(7,854,o),
(23,854,q),
(23,854,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 1 4 20 1 7 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 11 0 4 1 11 4 105 0 7 0 6 5 7 6 105 12 10 8 3 0 0 9 95 13 1 9 9 71 77 3 1 1 1 2 97 0 2 2 69 77 0 5 5 73 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 11 0 4 1 11 4 105 3 1 1 0 2 7 1 2 105 0 7 0 6 5 7 6 105 12 10 8 3 0 0 9 95 13 1 9 9 71 77 0 5 5 73 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
80 75 73 72 67 65 62 60 58 53 19 34 21 21 37 35 36 24 34 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1071;
}
);
note = uni029E;
unicode = 670;
},
{
glyphname = uni029F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(907,8,o),
(883,-6,o),
(827,-6,qs),
(823,-6,o),
(426,0,o),
(285,0,qs),
(144,0,o),
(53,-6,qs),
(39,-6,o),
(39,68,o),
(53,68,qs),
(164,68,o),
(164,154,qs),
(164,700,ls),
(164,780,o),
(47,780,qs),
(31,780,o),
(31,854,o),
(47,854,qs),
(96,850,o),
(272,850,qs),
(446,850,o),
(500,854,qs),
(514,854,o),
(510,780,o),
(500,780,qs),
(394,780,o),
(393,700,qs),
(393,186,ls),
(393,129,o),
(422,96,qs),
(453,63,o),
(512,68,qs),
(662,74,ls),
(736,76,o),
(774,139,qs),
(815,202,o),
(813,268,qs),
(813,280,o),
(907,281,o),
(907,268,qs),
(907,39,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 1 76 22 1 2 74 3 1 1 1 2 95 0 2 2 71 77 4 1 0 0 5 95 0 5 5 69 5 78 114 19 35 66 22 38 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uni029F;
unicode = 671;
},
{
glyphname = uni02A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(893,-399,ls),
(893,-483,o),
(1016,-483,qs),
(1032,-483,o),
(1032,-559,o),
(1016,-559,q),
(936,-551,o),
(625,-551,o),
(541,-559,q),
(527,-559,o),
(526,-483,o),
(541,-483,qs),
(664,-483,o),
(664,-397,qs),
(664,-6,l),
(603,-22,o),
(514,-23,qs),
(65,-23,o),
(66,481,qs),
(66,653,o),
(180,766,qs),
(289,870,o),
(467,870,qs),
(584,870,o),
(664,840,q),
(664,932,ls),
(664,1059,o),
(788,1337,o),
(977,1487,o),
(1090,1487,qs),
(1166,1487,o),
(1284,1403,o),
(1284,1346,qs),
(1284,1303,o),
(1231,1239,o),
(1184,1239,qs),
(1116,1239,o),
(1061,1374,o),
(1018,1374,qs),
(967,1374,o),
(893,1199,o),
(893,1049,q),
(893,1049,l)
);
},
{
closed = 1;
nodes = (
(664,643,ls),
(664,666,o),
(655,678,qs),
(587,770,o),
(508,770,qs),
(299,770,o),
(299,420,qs),
(299,266,o),
(350,160,qs),
(397,60,o),
(487,59,qs),
(608,59,o),
(645,117,qs),
(664,143,o),
(664,180,q),
(664,180,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
17 1 9 3 27 1 4 8 2 76 36 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 3 0 1 114 0 0 0 2 97 0 2 2 70 77 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 0 4 4 69 77 7 1 5 5 6 97 0 6 6 73 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 70 77 0 9 9 3 97 0 3 3 71 77 0 8 8 4 97 0 4 4 69 77 7 1 5 5 6 97 0 6 6 73 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
54 52 38 35 20 19 36 37 36 33 34 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 978;
}
);
note = uni02A0;
unicode = 672;
},
{
glyphname = uni02A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,67,o),
(637,68,qs),
(651,68,o),
(651,-8,o),
(637,-8,q),
(553,0,o),
(418,0,qs),
(285,0,o),
(199,-8,q),
(185,-8,o),
(184,68,o),
(199,68,qs),
(303,68,o),
(303,135,qs),
(303,303,l),
(137,303,ls),
(119,303,o),
(119,434,o),
(137,434,qs),
(303,434,l),
(303,618,ls),
(303,643,o),
(340,649,qs),
(490,678,o),
(637,885,o),
(637,1038,qs),
(637,1206,o),
(561,1300,qs),
(487,1394,o),
(385,1395,qs),
(299,1395,o),
(207,1331,o),
(207,1280,qs),
(207,1231,o),
(276,1145,o),
(276,1061,o),
(211,1016,o),
(170,1016,qs),
(102,1016,o),
(35,1137,o),
(35,1202,qs),
(35,1304,o),
(248,1473,o),
(418,1473,qs),
(631,1473,o),
(887,1214,o),
(887,1028,qs),
(887,821,o),
(668,606,o),
(553,586,q),
(533,584,o),
(532,561,qs),
(532,434,l),
(711,434,ls),
(731,434,o),
(731,303,o),
(709,303,qs),
(532,303,l),
(532,135,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
53 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 70 77 9 1 7 7 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 9 1 7 0 8 7 8 101 0 4 4 2 97 0 2 2 70 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
57 55 36 18 34 25 38 36 40 33 32 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni02A1;
unicode = 673;
},
{
glyphname = uni02A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,67,o),
(723,68,qs),
(737,68,o),
(737,-8,o),
(723,-8,q),
(637,0,o),
(504,0,qs),
(371,0,o),
(287,-8,q),
(273,-8,o),
(270,68,o),
(287,68,qs),
(389,68,o),
(389,135,qs),
(389,303,l),
(215,303,ls),
(197,303,o),
(197,434,o),
(215,434,qs),
(389,434,l),
(389,561,ls),
(389,584,o),
(369,586,q),
(254,606,o),
(35,821,o),
(35,1028,qs),
(35,1214,o),
(291,1473,o),
(504,1473,qs),
(674,1473,o),
(887,1307,o),
(887,1202,qs),
(887,1136,o),
(819,1016,o),
(754,1016,qs),
(713,1016,o),
(645,1061,o),
(645,1145,o),
(717,1231,o),
(717,1280,qs),
(717,1331,o),
(625,1395,o),
(539,1395,qs),
(437,1395,o),
(287,1206,o),
(287,1038,qs),
(287,884,o),
(432,678,o),
(582,649,qs),
(619,643,o),
(618,618,qs),
(618,434,l),
(788,434,ls),
(808,434,o),
(809,303,o),
(786,303,qs),
(618,303,l),
(618,135,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
52 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 0 2 2 4 97 0 4 4 70 77 9 1 7 7 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 9 1 7 0 8 7 8 101 0 2 2 4 97 0 4 4 70 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
56 54 36 18 34 24 36 38 40 33 32 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni02A2;
unicode = 674;
},
{
glyphname = uni02A3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(408,793,o),
(344,649,qs),
(305,561,o),
(307,444,qs),
(307,251,o),
(385,141,qs),
(444,59,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
},
{
closed = 1;
nodes = (
(1624,76,ls),
(1622,51,o),
(1622,16,qs),
(1622,-25,o),
(1581,-25,qs),
(1571,-25,o),
(1432,0,o),
(1395,0,qs),
(950,0,ls),
(887,0,o),
(760,-35,o),
(735,-35,qs),
(712,-35,o),
(713,10,qs),
(713,39,ls),
(713,62,o),
(692,61,o),
(674,47,qs),
(582,-23,o),
(479,-23,qs),
(235,-23,o),
(125,152,qs),
(53,263,o),
(53,418,qs),
(53,594,o),
(174,721,qs),
(321,871,o),
(567,870,qs),
(616,870,o),
(647,866,qs),
(674,864,o),
(674,889,qs),
(674,1161,ls),
(674,1286,o),
(582,1286,qs),
(566,1286,o),
(565,1360,o),
(582,1360,qs),
(631,1360,o),
(768,1427,qs),
(834,1460,o),
(852,1477,qs),
(864,1487,o),
(879,1487,qs),
(910,1487,o),
(909,1454,qs),
(903,1384,o),
(903,1286,qs),
(903,864,l),
(1044,850,o),
(1051,850,qs),
(1528,850,ls),
(1573,850,o),
(1573,817,qs),
(1573,801,o),
(1565,784,qs),
(1206,119,ls),
(1202,113,o),
(1202,104,qs),
(1202,79,o),
(1231,80,qs),
(1339,80,ls),
(1470,80,o),
(1565,285,qs),
(1569,295,o),
(1591,297,qs),
(1603,297,o),
(1618,293,qs),
(1649,282,o),
(1649,264,q),
(1649,264,l)
);
},
{
closed = 1;
nodes = (
(903,256,ls),
(903,166,o),
(913,139,qs),
(921,114,o),
(938,104,q),
(1276,727,ls),
(1284,743,o),
(1284,754,qs),
(1284,774,o),
(1255,774,qs),
(1016,774,ls),
(956,774,o),
(903,670,q),
(903,670,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
44 1 5 4 41 1 3 7 104 99 96 90 31 24 19 7 2 13 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 2 0 2 9 0 128 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 1 1 7 97 0 7 7 71 77 0 13 13 3 95 0 3 3 71 77 0 2 2 11 95 0 11 11 69 77 0 0 0 8 97 12 10 2 8 8 69 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 9 2 0 2 9 0 128 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 1 1 7 97 0 7 7 71 77 0 13 13 3 95 0 3 3 71 77 0 2 2 11 95 0 11 11 69 77 0 0 0 8 97 0 8 8 69 77 12 1 10 10 75 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 9 2 0 2 9 0 128 0 2 0 11 8 2 11 103 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 1 1 7 97 0 7 7 71 77 0 13 13 3 95 0 3 3 71 77 0 0 0 8 97 0 8 8 69 77 12 1 10 10 75 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 9 2 0 2 9 0 128 0 2 0 11 8 2 11 103 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 1 1 7 97 0 7 7 71 77 0 13 13 3 95 0 3 3 71 77 0 0 0 8 97 12 1 8 8 69 77 0 10 10 75 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
95 92 86 84 83 80 79 77 74 73 38 37 34 21 22 39 62 38 35 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1650;
}
);
note = uni02A3;
unicode = 675;
},
{
glyphname = uni02A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(426,793,o),
(307,592,o),
(307,444,qs),
(307,270,o),
(436,61,o),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
},
{
closed = 1;
nodes = (
(1665,-303,o),
(1386,-557,o),
(1112,-557,qs),
(977,-557,o),
(788,-471,o),
(788,-385,qs),
(788,-326,o),
(862,-276,o),
(895,-276,qs),
(952,-276,o),
(1067,-473,o),
(1165,-473,qs),
(1300,-473,o),
(1411,-276,o),
(1411,-121,qs),
(1411,49,o),
(1296,219,o),
(1202,219,qs),
(1130,219,o),
(1071,193,q),
(1067,190,l),
(1006,223,o),
(987,307,q),
(987,309,o),
(989,311,q),
(1067,368,o),
(1233,522,o),
(1348,668,qs),
(1356,678,o),
(1356,684,qs),
(1356,707,o),
(1335,709,q),
(903,707,l),
(903,256,ls),
(903,166,o),
(930,98,o),
(967,98,qs),
(979,98,o),
(999,104,qs),
(1015,108,o),
(1034,35,o),
(1022,31,q),
(952,17,o),
(799,-16,o),
(735,-35,q),
(723,-35,ls),
(713,-35,o),
(713,10,qs),
(713,39,ls),
(713,62,o),
(692,61,o),
(674,47,qs),
(580,-23,o),
(479,-23,qs),
(272,-23,o),
(53,223,o),
(53,418,qs),
(53,602,o),
(332,870,o),
(567,870,qs),
(616,870,o),
(647,866,qs),
(674,864,o),
(674,889,qs),
(674,1161,ls),
(674,1286,o),
(582,1286,qs),
(566,1286,o),
(565,1360,o),
(582,1360,qs),
(631,1360,o),
(827,1456,o),
(864,1487,o),
(879,1487,qs),
(910,1487,o),
(909,1454,qs),
(903,1384,o),
(903,1286,qs),
(903,848,l),
(1411,848,ls),
(1464,848,o),
(1585,852,o),
(1606,852,qs),
(1641,852,o),
(1638,799,o),
(1632,791,qs),
(1429,525,o),
(1214,322,o),
(1214,311,qs),
(1214,309,o),
(1303,309,qs),
(1450,309,o),
(1665,123,o),
(1665,-88,q),
(1665,-88,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
35 1 5 4 86 81 2 2 12 90 16 2 11 13 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 11 13 9 13 11 9 128 0 9 0 13 9 0 126 0 15 8 14 8 15 14 128 0 2 0 13 11 2 13 105 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 1 1 7 97 0 7 7 71 77 0 12 12 3 95 0 3 3 71 77 0 0 0 8 97 10 1 8 8 69 77 0 14 14 16 97 0 16 16 73 16 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 11 13 9 13 11 9 128 0 9 0 13 9 0 126 0 15 10 14 10 15 14 128 0 2 0 13 11 2 13 105 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 1 1 7 97 0 7 7 71 77 0 12 12 3 95 0 3 3 71 77 0 0 0 8 97 0 8 8 69 77 0 10 10 75 77 0 14 14 16 97 0 16 16 73 16 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
109 107 103 101 100 98 94 92 79 78 75 73 66 64 61 60 36 37 34 19 20 86 41 36 19 17 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1658;
}
);
note = uni02A4;
unicode = 676;
},
{
glyphname = uni02A5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,256,ls),
(903,166,o),
(913,139,qs),
(921,114,o),
(938,104,q),
(1276,727,ls),
(1284,743,o),
(1284,754,qs),
(1284,774,o),
(1255,774,qs),
(1016,774,ls),
(956,774,o),
(903,670,q),
(903,670,l)
);
},
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(408,793,o),
(344,649,qs),
(305,561,o),
(307,444,qs),
(307,251,o),
(385,141,qs),
(444,59,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
},
{
closed = 1;
nodes = (
(1525,250,o),
(1425,131,o),
(1395,80,q),
(1589,82,ls),
(1636,82,o),
(1683,125,o),
(1683,199,o),
(1632,250,o),
(1597,250,q),
(1597,250,l)
);
},
{
closed = 1;
nodes = (
(950,0,ls),
(887,0,o),
(760,-35,o),
(735,-35,qs),
(712,-35,o),
(713,10,qs),
(713,39,ls),
(713,62,o),
(692,61,o),
(674,47,qs),
(582,-23,o),
(479,-23,qs),
(235,-23,o),
(125,152,qs),
(53,263,o),
(53,418,qs),
(53,594,o),
(174,721,qs),
(321,871,o),
(567,870,qs),
(616,870,o),
(647,866,qs),
(674,864,o),
(674,889,qs),
(674,1161,ls),
(674,1286,o),
(582,1286,qs),
(566,1286,o),
(565,1360,o),
(582,1360,qs),
(631,1360,o),
(768,1427,qs),
(823,1454,o),
(852,1477,qs),
(864,1487,o),
(879,1487,qs),
(910,1487,o),
(909,1454,qs),
(903,1384,o),
(903,1286,qs),
(903,864,l),
(1044,850,o),
(1051,850,qs),
(1528,850,ls),
(1573,850,o),
(1573,817,qs),
(1573,801,o),
(1565,784,qs),
(1206,119,ls),
(1202,113,o),
(1202,104,qs),
(1202,79,o),
(1231,80,qs),
(1315,80,l),
(1356,154,o),
(1417,227,qs),
(1505,327,o),
(1606,328,qs),
(1686,328,o),
(1788,225,o),
(1788,82,o),
(1671,0,o),
(1591,0,qs),
(1364,0,l),
(1333,-59,o),
(1298,-174,qs),
(1294,-190,o),
(1239,-190,o),
(1241,-168,qs),
(1247,-84,o),
(1278,0,q),
(1278,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
77 1 11 10 74 1 9 13 13 5 2 7 0 64 33 8 3 4 3 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 15 4 1 4 15 1 128 0 5 14 6 5 113 0 7 18 1 3 4 7 3 105 0 10 10 70 77 0 12 12 11 97 0 11 11 68 77 0 2 2 13 97 0 13 13 71 77 0 0 0 9 95 0 9 9 71 77 8 1 4 4 6 95 17 1 6 6 69 77 0 1 1 14 97 16 1 14 14 69 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 15 4 1 4 15 1 128 0 5 14 5 134 0 7 18 1 3 4 7 3 105 0 10 10 70 77 0 12 12 11 97 0 11 11 68 77 0 2 2 13 97 0 13 13 71 77 0 0 0 9 95 0 9 9 71 77 8 1 4 4 6 95 17 1 6 6 69 77 0 1 1 14 97 16 1 14 14 69 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
0 15 4 1 4 15 1 128 0 5 16 5 134 0 7 18 1 3 4 7 3 105 0 10 10 70 77 0 12 12 11 97 0 11 11 68 77 0 2 2 13 97 0 13 13 71 77 0 0 0 9 95 0 9 9 71 77 8 1 4 4 6 95 17 1 6 6 69 77 0 1 1 14 97 0 14 14 69 77 0 16 16 75 16 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 83 values pushed */
0 15 4 1 4 15 1 128 0 5 16 5 134 0 7 18 1 3 4 7 3 105 8 1 4 17 1 6 14 4 6 103 0 10 10 70 77 0 12 12 11 97 0 11 11 68 77 0 2 2 13 97 0 13 13 71 77 0 0 0 9 95 0 9 9 71 77 0 1 1 14 97 0 14 14 69 77 0 16 16 75 16 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
35 34 115 113 112 110 107 106 104 102 96 94 89 87 85 84 79 78 72 70 63 61 58 56 53 51 48 47 40 38 34 43 35 42 38 45 49 19 11 25 
CALL[ ]	/* CallFunction */";
};
width = 1849;
}
);
note = uni02A5;
unicode = 677;
},
{
glyphname = uni02A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1171,127,o),
(1061,43,qs),
(971,-25,o),
(823,-23,qs),
(412,-23,ls),
(193,-23,o),
(160,160,qs),
(154,193,o),
(154,233,qs),
(154,715,ls),
(154,746,o),
(123,745,qs),
(68,745,ls),
(52,745,o),
(51,819,o),
(68,819,qs),
(129,819,o),
(201,879,qs),
(271,936,o),
(293,1004,qs),
(297,1016,o),
(336,1006,qs),
(379,994,o),
(385,975,q),
(385,881,ls),
(385,850,o),
(416,850,qs),
(733,850,l),
(792,870,o),
(864,870,qs),
(987,870,o),
(1081,834,q),
(1120,730,o),
(1120,643,qs),
(1120,625,o),
(1090,625,qs),
(1057,625,o),
(1055,635,qs),
(1043,680,o),
(975,748,qs),
(934,789,o),
(850,788,qs),
(789,788,o),
(752,737,qs),
(729,706,o),
(729,674,qs),
(731,574,o),
(897,532,qs),
(1057,491,o),
(1120,416,qs),
(1171,354,o),
(1171,258,q),
(1171,258,l)
);
},
{
closed = 1;
nodes = (
(541,688,o),
(584,745,q),
(416,745,ls),
(385,745,o),
(385,715,qs),
(385,299,ls),
(385,178,o),
(500,72,o),
(557,72,qs),
(856,72,ls),
(905,72,o),
(979,133,o),
(979,174,qs),
(979,295,o),
(807,340,qs),
(631,387,o),
(569,489,q),
(541,542,o),
(541,612,q),
(541,612,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
28 1 2 74 0 1 5 7 5 1 7 128 0 4 0 5 4 89 8 1 5 5 3 95 0 3 3 71 77 0 0 0 2 97 0 2 2 71 77 0 7 7 6 95 0 6 6 69 6 78 36 60 53 50 25 33 36 21 41 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1224;
}
);
note = uni02A6;
unicode = 678;
},
{
glyphname = uni02A7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(860,-256,o),
(670,-559,o),
(465,-559,qs),
(402,-559,o),
(301,-498,o),
(301,-457,qs),
(301,-420,o),
(344,-369,o),
(381,-369,qs),
(430,-369,o),
(510,-446,o),
(532,-446,qs),
(630,-446,o),
(633,-233,qs),
(633,43,l),
(541,-23,o),
(412,-23,qs),
(287,-23,o),
(154,102,o),
(154,233,qs),
(154,715,ls),
(154,746,o),
(123,745,qs),
(68,745,ls),
(52,745,o),
(51,819,o),
(68,819,qs),
(129,819,o),
(270,936,o),
(293,1004,qs),
(297,1016,o),
(336,1006,qs),
(379,994,o),
(385,975,q),
(385,881,ls),
(385,850,o),
(416,850,qs),
(602,850,ls),
(631,850,o),
(633,872,q),
(633,1177,o),
(858,1487,o),
(1028,1487,qs),
(1122,1487,o),
(1192,1415,o),
(1192,1384,qs),
(1192,1341,o),
(1155,1290,o),
(1112,1290,qs),
(1059,1290,o),
(993,1374,o),
(961,1374,qs),
(863,1374,o),
(860,1161,qs),
(860,55,ls)
);
},
{
closed = 1;
nodes = (
(633,715,ls),
(633,746,o),
(598,745,qs),
(416,745,ls),
(385,745,o),
(385,715,qs),
(385,299,ls),
(385,186,o),
(440,109,o),
(506,109,qs),
(557,109,o),
(633,156,q),
(633,156,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 14 2 3 1 67 1 10 5 39 1 6 10 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 3 0 1 114 0 8 6 7 7 8 114 0 4 5 5 4 89 0 0 0 2 97 0 2 2 70 77 11 1 5 5 3 95 0 3 3 71 77 0 10 10 6 97 0 6 6 69 77 0 7 7 9 98 0 9 9 73 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 3 0 1 3 128 0 8 6 7 7 8 114 0 4 5 5 4 89 0 0 0 2 97 0 2 2 70 77 11 1 5 5 3 95 0 3 3 71 77 0 10 10 6 97 0 6 6 69 77 0 7 7 9 98 0 9 9 73 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 3 0 1 3 128 0 8 6 7 6 8 7 128 0 4 5 5 4 89 0 0 0 2 97 0 2 2 70 77 11 1 5 5 3 95 0 3 3 71 77 0 10 10 6 97 0 6 6 69 77 0 7 7 9 98 0 9 9 73 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
65 62 58 56 52 50 33 35 36 50 24 51 36 33 33 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 991;
}
);
note = uni02A7;
unicode = 679;
},
{
glyphname = uni02A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1323,119,o),
(1063,-23,o),
(915,-23,qs),
(782,-23,o),
(676,68,q),
(539,-22,o),
(412,-23,qs),
(193,-23,o),
(160,160,qs),
(154,193,o),
(154,233,qs),
(154,715,ls),
(154,746,o),
(123,745,qs),
(68,745,ls),
(52,745,o),
(51,819,o),
(68,819,qs),
(129,819,o),
(201,879,qs),
(271,936,o),
(293,1004,qs),
(297,1016,o),
(336,1006,qs),
(379,994,o),
(385,975,q),
(385,881,ls),
(385,850,o),
(416,850,qs),
(631,850,ls),
(645,850,o),
(645,745,o),
(631,745,qs),
(416,745,ls),
(385,745,o),
(385,715,qs),
(385,299,ls),
(385,178,o),
(420,139,qs),
(447,108,o),
(506,109,qs),
(553,109,o),
(608,133,q),
(524,239,o),
(524,387,qs),
(524,557,o),
(631,694,qs),
(766,870,o),
(981,870,qs),
(1116,870,o),
(1204,825,qs),
(1247,802,o),
(1257,780,qs),
(1263,768,o),
(1264,739,qs),
(1264,686,o),
(1233,655,qs),
(1198,620,o),
(1167,621,qs),
(1128,621,o),
(1112,649,qs),
(1073,715,ls),
(1038,774,o),
(961,774,qs),
(879,774,o),
(819,682,qs),
(753,580,o),
(754,436,qs),
(754,342,o),
(797,270,q),
(959,420,o),
(1063,420,qs),
(1182,420,o),
(1323,322,o),
(1323,244,q),
(1323,244,l)
);
},
{
closed = 1;
nodes = (
(924,125,o),
(1020,125,qs),
(1110,125,o),
(1219,199,o),
(1219,252,qs),
(1219,293,o),
(1133,344,o),
(1065,344,qs),
(1008,344,o),
(846,207,q),
(846,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
32 5 2 12 11 70 1 9 4 2 76 49 1 3 74 0 2 5 0 5 2 0 128 0 7 1 5 7 89 0 0 0 11 12 0 11 105 8 1 5 5 6 95 0 6 6 71 77 0 1 1 3 97 0 3 3 71 77 0 12 12 9 97 10 1 9 9 69 77 0 4 4 9 97 10 1 9 9 69 9 78 85 83 79 77 73 71 69 67 50 25 50 37 38 40 35 38 34 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1359;
}
);
note = uni02A8;
unicode = 680;
},
{
glyphname = uni02A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1546,135,ls),
(1546,67,o),
(1653,68,qs),
(1669,68,o),
(1667,-8,o),
(1653,-8,qs),
(1544,0,o),
(1440,0,qs),
(1336,0,o),
(1217,-8,qs),
(1203,-8,o),
(1200,68,o),
(1217,68,qs),
(1317,68,o),
(1317,129,qs),
(1317,537,ls),
(1317,613,o),
(1286,713,o),
(1229,762,o),
(1161,762,qs),
(1100,762,o),
(977,653,o),
(977,592,qs),
(977,143,ls),
(977,67,o),
(1075,68,qs),
(1089,68,o),
(1090,-8,o),
(1075,-8,q),
(991,0,o),
(858,0,qs),
(725,0,o),
(639,-8,q),
(625,-8,o),
(625,29,qs),
(623,68,o),
(639,68,qs),
(745,68,o),
(748,143,q),
(748,549,ls),
(748,746,o),
(655,745,qs),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(293,0,qs),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,135,qs),
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(121,819,o),
(164,891,o),
(164,932,qs),
(164,1077,o),
(289,1327,o),
(524,1487,o),
(674,1487,qs),
(787,1487,o),
(897,1403,o),
(897,1343,qs),
(897,1312,o),
(868,1266,o),
(813,1223,o),
(784,1223,qs),
(688,1223,o),
(600,1374,o),
(559,1374,qs),
(491,1374,o),
(393,1204,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(655,850,ls),
(800,850,o),
(952,883,q),
(985,883,o),
(981,856,q),
(977,788,ls),
(975,770,o),
(995,768,o),
(1004,778,qs),
(1041,823,o),
(1165,870,o),
(1237,870,qs),
(1335,870,o),
(1468,772,o),
(1546,608,o),
(1546,465,q),
(1546,465,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
11 1 2 0 10 1 15 6 71 1 9 8 3 76 100 77 55 3 9 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 3 0 3 4 114 0 6 15 7 6 89 0 3 3 5 97 0 5 5 70 77 11 1 7 7 2 95 0 2 2 71 77 0 15 15 0 97 1 1 0 0 71 77 18 16 14 12 10 5 8 8 9 97 17 13 2 9 9 69 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 4 3 0 3 4 0 128 0 6 15 7 6 89 0 3 3 5 97 0 5 5 70 77 11 1 7 7 2 95 0 2 2 71 77 0 15 15 0 97 1 1 0 0 71 77 18 16 14 12 10 5 8 8 9 97 17 13 2 9 9 69 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 4 3 1 3 4 1 128 0 6 15 7 6 89 0 3 3 5 97 0 5 5 70 77 0 1 1 71 77 11 1 7 7 2 95 0 2 2 71 77 0 15 15 0 97 0 0 0 71 77 18 16 14 12 10 5 8 8 9 97 17 13 2 9 9 69 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 3 1 3 4 1 128 0 6 15 7 6 89 18 16 14 12 10 5 8 17 13 2 9 8 9 101 0 3 3 5 97 0 5 5 70 77 0 1 1 71 77 11 1 7 7 2 95 0 2 2 71 77 0 15 15 0 97 0 0 0 71 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
104 102 99 95 93 92 87 85 81 79 76 74 69 68 65 62 59 57 54 52 19 50 21 37 33 36 49 23 35 19 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1669;
}
);
note = uni02A9;
unicode = 681;
},
{
glyphname = uni02AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1120,127,o),
(1010,43,qs),
(920,-25,o),
(772,-23,qs),
(536,-23,o),
(385,72,q),
(362,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,135,qs),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(322,1460,o),
(342,1477,qs),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1378,o),
(393,1286,qs),
(393,303,l),
(411,258,o),
(504,166,o),
(735,57,o),
(809,57,qs),
(850,57,o),
(928,127,o),
(928,174,qs),
(928,295,o),
(756,340,qs),
(580,387,o),
(518,489,qs),
(487,540,o),
(489,612,qs),
(489,727,o),
(590,801,qs),
(682,871,o),
(813,870,qs),
(936,870,o),
(1030,834,q),
(1069,730,o),
(1069,643,qs),
(1069,625,o),
(1038,625,qs),
(1005,625,o),
(1004,635,q),
(986,686,o),
(924,748,qs),
(883,789,o),
(799,788,qs),
(736,788,o),
(700,737,qs),
(677,706,o),
(678,674,qs),
(678,574,o),
(846,532,qs),
(1006,491,o),
(1069,416,qs),
(1120,354,o),
(1120,258,q),
(1120,258,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
42 1 5 4 65 39 2 3 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
42 1 5 4 65 39 2 7 1 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 3 0 1 3 128 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 0 0 2 97 0 2 2 71 77 7 1 3 3 8 97 0 8 8 69 77 7 1 3 3 9 97 0 9 9 69 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 7 0 1 7 128 0 7 0 8 9 7 8 105 0 4 4 70 77 0 6 6 5 97 0 5 5 68 77 0 0 0 2 97 0 2 2 71 77 0 3 3 9 97 0 9 9 69 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
68 66 36 19 34 21 23 43 36 21 41 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1173;
}
);
note = uni02AA;
unicode = 682;
},
{
glyphname = uni02AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1071,-25,o),
(1032,-25,qs),
(1022,-25,o),
(938,-10,qs),
(883,0,o),
(846,0,qs),
(287,0,ls),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,135,qs),
(164,1161,ls),
(164,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(322,1458,o),
(354,1487,o),
(369,1487,qs),
(400,1487,o),
(399,1454,qs),
(393,1378,o),
(393,1286,qs),
(393,866,l),
(553,850,o),
(561,850,qs),
(979,850,ls),
(1024,850,o),
(1024,817,qs),
(1024,801,o),
(1016,784,qs),
(657,119,ls),
(653,113,o),
(653,104,qs),
(653,79,o),
(682,80,qs),
(791,80,ls),
(922,80,o),
(1016,285,qs),
(1020,295,o),
(1042,297,qs),
(1050,297,o),
(1067,293,qs),
(1098,285,o),
(1100,264,q),
(1075,76,ls),
(1071,53,o),
(1071,16,q),
(1071,16,l)
);
},
{
closed = 1;
nodes = (
(393,143,ls),
(393,129,o),
(397,117,q),
(725,727,ls),
(733,743,o),
(735,754,q),
(735,774,o),
(707,774,qs),
(526,774,ls),
(458,774,o),
(401,645,qs),
(393,627,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
27 1 4 3 24 1 2 5 65 59 2 0 9 64 14 3 3 1 0 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 3 70 77 0 5 5 4 97 0 4 4 68 77 0 9 9 2 95 0 2 2 71 77 6 1 1 1 7 95 0 7 7 69 77 0 0 0 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 6 1 7 1 6 114 0 1 0 7 8 1 7 103 0 3 3 70 77 0 5 5 4 97 0 4 4 68 77 0 9 9 2 95 0 2 2 71 77 0 0 0 8 97 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
58 55 34 52 19 34 19 22 39 50 38 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1101;
}
);
note = uni02AB;
unicode = 683;
},
{
glyphname = uni02AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,1112,o),
(6,1112,qs),
(-2,1112,o),
(-2,1155,o),
(6,1155,qs),
(45,1151,o),
(123,1151,qs),
(217,1151,o),
(254,1155,q),
(262,1155,o),
(262,1112,o),
(254,1112,qs),
(211,1112,o),
(213,1085,qs),
(213,1075,o),
(215,1063,q),
(301,797,ls),
(303,789,o),
(307,786,q),
(311,786,o),
(317,797,q),
(391,1010,ls),
(393,1018,o),
(393,1030,o),
(391,1036,qs),
(377,1069,ls),
(359,1112,o),
(326,1112,qs),
(316,1112,o),
(315,1155,o),
(326,1155,q),
(363,1151,o),
(432,1151,qs),
(526,1151,o),
(563,1155,q),
(573,1155,o),
(573,1112,o),
(563,1112,qs),
(522,1112,o),
(522,1085,qs),
(522,1077,o),
(526,1063,qs),
(610,797,ls),
(612,789,o),
(618,786,q),
(622,786,o),
(627,797,q),
(721,1067,l),
(723,1075,o),
(723,1081,qs),
(723,1114,o),
(668,1112,qs),
(660,1112,o),
(659,1155,o),
(668,1155,qs),
(707,1151,o),
(776,1151,qs),
(833,1151,o),
(870,1155,q),
(878,1155,o),
(879,1112,o),
(870,1112,qs),
(811,1112,o),
(795,1069,qs),
(639,666,ls),
(625,629,o),
(596,629,qs),
(563,629,o),
(549,659,qs),
(442,915,l),
(440,923,o),
(430,924,o),
(426,915,qs),
(332,666,ls),
(318,629,o),
(285,629,qs),
(256,629,o),
(240,659,q),
(68,1069,ls)
);
},
{
closed = 1;
nodes = (
(50,471,o),
(6,469,qs),
(-2,469,o),
(-2,514,o),
(6,514,qs),
(45,510,o),
(123,510,qs),
(217,510,o),
(254,514,q),
(262,514,o),
(262,469,o),
(254,469,qs),
(211,469,o),
(213,442,qs),
(213,432,o),
(215,420,q),
(301,154,ls),
(303,146,o),
(311,145,o),
(317,154,q),
(391,369,ls),
(393,377,o),
(393,387,o),
(391,395,q),
(377,428,ls),
(359,471,o),
(326,469,qs),
(316,469,o),
(315,514,o),
(326,514,q),
(363,510,o),
(432,510,qs),
(526,510,o),
(563,514,q),
(573,514,o),
(573,469,o),
(563,469,qs),
(522,469,o),
(522,442,qs),
(522,434,o),
(526,420,qs),
(610,154,ls),
(612,146,o),
(618,145,qs),
(622,145,o),
(627,154,q),
(721,424,l),
(723,432,o),
(723,438,qs),
(723,471,o),
(668,469,qs),
(660,469,o),
(659,514,o),
(668,514,qs),
(707,510,o),
(776,510,qs),
(833,510,o),
(870,514,q),
(878,514,o),
(879,469,o),
(870,469,qs),
(811,469,o),
(795,428,qs),
(639,23,ls),
(625,-14,o),
(596,-14,qs),
(563,-14,o),
(549,16,qs),
(442,272,l),
(440,280,o),
(430,281,o),
(426,272,qs),
(332,23,ls),
(318,-14,o),
(285,-14,qs),
(256,-14,o),
(240,16,q),
(68,428,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 110 values pushed */
59 38 33 28 4 0 2 151 126 102 3 14 0 117 107 2 11 13 3 76 73 47 23 3 3 74 1 1 0 2 14 2 0 14 128 9 6 2 3 10 8 7 5 4 5 2 0 3 2 105 20 17 2 14 21 19 18 16 15 5 13 11 14 13 105 12 1 11 11 69 11 78 155 153 150 148 144 143 130 128 125 123 119 118 106 104 101 99 95 94 91 89 82 80 77 75 72 70 30 35 36 28 35 36 19 39 33 22 11 31 
CALL[ ]	/* CallFunction */";
};
width = 907;
}
);
note = uni02AC;
unicode = 684;
},
{
glyphname = uni02AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,379,ls),
(57,402,o),
(80,401,qs),
(973,401,ls),
(991,401,o),
(991,381,qs),
(991,-10,ls),
(991,-30,o),
(897,-31,o),
(897,-10,qs),
(897,215,ls),
(897,235,o),
(872,236,qs),
(184,236,ls),
(153,236,o),
(154,221,qs),
(154,-10,ls),
(154,-30,o),
(57,-30,o),
(57,-10,q),
(57,-10,l)
);
},
{
closed = 1;
nodes = (
(57,909,ls),
(57,932,o),
(80,932,qs),
(973,932,ls),
(991,932,o),
(991,911,qs),
(991,518,ls),
(991,498,o),
(897,500,o),
(897,518,qs),
(897,745,ls),
(897,765,o),
(872,766,qs),
(184,766,ls),
(153,766,o),
(154,752,q),
(154,518,ls),
(154,498,o),
(57,498,o),
(57,518,q),
(57,518,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
31 25 2 4 5 4 1 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 5 3 5 4 114 0 6 0 5 4 6 5 103 0 3 0 1 0 3 1 103 2 1 0 0 75 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 4 5 3 5 4 3 128 0 6 0 5 4 6 5 103 0 3 0 1 0 3 1 103 2 1 0 0 75 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
55 36 20 51 19 36 17 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 1071;
}
);
note = uni02AD;
unicode = 685;
},
{
glyphname = uni1D79;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(973,-256,o),
(850,-442,o),
(639,-543,o),
(528,-543,qs),
(419,-543,o),
(240,-469,o),
(109,-352,o),
(25,-211,o),
(25,-143,qs),
(25,-75,o),
(121,53,o),
(256,145,o),
(360,176,qs),
(397,186,o),
(367,205,qs),
(307,240,ls),
(241,279,o),
(215,307,qs),
(166,360,o),
(168,410,qs),
(168,457,o),
(258,561,qs),
(364,686,o),
(436,729,qs),
(446,735,o),
(442,752,o),
(428,752,qs),
(78,752,ls),
(55,752,o),
(37,778,o),
(47,803,o),
(78,856,o),
(106,922,o),
(119,952,qs),
(123,962,o),
(143,963,qs),
(155,963,o),
(186,950,qs),
(206,942,o),
(203,932,qs),
(185,871,o),
(231,854,q),
(270,844,o),
(471,850,o),
(719,850,o),
(934,864,qs),
(948,864,o),
(963,809,o),
(952,752,o),
(938,752,qs),
(631,752,ls),
(598,752,o),
(578,727,q),
(510,653,o),
(397,477,o),
(397,418,qs),
(397,391,o),
(453,315,o),
(518,266,o),
(592,223,o),
(645,197,qs),
(743,150,ls),
(886,80,o),
(973,-69,o),
(973,-143,q),
(973,-143,l)
);
},
{
closed = 1;
nodes = (
(745,-109,o),
(711,-14,o),
(643,66,o),
(547,109,o),
(485,109,qs),
(419,109,o),
(324,39,o),
(254,-92,o),
(254,-145,qs),
(254,-198,o),
(276,-281,o),
(330,-373,o),
(436,-465,o),
(514,-465,qs),
(567,-465,o),
(659,-406,o),
(715,-311,o),
(745,-207,o),
(745,-158,q),
(745,-158,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 1 2 112 0 6 0 5 0 6 5 128 3 1 0 0 1 97 0 1 1 71 77 0 5 5 4 97 0 4 4 73 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 2 133 0 6 0 5 0 6 5 128 3 1 0 0 1 97 0 1 1 71 77 0 5 5 4 97 0 4 4 73 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
81 79 72 70 62 60 38 38 67 45 7 11 26 
CALL[ ]	/* CallFunction */";
};
width = 978;
}
);
note = uni1D79;
unicode = 7545;
},
{
glyphname = uni1E0D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (915,0);
ref = dotbelowcomb;
},
{
ref = d;
}
);
width = 1034;
}
);
note = uni1E0D;
unicode = 7693;
},
{
glyphname = uni1E0F;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (984,0);
ref = uni0331;
}
);
width = 1034;
}
);
note = uni1E0F;
unicode = 7695;
},
{
glyphname = uni1E21;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (913,0);
ref = uni0304;
}
);
width = 946;
}
);
note = uni1E21;
unicode = 7713;
},
{
glyphname = uni1E25;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (961,0);
ref = dotbelowcomb;
}
);
width = 1091;
}
);
note = uni1E25;
unicode = 7717;
},
{
glyphname = uni1E2B;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (1157,0);
ref = uni032E;
}
);
width = 1091;
}
);
note = uni1E2B;
unicode = 7723;
},
{
glyphname = uni1E33;
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
pos = (951,0);
ref = dotbelowcomb;
}
);
width = 1071;
}
);
note = uni1E33;
unicode = 7731;
},
{
glyphname = uni1E5B;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (792,0);
ref = dotbelowcomb;
}
);
width = 753;
}
);
note = uni1E5B;
unicode = 7771;
},
{
glyphname = uni1E63;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (789,0);
ref = dotbelowcomb;
}
);
width = 747;
}
);
note = uni1E63;
unicode = 7779;
},
{
glyphname = uni1E6D;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (750,0);
ref = dotbelowcomb;
}
);
width = 669;
}
);
note = uni1E6D;
unicode = 7789;
},
{
glyphname = uni1E6F;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (802,0);
ref = uni0331;
}
);
width = 669;
}
);
note = uni1E6F;
unicode = 7791;
},
{
glyphname = uni1E8F;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (909,0);
ref = uni0307;
}
);
width = 882;
}
);
note = uni1E8F;
unicode = 7823;
},
{
glyphname = uni1E93;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (799,0);
ref = dotbelowcomb;
}
);
width = 768;
}
);
note = uni1E93;
unicode = 7827;
},
{
glyphname = uni1E96;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (1013,0);
ref = uni0331;
}
);
width = 1091;
}
);
note = uni1E96;
unicode = 7830;
},
{
glyphname = uni1E9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,143,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(293,0,qs),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,317,ls),
(164,350,o),
(135,338,qs),
(29,299,ls),
(6,291,o),
(-8,342,qs),
(-14,365,o),
(-16,377,q),
(-16,393,o),
(-6,397,qs),
(135,449,ls),
(160,457,o),
(164,475,q),
(164,494,l),
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(56,705,o),
(55,778,o),
(72,778,qs),
(119,778,o),
(164,850,o),
(164,891,qs),
(164,1176,o),
(471,1487,o),
(674,1487,qs),
(780,1487,o),
(897,1405,o),
(897,1339,qs),
(897,1292,o),
(817,1223,o),
(784,1223,qs),
(688,1223,o),
(608,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1196,o),
(393,1049,qs),
(393,571,ls),
(393,542,o),
(422,553,qs),
(557,602,ls),
(573,608,o),
(606,510,o),
(592,504,qs),
(430,444,ls),
(393,432,o),
(393,399,q),
(393,399,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
41 35 2 5 4 1 76 58 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 114 0 3 0 4 5 3 4 105 0 0 0 2 97 0 2 2 70 77 7 1 5 5 6 97 0 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 5 3 4 105 0 0 0 2 97 0 2 2 70 77 7 1 5 5 6 97 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 5 3 4 105 7 1 5 0 6 5 6 101 0 0 0 2 97 0 2 2 70 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
62 60 57 55 51 50 50 20 36 33 44 8 11 27 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = uni1E9C;
unicode = 7836;
},
{
glyphname = uni1EBD;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (951,0);
ref = tildecomb;
}
);
width = 874;
}
);
note = uni1EBD;
unicode = 7869;
},
{
glyphname = uniA741;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1001,68,o),
(1079,68,qs),
(1095,68,o),
(1096,-8,o),
(1079,-8,q),
(999,0,o),
(700,0,o),
(616,-8,q),
(602,-8,o),
(600,68,o),
(616,68,qs),
(690,68,o),
(690,96,qs),
(690,112,o),
(664,145,q),
(469,369,ls),
(444,400,o),
(410,399,qs),
(394,399,o),
(393,365,qs),
(393,143,ls),
(393,67,o),
(502,68,qs),
(516,68,o),
(516,-8,o),
(502,-8,q),
(418,0,o),
(133,0,o),
(49,-8,q),
(35,-8,o),
(35,68,o),
(49,68,qs),
(164,68,o),
(164,139,qs),
(164,1065,l),
(-12,1065,ls),
(-30,1065,o),
(-31,1169,o),
(-12,1169,qs),
(164,1169,l),
(156,1286,o),
(72,1286,qs),
(56,1286,o),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(322,1458,o),
(354,1487,o),
(371,1487,qs),
(400,1487,o),
(399,1460,qs),
(393,1374,o),
(393,1286,qs),
(393,1169,l),
(561,1169,ls),
(581,1169,o),
(582,1065,o),
(559,1065,qs),
(393,1065,l),
(393,528,ls),
(393,491,o),
(414,492,qs),
(457,492,o),
(494,530,qs),
(647,700,ls),
(680,737,o),
(680,754,qs),
(680,785,o),
(596,784,qs),
(580,784,o),
(580,856,o),
(596,856,q),
(655,850,o),
(952,850,o),
(1016,856,q),
(1030,856,o),
(1030,784,o),
(1016,784,qs),
(914,784,o),
(834,713,qs),
(625,524,ls),
(615,514,o),
(614,506,qs),
(614,492,o),
(625,479,qs),
(954,121,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
13 1 1 4 18 1 3 0 2 76 80 59 2 12 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
9 1 5 10 1 4 1 5 4 103 0 3 0 14 11 3 14 105 0 6 6 70 77 0 8 8 7 97 0 7 7 68 77 2 1 0 0 1 97 0 1 1 71 77 17 15 13 3 11 11 12 97 16 1 12 12 69 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
9 1 5 10 1 4 1 5 4 103 0 3 0 14 11 3 14 105 17 15 13 3 11 16 1 12 11 12 101 0 6 6 70 77 0 8 8 7 97 0 7 7 68 77 2 1 0 0 1 97 0 1 1 71 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
84 82 79 78 74 73 68 66 63 61 58 57 53 52 50 48 46 45 34 19 20 33 34 37 35 20 22 18 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1071;
}
);
note = uniA741;
unicode = 42817;
},
{
glyphname = uniA751;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,90,o),
(692,4,qs),
(618,-25,o),
(518,-23,qs),
(436,-23,o),
(399,-4,qs),
(391,0,o),
(385,0,qs),
(367,0,o),
(367,-27,qs),
(367,-139,ls),
(367,-168,o),
(381,-172,qs),
(387,-174,o),
(403,-176,q),
(559,-176,ls),
(573,-176,o),
(575,-225,q),
(571,-260,ls),
(567,-280,o),
(559,-281,q),
(403,-281,ls),
(374,-281,o),
(369,-297,qs),
(367,-303,o),
(367,-317,qs),
(367,-397,ls),
(367,-460,o),
(459,-477,qs),
(484,-481,o),
(508,-483,qs),
(522,-483,o),
(522,-559,o),
(508,-559,q),
(424,-551,o),
(256,-551,qs),
(113,-551,o),
(33,-559,q),
(19,-559,o),
(16,-522,q),
(20,-498,l),
(24,-484,o),
(33,-483,q),
(135,-483,o),
(137,-399,qs),
(137,-317,ls),
(137,-288,o),
(123,-283,qs),
(115,-281,o),
(100,-281,qs),
(-29,-281,ls),
(-45,-281,o),
(-45,-233,qs),
(-45,-184,o),
(-29,-176,q),
(100,-176,ls),
(131,-176,o),
(133,-164,q),
(135,-158,o),
(137,-139,q),
(137,549,ls),
(137,666,o),
(70,680,qs),
(60,682,o),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(236,825,qs),
(293,856,o),
(313,872,qs),
(327,882,o),
(340,883,qs),
(367,883,o),
(371,862,q),
(371,850,l),
(367,830,o),
(367,815,qs),
(367,795,o),
(381,791,q),
(391,795,ls),
(399,799,o),
(408,809,qs),
(435,842,o),
(492,860,qs),
(523,868,o),
(551,870,q),
(707,870,o),
(811,762,qs),
(918,643,o),
(920,475,q),
(920,475,l)
);
},
{
closed = 1;
nodes = (
(690,649,o),
(614,727,qs),
(573,770,o),
(510,770,qs),
(434,770,o),
(379,686,qs),
(367,668,o),
(367,616,qs),
(367,178,l),
(373,59,o),
(535,59,qs),
(617,59,o),
(659,197,qs),
(690,290,o),
(690,401,q),
(690,401,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 13 2 1 0 80 31 2 5 13 73 1 6 5 65 45 2 7 6 51 1 8 7 5 76 57 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 15 0 1 15 128 0 3 0 4 14 3 4 105 11 1 5 10 1 6 7 5 6 105 0 15 15 0 97 2 1 0 0 71 77 0 12 12 69 77 0 14 14 13 98 0 13 13 69 77 9 1 7 7 8 97 0 8 8 73 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 1 0 15 0 1 15 128 0 3 0 4 14 3 4 105 11 1 5 10 1 6 7 5 6 105 0 2 2 71 77 0 15 15 0 97 0 0 0 71 77 0 12 12 69 77 0 14 14 13 98 0 13 13 69 77 9 1 7 7 8 97 0 8 8 73 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 1 0 15 0 1 15 128 0 12 14 13 13 12 114 0 3 0 4 14 3 4 105 11 1 5 10 1 6 7 5 6 105 0 2 2 71 77 0 15 15 0 97 0 0 0 71 77 0 14 14 13 98 0 13 13 69 77 9 1 7 7 8 97 0 8 8 73 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
104 102 97 95 88 86 84 82 76 74 70 68 61 59 38 22 35 39 18 21 21 38 19 16 11 31 
CALL[ ]	/* CallFunction */";
};
width = 987;
}
);
note = uniA751;
unicode = 42833;
},
{
glyphname = uniA753;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,90,o),
(692,4,qs),
(618,-25,o),
(518,-23,qs),
(367,-23,l),
(367,-397,ls),
(367,-460,o),
(459,-477,qs),
(484,-481,o),
(508,-483,qs),
(522,-483,o),
(522,-559,o),
(508,-559,q),
(424,-551,o),
(256,-551,qs),
(113,-551,o),
(33,-559,q),
(19,-559,o),
(16,-522,q),
(20,-498,l),
(24,-484,o),
(33,-483,q),
(135,-483,o),
(137,-399,qs),
(137,-23,l),
(6,-23,ls),
(-84,-23,o),
(-135,-84,qs),
(-168,-123,o),
(-168,-166,qs),
(-168,-246,o),
(-106,-281,qs),
(-77,-297,o),
(-43,-297,qs),
(-4,-297,o),
(27,-283,q),
(39,-276,l),
(47,-276,l),
(63,-284,o),
(72,-315,q),
(74,-336,ls),
(74,-344,o),
(68,-346,q),
(27,-373,o),
(-39,-387,qs),
(-66,-393,o),
(-86,-393,qs),
(-231,-393,o),
(-299,-309,qs),
(-342,-258,o),
(-340,-180,qs),
(-340,-76,o),
(-244,-2,qs),
(-160,59,o),
(-63,59,qs),
(137,59,l),
(137,549,ls),
(137,666,o),
(70,680,qs),
(60,682,o),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(236,825,qs),
(293,856,o),
(313,872,qs),
(327,882,o),
(340,883,qs),
(367,883,o),
(371,862,q),
(371,850,l),
(367,830,o),
(367,815,qs),
(367,795,o),
(381,791,q),
(391,795,ls),
(399,799,o),
(408,809,qs),
(435,842,o),
(492,860,qs),
(523,868,o),
(551,870,q),
(707,870,o),
(811,762,qs),
(918,643,o),
(920,475,q),
(920,475,l)
);
},
{
closed = 1;
nodes = (
(690,649,o),
(614,727,qs),
(573,770,o),
(510,770,qs),
(434,770,o),
(379,686,qs),
(367,668,o),
(367,616,qs),
(367,59,l),
(535,59,ls),
(617,59,o),
(659,197,qs),
(690,290,o),
(690,401,q),
(690,401,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
15 13 2 1 0 49 1 7 8 47 1 6 7 68 1 10 9 4 76 74 1 10 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 14 0 1 14 128 0 3 0 4 5 3 4 105 0 7 0 6 9 7 6 105 0 14 14 0 97 2 1 0 0 71 77 13 1 5 5 8 98 12 1 8 8 69 77 11 1 9 9 10 97 0 10 10 73 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 14 0 1 14 128 0 3 0 4 5 3 4 105 0 7 0 6 9 7 6 105 0 2 2 71 77 0 14 14 0 97 0 0 0 71 77 13 1 5 5 8 98 12 1 8 8 69 77 11 1 9 9 10 97 0 10 10 73 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
99 97 93 91 84 82 78 76 73 71 65 64 38 43 38 36 18 21 21 38 19 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 987;
}
);
note = uniA753;
unicode = 42835;
},
{
glyphname = uniA757;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(893,-483,o),
(1016,-483,qs),
(1032,-483,o),
(1032,-559,o),
(1016,-559,q),
(936,-551,o),
(625,-551,o),
(541,-559,q),
(527,-559,o),
(526,-483,o),
(541,-483,qs),
(664,-483,o),
(664,-397,qs),
(664,-283,l),
(446,-283,ls),
(428,-283,o),
(426,-176,o),
(446,-176,qs),
(664,-176,l),
(664,-6,l),
(603,-22,o),
(514,-23,qs),
(65,-23,o),
(66,481,qs),
(66,653,o),
(180,766,qs),
(289,870,o),
(467,870,qs),
(621,870,o),
(711,817,qs),
(717,813,o),
(725,811,q),
(834,864,ls),
(869,880,o),
(899,836,qs),
(924,801,o),
(907,788,q),
(893,774,o),
(893,616,qs),
(893,-176,l),
(1065,-176,ls),
(1085,-176,o),
(1083,-283,o),
(1063,-283,qs),
(893,-283,l),
(893,-399,ls)
);
},
{
closed = 1;
nodes = (
(664,643,ls),
(664,666,o),
(655,678,qs),
(587,770,o),
(508,770,qs),
(299,770,o),
(299,420,qs),
(299,266,o),
(350,160,qs),
(397,60,o),
(487,59,qs),
(608,59,o),
(645,117,qs),
(664,143,o),
(664,180,q),
(664,180,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
13 1 10 2 25 1 3 9 2 76 40 1 7 73 4 1 1 5 1 0 6 1 0 103 0 10 10 2 97 0 2 2 71 77 0 9 9 3 97 0 3 3 69 77 8 1 6 6 7 97 0 7 7 73 7 78 57 55 51 49 35 20 18 33 34 36 43 33 32 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 978;
}
);
note = uniA757;
unicode = 42839;
},
{
glyphname = uniA75D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,162,o),
(903,150,qs),
(903,107,o),
(877,37,qs),
(863,0,o),
(852,0,qs),
(696,0,ls),
(669,0,o),
(657,-20,qs),
(532,-238,l),
(530,-240,o),
(524,-242,q),
(504,-236,l),
(459,-218,o),
(434,-190,qs),
(428,-184,o),
(428,-178,q),
(512,-31,ls),
(518,-21,o),
(518,-14,qs),
(518,-4,o),
(508,0,q),
(496,0,l),
(291,0,ls),
(217,0,o),
(217,29,q),
(219,43,ls),
(221,51,o),
(231,61,q),
(313,161,o),
(332,188,qs),
(453,358,o),
(453,532,qs),
(453,634,o),
(371,680,qs),
(328,703,o),
(276,702,qs),
(174,702,o),
(106,608,qs),
(102,602,o),
(88,582,qs),
(84,576,o),
(74,575,q),
(57,580,ls),
(30,590,o),
(27,610,q),
(27,621,l),
(72,730,o),
(160,801,qs),
(246,871,o),
(346,870,qs),
(491,870,o),
(578,782,q),
(600,754,l),
(623,721,l),
(648,672,o),
(647,610,qs),
(647,483,o),
(553,328,qs),
(469,199,ls),
(459,185,o),
(459,174,q),
(463,162,o),
(485,162,qs),
(596,162,ls),
(623,162,o),
(637,182,q),
(639,184,o),
(639,186,q),
(731,346,l),
(731,348,o),
(737,348,q),
(760,342,l),
(805,324,o),
(829,299,qs),
(836,291,l),
(836,287,l),
(780,193,ls),
(774,183,o),
(774,174,q),
(776,168,l),
(780,164,o),
(797,162,q),
(899,162,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
40 36 11 6 2 5 0 2 81 57 2 3 0 2 76 71 66 2 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 1 97 0 1 1 71 77 0 0 0 3 95 4 1 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 4 1 3 0 3 99 0 2 2 1 97 0 1 1 71 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
77 75 60 58 47 45 33 31 20 17 5 11 22 
CALL[ ]	/* CallFunction */";
};
width = 944;
}
);
note = uniA75D;
unicode = 42845;
},
{
glyphname = uniA76B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413,393,o),
(483,313,qs),
(546,241,o),
(547,156,qs),
(547,17,o),
(424,-135,qs),
(318,-266,o),
(180,-332,qs),
(137,-352,o),
(98,-362,q),
(86,-360,l),
(66,-352,o),
(57,-319,q),
(55,-301,l),
(57,-291,o),
(66,-289,qs),
(256,-230,o),
(299,-25,qs),
(309,26,o),
(309,84,qs),
(309,207,o),
(240,266,qs),
(197,303,o),
(131,303,qs),
(111,303,o),
(100,338,q),
(98,362,ls),
(98,380,o),
(109,387,q),
(220,446,o),
(258,532,qs),
(274,567,o),
(274,602,qs),
(274,686,o),
(217,727,qs),
(182,754,o),
(129,754,qs),
(92,754,o),
(61,739,q),
(53,741,l),
(35,751,o),
(29,786,qs),
(27,807,l),
(29,815,o),
(33,817,qs),
(119,870,o),
(231,870,qs),
(421,870,o),
(481,764,qs),
(506,721,o),
(506,659,qs),
(508,565,o),
(385,469,qs),
(348,440,o),
(309,420,q),
(309,420,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
13 1 1 0 55 28 15 3 2 1 2 76 44 41 2 2 73 0 2 1 2 134 0 1 1 0 97 0 0 0 71 1 78 43 40 39 3 11 25 
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = uniA76B;
unicode = 42859;
},
{
glyphname = uniA76F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(881,12,o),
(465,-297,qs),
(361,-375,o),
(223,-451,q),
(213,-453,l),
(193,-451,o),
(178,-418,qs),
(172,-404,o),
(172,-391,qs),
(172,-381,o),
(176,-375,q),
(178,-369,o),
(186,-365,qs),
(452,-213,o),
(571,39,qs),
(651,209,o),
(651,401,qs),
(651,548,o),
(578,651,qs),
(510,745,o),
(418,745,qs),
(316,745,o),
(233,668,qs),
(147,582,o),
(143,473,qs),
(143,360,o),
(199,301,qs),
(236,262,o),
(291,262,qs),
(316,262,o),
(342,295,qs),
(371,332,o),
(389,340,qs),
(407,350,o),
(432,350,qs),
(504,350,o),
(532,295,qs),
(542,275,o),
(543,250,qs),
(543,141,o),
(416,123,qs),
(385,119,o),
(346,117,qs),
(219,117,o),
(66,295,o),
(66,453,qs),
(66,631,o),
(172,748,qs),
(285,871,o),
(473,870,qs),
(657,870,o),
(772,727,qs),
(872,602,o),
(881,426,qs),
(881,403,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
49 45 2 1 73 0 2 4 3 4 2 3 128 0 3 0 1 3 1 101 0 4 4 0 97 0 0 0 71 4 78 38 36 38 37 35 5 11 27 
CALL[ ]	/* CallFunction */";
};
width = 942;
}
);
note = uniA76F;
unicode = 42863;
},
{
glyphname = uniA77A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(745,608,o),
(672,711,qs),
(617,793,o),
(543,793,qs),
(465,793,o),
(399,709,qs),
(317,603,o),
(319,444,qs),
(319,264,o),
(399,150,qs),
(460,62,o),
(543,61,qs),
(637,61,o),
(694,182,qs),
(745,288,o),
(745,444,q),
(745,444,l)
);
},
{
closed = 1;
nodes = (
(749,-25,o),
(543,-23,qs),
(336,-23,o),
(203,100,qs),
(66,229,o),
(66,449,qs),
(66,599,o),
(170,717,qs),
(307,871,o),
(532,870,q),
(327,1058,o),
(8,1196,q),
(-10,1202,o),
(35,1300,o),
(53,1292,qs),
(346,1169,o),
(766,899,o),
(999,592,o),
(999,451,qs),
(999,229,o),
(872,100,q),
(872,100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 2 97 0 2 2 71 77 0 0 0 3 97 0 3 3 69 3 78 38 31 38 35 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 1073;
}
);
note = uniA77A;
unicode = 42874;
},
{
glyphname = uniA77C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(883,616,o),
(831,575,qs),
(796,546,o),
(750,547,qs),
(699,547,o),
(670,600,qs),
(639,662,l),
(614,701,o),
(573,700,qs),
(487,700,o),
(424,598,qs),
(371,512,o),
(367,422,q),
(367,145,ls),
(367,122,o),
(389,117,q),
(393,117,o),
(397,115,q),
(711,115,ls),
(738,115,o),
(745,76,qs),
(748,49,l),
(740,6,o),
(711,0,q),
(397,0,ls),
(374,0,o),
(369,-29,q),
(369,-35,o),
(367,-41,q),
(367,-393,ls),
(367,-450,o),
(317,-485,q),
(303,-493,o),
(285,-500,qs),
(111,-557,l),
(96,-557,l),
(71,-553,o),
(57,-518,qs),
(51,-504,o),
(49,-489,q),
(49,-473,o),
(61,-465,qs),
(123,-422,l),
(137,-414,o),
(137,-391,qs),
(137,549,ls),
(137,658,o),
(80,678,qs),
(66,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(375,883,o),
(375,856,qs),
(375,850,l),
(367,764,l),
(367,721,ls),
(367,686,o),
(383,686,qs),
(391,686,o),
(406,702,qs),
(510,819,o),
(621,856,qs),
(658,868,o),
(686,870,q),
(780,870,o),
(838,811,qs),
(883,766,o),
(883,690,q),
(883,690,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
14 13 2 3 0 54 1 5 6 2 76 47 40 2 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 3 1 3 7 1 128 0 1 4 3 1 4 126 0 3 0 4 8 3 4 105 0 8 8 0 97 2 1 0 0 71 77 0 6 6 5 96 0 5 5 69 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 3 1 3 7 1 128 0 1 4 3 1 4 126 0 3 0 4 8 3 4 105 0 2 2 71 77 0 8 8 0 97 0 0 0 71 77 0 6 6 5 96 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 3 1 3 7 1 128 0 1 4 3 1 4 126 0 3 0 4 8 3 4 105 0 6 0 5 6 5 100 0 2 2 71 77 0 8 8 0 97 0 0 0 71 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
73 71 68 66 58 56 52 50 34 21 21 37 19 9 11 27 
CALL[ ]	/* CallFunction */";
};
width = 888;
}
);
note = uniA77C;
unicode = 42876;
},
{
glyphname = uniA783;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1006,74,o),
(879,31,qs),
(809,6,ls),
(793,0,o),
(668,-61,qs),
(637,-75,o),
(621,-82,q),
(612,-82,l),
(594,-74,o),
(584,-33,q),
(582,-12,ls),
(582,-6,o),
(586,-4,qs),
(660,27,o),
(676,84,qs),
(682,109,o),
(682,145,qs),
(682,561,ls),
(682,717,o),
(627,750,qs),
(604,762,o),
(543,762,qs),
(502,762,o),
(442,721,qs),
(366,672,o),
(367,618,qs),
(367,-393,ls),
(367,-448,o),
(317,-483,qs),
(303,-493,o),
(285,-500,qs),
(111,-557,l),
(96,-557,l),
(71,-553,o),
(57,-518,qs),
(51,-504,o),
(49,-489,q),
(49,-473,o),
(61,-465,qs),
(123,-422,l),
(137,-414,o),
(137,-391,qs),
(137,549,ls),
(137,658,o),
(80,678,qs),
(66,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(371,883,o),
(375,860,q),
(375,850,l),
(367,788,l),
(367,770,o),
(377,768,q),
(387,772,l),
(393,778,l),
(450,850,o),
(559,866,qs),
(586,870,o),
(612,870,qs),
(766,870,o),
(854,733,q),
(866,717,o),
(874,698,q),
(903,657,o),
(907,512,qs),
(907,483,o),
(909,453,q),
(909,238,ls),
(909,162,o),
(926,150,qs),
(932,146,o),
(940,145,qs),
(954,145,o),
(981,156,q),
(987,156,l),
(997,143,l),
(1015,114,o),
(1018,88,q),
(1016,78,l),
(1012,76,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
29 28 26 3 5 1 4 1 0 4 2 76 80 78 75 55 1 5 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 4 0 134 0 3 0 4 0 3 4 105 0 5 5 1 97 2 1 1 1 71 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 4 0 134 0 3 0 4 0 3 4 105 0 2 2 71 77 0 5 5 1 97 0 1 1 71 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
67 65 34 21 26 43 38 6 11 27 
CALL[ ]	/* CallFunction */";
};
width = 1040;
}
);
note = uniA783;
unicode = 42883;
},
{
glyphname = uniA785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(729,693,o),
(688,655,q),
(670,641,l),
(645,635,l),
(637,635,o),
(629,633,q),
(578,633,o),
(524,684,qs),
(501,707,o),
(475,707,qs),
(432,707,o),
(399,649,qs),
(366,594,o),
(367,522,qs),
(367,-393,ls),
(367,-448,o),
(317,-483,qs),
(303,-493,o),
(285,-500,qs),
(111,-557,l),
(96,-557,l),
(71,-553,o),
(57,-518,qs),
(51,-504,o),
(49,-489,q),
(49,-473,o),
(61,-465,qs),
(123,-422,l),
(137,-414,o),
(137,-391,qs),
(137,549,ls),
(137,658,o),
(80,678,qs),
(66,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(344,883,qs),
(371,883,o),
(375,862,q),
(375,850,l),
(367,805,o),
(367,788,qs),
(367,765,o),
(381,766,qs),
(391,768,l),
(401,774,o),
(416,791,qs),
(484,871,o),
(584,870,qs),
(656,870,o),
(698,825,qs),
(729,795,o),
(729,752,q),
(729,752,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
13 11 9 3 2 0 1 76 39 1 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 5 3 4 5 113 0 2 0 3 5 2 3 105 0 4 4 0 97 1 1 0 0 71 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 3 5 134 0 2 0 3 5 2 3 105 0 4 4 0 97 1 1 0 0 71 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 3 5 134 0 2 0 3 5 2 3 105 0 1 1 71 77 0 4 4 0 97 0 0 0 71 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
54 53 51 49 34 21 26 35 6 11 26 
CALL[ ]	/* CallFunction */";
};
width = 727;
}
);
note = uniA785;
unicode = 42885;
},
{
glyphname = uniA787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(797,157,o),
(752,98,qs),
(658,-23,o),
(496,-23,qs),
(367,-23,o),
(268,80,qs),
(164,189,o),
(152,346,qs),
(150,364,o),
(150,385,qs),
(150,485,o),
(209,600,qs),
(244,668,o),
(285,709,qs),
(293,717,o),
(295,725,q),
(293,731,l),
(289,735,o),
(276,735,qs),
(41,735,ls),
(12,735,o),
(12,762,qs),
(12,780,o),
(29,811,qs),
(37,829,o),
(51,856,qs),
(86,930,l),
(92,940,o),
(111,940,qs),
(144,940,o),
(158,922,qs),
(162,918,o),
(162,907,qs),
(160,872,l),
(164,852,l),
(170,834,o),
(193,834,qs),
(416,834,l),
(455,834,ls),
(568,834,o),
(711,840,qs),
(740,840,o),
(829,850,q),
(842,848,l),
(862,836,o),
(862,793,qs),
(860,764,l),
(852,745,l),
(846,735,o),
(836,735,qs),
(492,735,ls),
(459,735,o),
(440,709,qs),
(379,631,o),
(379,432,qs),
(379,315,o),
(483,127,o),
(557,127,qs),
(655,127,o),
(752,279,qs),
(760,291,o),
(768,307,qs),
(772,315,o),
(786,315,qs),
(807,313,l),
(836,303,o),
(842,285,q),
(842,276,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
34 33 23 3 2 3 20 1 1 2 67 50 3 3 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 2 2 3 112 4 1 1 1 2 95 0 2 2 71 77 0 0 0 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 3 133 4 1 1 1 2 95 0 2 2 71 77 0 0 0 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 2 3 133 0 2 4 1 1 0 2 1 104 0 0 0 5 97 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
46 40 22 104 37 40 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 909;
}
);
note = uniA787;
unicode = 42887;
},
{
glyphname = uogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,166,o),
(930,139,qs),
(944,98,o),
(981,98,qs),
(993,98,o),
(1016,104,qs),
(1032,108,o),
(1040,72,qs),
(1044,56,o),
(1044,45,qs),
(1044,33,o),
(1038,31,qs),
(1030,29,o),
(934,10,qs),
(834,-10,o),
(719,-160,o),
(719,-246,qs),
(719,-367,o),
(842,-367,qs),
(903,-367,o),
(944,-336,q),
(964,-342,o),
(965,-375,q),
(889,-488,o),
(748,-487,qs),
(543,-487,o),
(543,-303,qs),
(543,-223,o),
(651,-53,o),
(715,-8,qs),
(729,2,o),
(729,14,qs),
(729,57,ls),
(729,80,o),
(705,80,o),
(690,66,qs),
(598,-22,o),
(444,-23,qs),
(317,-23,o),
(274,12,qs),
(127,131,o),
(127,309,qs),
(127,655,ls),
(127,757,o),
(43,758,qs),
(29,758,o),
(29,831,o),
(43,831,qs),
(156,831,o),
(266,850,qs),
(297,854,o),
(317,854,qs),
(362,854,o),
(362,811,q),
(356,713,o),
(356,649,qs),
(356,307,ls),
(356,184,o),
(406,125,qs),
(435,92,o),
(504,92,qs),
(567,92,o),
(637,147,qs),
(690,190,o),
(690,240,qs),
(690,655,ls),
(690,757,o),
(606,758,qs),
(590,758,o),
(590,831,o),
(606,831,qs),
(717,831,o),
(836,850,qs),
(861,854,o),
(874,854,qs),
(927,854,o),
(928,817,q),
(920,723,o),
(920,662,qs),
(920,256,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 2 1 47 1 7 8 58 1 10 7 56 1 9 10 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 8 3 7 3 8 7 128 0 10 0 9 10 9 101 4 1 0 0 71 77 6 1 2 2 1 97 5 1 1 1 71 77 11 1 3 3 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 8 3 7 3 8 7 128 5 1 1 6 1 2 3 1 2 105 0 10 0 9 10 9 101 4 1 0 0 71 77 11 1 3 3 7 97 0 7 7 69 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
76 74 61 59 55 53 18 37 34 18 39 37 34 19 19 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1026;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uring;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (964,0);
ref = uni030A;
}
);
width = 1026;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (997,0);
ref = tildecomb;
}
);
width = 1026;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,785,o),
(12,784,qs),
(-2,784,o),
(-2,856,o),
(12,856,q),
(75,850,o),
(205,850,qs),
(361,850,o),
(424,856,q),
(438,856,o),
(438,784,o),
(424,784,qs),
(354,784,o),
(354,739,qs),
(354,721,o),
(356,713,qs),
(502,256,ls),
(506,242,o),
(514,242,qs),
(520,242,o),
(528,256,q),
(684,707,ls),
(688,719,o),
(688,731,qs),
(688,784,o),
(598,784,qs),
(584,784,o),
(584,856,o),
(598,856,q),
(657,850,o),
(778,850,qs),
(870,850,o),
(934,856,q),
(948,856,o),
(948,784,o),
(934,784,qs),
(836,784,o),
(809,713,qs),
(551,39,l),
(524,-22,o),
(471,-23,qs),
(420,-23,o),
(399,29,qs),
(113,713,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
29 19 2 0 1 1 76 38 14 2 2 74 6 4 3 3 1 1 2 97 5 1 2 2 71 77 0 0 0 69 0 78 35 36 28 35 36 19 33 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 923;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,785,o),
(12,784,qs),
(-2,784,o),
(-2,856,o),
(12,856,q),
(75,850,o),
(205,850,qs),
(361,850,o),
(424,856,q),
(438,856,o),
(438,784,o),
(424,784,qs),
(354,784,o),
(354,739,qs),
(354,721,o),
(360,700,qs),
(502,256,ls),
(506,242,o),
(522,242,o),
(528,256,q),
(651,614,ls),
(655,626,o),
(655,647,o),
(651,659,qs),
(629,713,ls),
(598,785,o),
(541,784,qs),
(525,784,o),
(524,856,o),
(541,856,q),
(600,850,o),
(721,850,qs),
(881,850,o),
(940,856,q),
(956,856,o),
(956,784,o),
(940,784,qs),
(870,784,o),
(870,737,qs),
(870,723,o),
(877,700,qs),
(1018,256,ls),
(1022,242,o),
(1038,242,o),
(1044,256,q),
(1200,707,ls),
(1204,719,o),
(1204,731,qs),
(1204,784,o),
(1114,784,qs),
(1100,784,o),
(1100,856,o),
(1114,856,q),
(1177,850,o),
(1294,850,qs),
(1390,850,o),
(1450,856,q),
(1464,856,o),
(1464,784,o),
(1450,784,qs),
(1352,784,o),
(1325,713,qs),
(1067,39,ls),
(1044,-22,o),
(938,-23,o),
(915,29,qs),
(737,455,l),
(733,467,o),
(717,469,o),
(711,455,qs),
(551,39,ls),
(526,-22,o),
(473,-23,qs),
(424,-23,o),
(399,29,q),
(113,713,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
27 1 0 2 1 76 70 45 22 3 3 74 10 8 7 5 4 5 2 2 3 97 9 6 2 3 3 71 77 1 1 0 0 69 0 78 74 72 69 67 29 35 36 27 35 36 19 23 33 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1456;
}
);
note = w;
unicode = 119;
},
{
glyphname = wcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (1199,0);
ref = uni0302;
}
);
width = 1456;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(874,68,o),
(946,68,qs),
(962,68,o),
(963,-8,o),
(946,-8,q),
(866,0,o),
(727,0,qs),
(577,0,o),
(498,-8,q),
(482,-8,o),
(481,68,o),
(498,68,qs),
(580,68,o),
(580,92,qs),
(580,102,o),
(549,147,qs),
(444,299,ls),
(438,307,o),
(426,307,qs),
(418,307,o),
(410,297,qs),
(299,164,ls),
(252,109,o),
(252,90,qs),
(252,65,o),
(311,68,qs),
(327,68,o),
(328,-8,o),
(311,-8,q),
(231,0,o),
(147,0,qs),
(65,0,o),
(-14,-8,q),
(-30,-8,o),
(-31,68,o),
(-14,68,qs),
(86,68,o),
(141,135,qs),
(346,385,ls),
(356,397,o),
(356,412,qs),
(356,422,o),
(350,434,q),
(129,715,ls),
(76,785,o),
(16,784,qs),
(2,784,o),
(0,856,o),
(16,856,q),
(79,850,o),
(229,850,qs),
(383,850,o),
(442,856,q),
(458,856,o),
(459,784,o),
(442,784,qs),
(381,784,o),
(381,756,qs),
(381,738,o),
(406,702,qs),
(481,596,ls),
(487,586,o),
(500,586,qs),
(510,586,o),
(518,596,qs),
(590,686,ls),
(623,729,o),
(623,752,qs),
(623,785,o),
(551,784,qs),
(535,784,o),
(535,856,o),
(551,856,q),
(610,850,o),
(717,850,qs),
(821,850,o),
(885,856,q),
(899,856,o),
(899,784,o),
(885,784,qs),
(822,784,o),
(766,719,qs),
(584,502,ls),
(574,490,o),
(573,477,qs),
(573,467,o),
(584,455,q),
(811,154,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
68 63 46 24 4 6 0 1 76 38 14 2 1 74 82 58 2 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
5 3 2 3 0 0 1 97 4 1 1 1 71 77 11 9 8 3 6 6 7 97 10 1 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
11 9 8 3 6 10 1 7 6 7 101 5 3 2 3 0 0 1 97 4 1 1 1 71 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
86 84 81 79 75 74 35 36 24 35 36 28 35 36 22 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 948;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,-505,o),
(211,-541,qs),
(178,-553,o),
(141,-553,qs),
(80,-553,o),
(41,-510,qs),
(14,-479,o),
(14,-442,qs),
(14,-381,o),
(74,-350,qs),
(105,-336,o),
(139,-336,qs),
(243,-336,o),
(260,-297,qs),
(338,-115,l),
(344,-97,o),
(344,-63,o),
(338,-45,qs),
(68,713,ls),
(41,785,o),
(-39,784,qs),
(-53,784,o),
(-53,856,o),
(-39,856,q),
(24,850,o),
(164,850,qs),
(311,850,o),
(375,856,q),
(389,856,o),
(389,784,o),
(375,784,qs),
(295,784,o),
(295,737,qs),
(295,723,o),
(303,700,qs),
(455,276,ls),
(461,256,o),
(471,256,qs),
(483,256,o),
(494,279,q),
(659,700,ls),
(663,712,o),
(664,723,q),
(664,784,o),
(543,784,qs),
(527,784,o),
(526,856,o),
(543,856,q),
(602,850,o),
(737,850,qs),
(852,850,o),
(911,856,q),
(927,856,o),
(928,784,o),
(911,784,qs),
(819,784,o),
(786,725,q),
(338,-399,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
14 1 3 0 1 76 33 9 2 1 74 0 3 0 7 0 3 7 128 6 4 2 3 0 0 1 97 5 1 1 1 71 77 0 7 7 8 97 0 8 8 73 8 78 38 39 35 36 21 37 35 36 17 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 882;
}
);
note = y;
unicode = 121;
},
{
glyphname = yacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (838,0);
ref = acutecomb;
}
);
width = 882;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (912,0);
ref = uni0302;
}
);
width = 882;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (874,0);
ref = uni0308;
}
);
width = 882;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(741,76,l),
(739,41,o),
(739,16,qs),
(739,-25,o),
(700,-25,qs),
(690,-25,o),
(604,-10,qs),
(551,0,o),
(512,0,qs),
(70,0,ls),
(29,0,o),
(29,37,qs),
(29,49,o),
(37,68,q),
(393,727,ls),
(401,743,o),
(401,754,qs),
(401,774,o),
(373,774,qs),
(262,774,ls),
(199,774,o),
(137,645,qs),
(92,543,ls),
(88,535,o),
(74,535,qs),
(56,535,o),
(39,547,qs),
(27,555,o),
(25,569,q),
(54,821,o),
(55,825,qs),
(61,868,o),
(86,870,q),
(244,850,o),
(297,850,qs),
(645,850,ls),
(690,850,o),
(690,817,qs),
(690,799,o),
(682,784,qs),
(324,119,l),
(320,113,o),
(319,104,qs),
(319,79,o),
(348,80,qs),
(457,80,ls),
(588,80,o),
(682,285,qs),
(686,295,o),
(709,297,qs),
(717,297,o),
(735,293,q),
(766,282,o),
(766,264,q),
(766,264,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
37 25 2 3 4 11 1 1 0 53 1 5 1 3 76 21 1 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 0 4 3 0 128 0 4 4 2 95 0 2 2 71 77 0 1 1 5 95 0 5 5 69 77 0 0 0 6 97 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 1 0 5 6 1 5 103 0 4 4 2 95 0 2 2 71 77 0 0 0 6 97 0 6 6 69 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
34 55 51 40 55 50 35 7 11 29 
CALL[ ]	/* CallFunction */";
};
width = 768;
}
);
note = z;
unicode = 122;
},
{
glyphname = zacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (781,0);
ref = acutecomb;
}
);
width = 768;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (853,0);
ref = uni030C;
}
);
width = 768;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = zdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (852,0);
ref = uni0307;
}
);
width = 768;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = eth.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,264,o),
(399,150,qs),
(460,62,o),
(543,61,qs),
(637,61,o),
(694,182,qs),
(745,288,o),
(745,444,qs),
(745,608,o),
(672,711,qs),
(617,793,o),
(543,793,qs),
(465,793,o),
(399,709,qs),
(319,604,o),
(319,444,q),
(319,444,l)
);
},
{
closed = 1;
nodes = (
(66,599,o),
(170,717,qs),
(307,871,o),
(532,870,q),
(456,946,o),
(332,1026,qs),
(316,1036,o),
(287,1036,o),
(268,1022,qs),
(125,907,ls),
(111,897,o),
(16,1044,o),
(16,1059,qs),
(16,1067,o),
(25,1063,qs),
(88,1030,o),
(119,1028,qs),
(142,1028,o),
(156,1040,qs),
(188,1067,ls),
(206,1081,o),
(207,1098,o),
(188,1108,qs),
(98,1155,o),
(66,1169,qs),
(48,1177,o),
(92,1276,o),
(113,1268,qs),
(222,1225,o),
(283,1188,q),
(303,1178,o),
(330,1178,o),
(354,1196,qs),
(649,1425,ls),
(661,1435,o),
(764,1309,o),
(772,1292,q),
(774,1282,o),
(766,1284,qs),
(649,1309,ls),
(635,1311,o),
(618,1300,q),
(432,1153,ls),
(414,1139,o),
(414,1118,o),
(436,1106,qs),
(770,909,o),
(893,733,qs),
(999,579,o),
(999,451,qs),
(999,230,o),
(872,100,qs),
(749,-25,o),
(543,-23,qs),
(336,-23,o),
(203,100,qs),
(66,232,o),
(66,449,q),
(66,449,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
36 1 2 74 60 1 3 73 0 4 6 5 6 4 5 131 0 0 0 6 4 0 6 109 0 5 0 3 5 3 101 0 1 1 2 97 0 2 2 33 1 78 72 71 68 67 59 57 44 43 39 38 35 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1073;
}
);
note = eth.alt;
},
{
glyphname = uniA77A.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,285,o),
(895,164,qs),
(877,137,o),
(854,115,q),
(725,-24,o),
(520,-25,qs),
(364,-25,o),
(236,72,qs),
(205,95,o),
(182,119,qs),
(104,197,o),
(76,309,qs),
(66,350,o),
(66,385,qs),
(66,506,o),
(150,610,qs),
(189,655,o),
(229,680,qs),
(247,690,o),
(248,702,qs),
(248,720,o),
(215,727,qs),
(86,752,o),
(39,842,qs),
(21,879,o),
(20,918,qs),
(20,1006,o),
(147,1090,qs),
(180,1113,o),
(219,1130,q),
(229,1133,l),
(249,1131,o),
(266,1102,q),
(272,1083,l),
(270,1071,ls),
(270,1069,o),
(266,1067,qs),
(223,1040,l),
(182,1009,o),
(184,977,qs),
(184,930,o),
(242,901,qs),
(281,883,o),
(342,877,qs),
(408,871,o),
(547,870,qs),
(684,870,o),
(778,817,qs),
(794,809,o),
(807,799,qs),
(909,719,o),
(946,629,qs),
(981,547,o),
(981,422,q),
(981,422,l)
);
},
{
closed = 1;
nodes = (
(786,548,o),
(731,623,qs),
(713,648,o),
(690,662,qs),
(608,717,o),
(524,717,qs),
(481,717,ls),
(456,717,o),
(442,709,qs),
(381,670,o),
(336,584,qs),
(295,508,o),
(295,442,qs),
(295,264,o),
(358,174,q),
(360,170,o),
(365,164,qs),
(414,96,o),
(485,72,qs),
(514,62,o),
(541,61,qs),
(627,61,o),
(700,152,qs),
(708,162,o),
(717,174,qs),
(786,272,o),
(786,442,q),
(786,442,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
23 20 2 1 74 0 3 0 0 3 0 101 0 2 2 1 97 0 1 1 33 2 78 77 74 62 60 49 47 39 4 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1042;
}
);
note = uniA77A.alt;
},
{
glyphname = eogonek.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,702,o),
(508,791,o),
(463,791,qs),
(400,791,o),
(309,709,o),
(309,653,qs),
(309,626,o),
(346,627,qs),
(549,627,ls),
(586,626,o),
(586,651,q),
(586,651,l)
);
},
{
closed = 1;
nodes = (
(809,536,o),
(719,537,qs),
(334,537,ls),
(297,537,o),
(297,510,qs),
(297,395,o),
(348,231,o),
(469,123,o),
(561,123,qs),
(645,123,o),
(727,178,qs),
(745,190,o),
(803,117,o),
(791,106,qs),
(736,57,o),
(549,-37,o),
(430,-164,o),
(432,-246,qs),
(432,-367,o),
(555,-367,qs),
(616,-367,o),
(657,-336,q),
(677,-342,o),
(678,-375,q),
(602,-488,o),
(461,-487,qs),
(256,-487,o),
(256,-303,qs),
(256,-168,o),
(401,-45,qs),
(428,-22,o),
(399,-18,qs),
(297,0,o),
(139,158,o),
(68,334,o),
(68,436,qs),
(68,606,o),
(301,870,o),
(461,870,qs),
(633,870,o),
(809,678,o),
(809,612,q),
(809,612,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
32 30 2 2 73 0 5 4 6 4 5 6 131 0 3 0 4 5 3 4 109 0 6 0 0 1 6 0 107 0 1 2 2 1 93 0 1 1 2 97 0 2 1 2 81 52 41 36 43 37 35 49 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = eogonek.alt;
},
{
glyphname = f.alt;
kernLeft = f;
kernRight = f.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(119,819,o),
(164,887,o),
(164,932,qs),
(164,1059,o),
(287,1339,o),
(475,1487,o),
(590,1487,qs),
(666,1487,o),
(784,1403,o),
(784,1346,qs),
(784,1303,o),
(731,1239,o),
(682,1239,qs),
(614,1239,o),
(559,1374,o),
(518,1374,qs),
(467,1374,o),
(393,1198,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(594,850,ls),
(608,850,o),
(608,745,o),
(594,745,qs),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(293,0,qs),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,135,q),
(164,135,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 1 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 4 5 5 6 117 0 8 4 3 8 93 9 1 3 0 4 6 3 4 107 0 5 0 7 5 7 102 2 1 0 0 1 97 0 1 1 33 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 4 5 4 6 5 131 0 8 4 3 8 93 9 1 3 0 4 6 3 4 107 0 5 0 7 5 7 102 2 1 0 0 1 97 0 1 1 33 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
49 46 21 36 33 36 50 35 35 36 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = f.alt;
},
{
glyphname = uni0294.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,758,o),
(592,707,qs),
(426,625,ls),
(354,588,o),
(354,567,qs),
(352,514,o),
(371,440,q),
(369,415,o),
(317,416,qs),
(301,416,o),
(297,422,qs),
(217,569,o),
(217,649,qs),
(217,686,o),
(246,752,o),
(297,795,o),
(334,813,qs),
(438,866,ls),
(563,929,o),
(563,979,qs),
(563,1036,o),
(477,1116,o),
(358,1126,qs),
(279,1133,ls),
(248,1135,o),
(174,1202,o),
(174,1260,qs),
(174,1303,o),
(246,1362,o),
(295,1362,qs),
(389,1362,o),
(563,1241,o),
(694,1045,o),
(694,936,q),
(694,936,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 2 1 2 136 0 1 0 0 1 93 0 1 1 0 98 0 0 1 0 82 31 20 35 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni0294.alt;
},
{
glyphname = j.alt;
kernLeft = j.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,1116,o),
(313,1075,qs),
(274,1048,o),
(227,1049,qs),
(153,1049,o),
(111,1104,qs),
(82,1141,o),
(82,1188,qs),
(82,1256,o),
(139,1296,qs),
(178,1325,o),
(227,1325,qs),
(301,1325,o),
(344,1270,qs),
(373,1231,o),
(373,1188,q),
(373,1188,l)
);
},
{
closed = 1;
nodes = (
(367,764,o),
(367,682,qs),
(367,139,ls),
(367,-70,o),
(328,-322,o),
(227,-494,o),
(100,-555,o),
(49,-555,qs),
(0,-555,o),
(-72,-502,o),
(-72,-446,qs),
(-72,-413,o),
(-29,-358,o),
(0,-358,qs),
(39,-358,o),
(61,-449,o),
(88,-449,qs),
(117,-449,o),
(137,-295,o),
(137,-229,qs),
(137,557,ls),
(137,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(377,883,o),
(375,856,q),
(375,856,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 4 5 5 6 114 0 3 0 4 6 3 4 105 0 1 1 0 97 0 0 0 68 77 0 2 2 71 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 1 1 0 97 0 0 0 68 77 0 2 2 71 77 0 5 5 7 98 0 7 7 73 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 6 4 5 4 6 5 128 0 0 0 1 2 0 1 105 0 3 0 4 6 3 4 105 0 2 2 71 77 0 5 5 7 98 0 7 7 73 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 33 36 34 21 21 38 35 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = j.alt;
},
{
glyphname = eth.nordic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(969,217,o),
(727,-23,o),
(518,-23,qs),
(334,-23,o),
(66,229,o),
(66,424,qs),
(68,608,o),
(317,870,o),
(516,870,qs),
(586,870,o),
(645,854,q),
(627,907,o),
(602,961,qs),
(567,1039,o),
(522,1110,q),
(328,969,l),
(310,959,o),
(283,995,qs),
(256,1034,o),
(272,1044,q),
(469,1186,l),
(379,1303,o),
(256,1407,qs),
(240,1421,o),
(289,1493,o),
(305,1485,qs),
(401,1438,o),
(588,1270,q),
(776,1407,l),
(790,1415,o),
(844,1339,o),
(831,1331,qs),
(655,1206,l),
(809,1052,o),
(895,842,qs),
(969,651,o),
(969,426,q),
(969,426,l)
);
},
{
closed = 1;
nodes = (
(715,594,o),
(676,750,q),
(604,793,o),
(518,793,qs),
(436,793,o),
(319,580,o),
(319,403,qs),
(319,270,o),
(424,61,o),
(608,61,o),
(715,275,o),
(715,420,q),
(715,420,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
22 16 9 4 4 1 74 26 1 0 73 0 3 0 0 3 0 101 0 2 2 1 97 0 1 1 33 2 78 47 45 41 40 35 33 29 27 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1030;
}
);
note = eth.nordic;
},
{
glyphname = thorn.nordic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(958,246,o),
(768,-23,o),
(526,-23,qs),
(436,-23,o),
(399,-4,qs),
(391,0,o),
(385,0,qs),
(367,0,o),
(367,-27,qs),
(367,-397,ls),
(367,-483,o),
(508,-483,qs),
(522,-483,o),
(522,-559,o),
(508,-559,q),
(410,-551,o),
(129,-551,o),
(33,-559,q),
(17,-559,o),
(16,-483,o),
(33,-483,qs),
(137,-483,o),
(137,-399,qs),
(137,1161,ls),
(137,1286,o),
(45,1286,qs),
(29,1286,o),
(29,1360,o),
(45,1360,qs),
(96,1360,o),
(231,1427,qs),
(286,1454,o),
(315,1477,qs),
(327,1487,o),
(342,1487,qs),
(375,1487,o),
(373,1454,qs),
(367,1345,o),
(367,1286,qs),
(367,815,ls),
(367,790,o),
(381,791,qs),
(393,791,o),
(408,809,qs),
(439,846,o),
(492,860,qs),
(523,868,o),
(559,870,q),
(733,870,o),
(958,659,o),
(958,475,q),
(958,475,l)
);
},
{
closed = 1;
nodes = (
(725,614,o),
(600,770,o),
(518,770,qs),
(432,770,o),
(379,686,qs),
(367,668,o),
(367,616,qs),
(367,178,ls),
(367,59,o),
(545,59,qs),
(621,59,o),
(725,274,o),
(725,401,q),
(725,401,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
36 1 2 73 0 1 11 0 11 1 0 131 0 2 3 2 137 0 6 7 1 5 9 6 5 109 0 11 0 0 4 11 0 109 0 4 0 3 2 4 3 109 0 8 8 33 77 0 10 10 9 97 0 9 9 33 10 78 63 61 56 54 49 47 35 35 20 19 34 21 21 36 34 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = thorn.nordic;
},
{
glyphname = i.sc1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (47,18);
ref = dotaccent;
},
{
ref = i.sc;
}
);
width = 624;
}
);
note = i.sc1;
},
{
glyphname = f_eth;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(901,264,o),
(983,150,qs),
(1044,62,o),
(1126,61,qs),
(1220,61,o),
(1278,182,qs),
(1329,288,o),
(1327,444,qs),
(1327,608,o),
(1255,711,qs),
(1200,793,o),
(1126,793,qs),
(1048,793,o),
(983,709,qs),
(901,604,o),
(901,444,q),
(901,444,l)
);
},
{
closed = 1;
nodes = (
(649,599,o),
(754,717,qs),
(891,871,o),
(1114,870,q),
(1038,946,o),
(915,1026,qs),
(899,1036,o),
(870,1036,o),
(852,1022,qs),
(668,877,ls),
(654,867,o),
(600,948,qs),
(559,1014,o),
(559,1026,qs),
(559,1034,o),
(567,1030,qs),
(630,997,o),
(662,997,qs),
(685,997,o),
(698,1010,q),
(770,1067,ls),
(788,1081,o),
(788,1096,o),
(770,1108,qs),
(758,1116,o),
(705,1143,qs),
(687,1151,o),
(733,1251,o),
(752,1243,qs),
(818,1212,o),
(866,1188,qs),
(886,1178,o),
(913,1178,o),
(938,1196,qs),
(1233,1425,ls),
(1245,1435,o),
(1300,1364,qs),
(1345,1309,o),
(1356,1292,q),
(1356,1282,o),
(1350,1284,q),
(1233,1309,ls),
(1219,1311,o),
(1200,1300,q),
(1016,1153,ls),
(998,1139,o),
(997,1118,o),
(1020,1106,qs),
(1354,909,o),
(1477,733,qs),
(1583,579,o),
(1581,451,qs),
(1581,230,o),
(1456,100,qs),
(1333,-25,o),
(1124,-23,qs),
(917,-23,o),
(786,100,qs),
(649,232,o),
(649,449,q),
(649,449,l)
);
},
{
closed = 1;
nodes = (
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(119,819,o),
(164,887,o),
(164,932,qs),
(164,1059,o),
(287,1339,o),
(475,1487,o),
(590,1487,qs),
(662,1487,o),
(717,1452,qs),
(772,1419,o),
(772,1372,qs),
(772,1329,o),
(719,1264,o),
(670,1264,qs),
(611,1264,o),
(555,1374,o),
(518,1374,qs),
(467,1374,o),
(393,1198,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(573,850,ls),
(587,850,o),
(588,745,o),
(573,745,qs),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,135,q),
(164,135,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 61 36 3 14 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 13 3 12 12 13 117 0 15 11 10 15 93 16 1 10 0 11 6 10 11 109 0 0 0 6 4 0 6 109 0 5 0 3 13 5 3 109 0 12 0 14 12 14 102 9 7 2 1 1 2 97 0 2 2 33 77 9 7 2 1 1 8 97 0 8 8 33 77 0 4 4 34 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 13 3 12 3 13 12 131 0 15 11 10 15 93 16 1 10 0 11 6 10 11 109 0 0 0 6 4 0 6 109 0 5 0 3 13 5 3 109 0 12 0 14 12 14 102 9 7 2 1 1 2 97 0 2 2 33 77 9 7 2 1 1 8 97 0 8 8 33 77 0 4 4 34 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 4 6 5 6 4 5 131 0 13 3 12 3 13 12 131 0 15 11 10 15 93 16 1 10 0 11 6 10 11 109 0 0 0 6 4 0 6 109 0 5 0 3 13 5 3 109 0 12 0 14 12 14 102 9 7 2 1 1 2 97 0 2 2 33 77 9 7 2 1 1 8 97 0 8 8 33 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
127 124 122 121 116 114 109 107 106 104 100 97 95 93 90 88 85 84 80 79 74 73 70 69 60 58 45 44 39 38 35 17 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1656;
}
);
note = f_eth;
},
{
glyphname = f_f_udieresis;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1970,1100,o),
(1911,1065,qs),
(1882,1049,o),
(1845,1049,qs),
(1761,1049,o),
(1729,1110,qs),
(1717,1135,o),
(1716,1169,qs),
(1716,1243,o),
(1774,1280,qs),
(1807,1300,o),
(1845,1300,qs),
(1913,1300,o),
(1950,1245,qs),
(1970,1217,o),
(1970,1180,q),
(1970,1180,l)
);
},
{
closed = 1;
nodes = (
(1620,1100,o),
(1561,1065,qs),
(1532,1049,o),
(1495,1049,qs),
(1409,1049,o),
(1378,1110,qs),
(1366,1135,o),
(1366,1169,qs),
(1366,1243,o),
(1423,1280,qs),
(1456,1300,o),
(1495,1300,qs),
(1563,1300,o),
(1599,1245,qs),
(1620,1215,o),
(1620,1180,q),
(1620,1180,l)
);
},
{
closed = 1;
nodes = (
(966,745,o),
(967,715,qs),
(967,143,ls),
(967,67,o),
(1100,68,qs),
(1114,68,o),
(1114,-8,o),
(1100,-8,q),
(1018,0,o),
(864,0,qs),
(710,0,o),
(629,-8,q),
(615,-8,o),
(614,68,o),
(629,68,qs),
(738,68,o),
(737,143,qs),
(737,711,ls),
(737,746,o),
(707,745,qs),
(424,745,ls),
(393,745,o),
(393,715,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(540,68,o),
(541,-8,o),
(526,-8,q),
(444,0,o),
(291,0,qs),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,711,ls),
(164,746,o),
(133,745,qs),
(72,745,ls),
(58,745,o),
(57,819,o),
(72,819,qs),
(164,819,o),
(164,932,qs),
(164,1071,o),
(317,1333,o),
(551,1466,o),
(674,1466,qs),
(832,1466,o),
(903,1370,q),
(903,1368,o),
(905,1368,q),
(928,1393,o),
(954,1413,qs),
(1048,1487,o),
(1163,1487,qs),
(1239,1487,o),
(1360,1403,o),
(1360,1346,qs),
(1360,1303,o),
(1305,1239,o),
(1257,1239,qs),
(1189,1239,o),
(1133,1374,o),
(1092,1374,qs),
(1041,1374,o),
(967,1198,o),
(967,1049,qs),
(967,881,ls),
(967,850,o),
(997,850,qs),
(1167,850,ls),
(1253,850,o),
(1421,854,o),
(1473,854,qs),
(1522,854,o),
(1520,811,qs),
(1514,670,o),
(1511,649,q),
(1511,307,ls),
(1511,184,o),
(1563,125,qs),
(1592,92,o),
(1661,92,qs),
(1724,92,o),
(1792,147,qs),
(1845,190,o),
(1845,240,qs),
(1845,655,ls),
(1845,757,o),
(1761,758,qs),
(1745,758,o),
(1747,831,o),
(1761,831,qs),
(1872,831,o),
(1991,850,qs),
(2016,854,o),
(2030,854,qs),
(2085,854,o),
(2083,817,qs),
(2075,686,o),
(2075,662,qs),
(2075,256,ls),
(2075,166,o),
(2085,139,qs),
(2099,98,o),
(2138,98,qs),
(2150,98,o),
(2171,104,qs),
(2189,108,o),
(2198,72,q),
(2200,58,o),
(2202,49,q),
(2202,33,o),
(2185,29,o),
(2089,10,qs),
(2062,6,o),
(2038,0,qs),
(1995,-8,o),
(1923,-31,qs),
(1911,-35,o),
(1901,-35,qs),
(1887,-35,o),
(1884,10,qs),
(1884,57,ls),
(1884,80,o),
(1862,80,o),
(1845,66,q),
(1751,-22,o),
(1599,-23,qs),
(1472,-23,o),
(1430,12,qs),
(1283,131,o),
(1282,309,qs),
(1282,641,ls),
(1282,743,o),
(1198,745,qs),
(997,745,ls)
);
},
{
closed = 1;
nodes = (
(740,1356,o),
(602,1356,qs),
(489,1356,o),
(393,1176,o),
(393,977,qs),
(393,881,ls),
(393,850,o),
(424,850,qs),
(705,850,ls),
(738,850,o),
(737,932,qs),
(738,1055,o),
(797,1194,q),
(797,1194,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
166 145 119 92 4 16 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 98 values pushed */
0 6 20 8 20 6 8 131 0 15 1 0 14 15 117 0 18 10 4 18 93 0 11 0 10 9 11 10 110 23 19 29 3 4 27 13 2 9 1 4 9 107 3 1 1 2 1 0 28 1 0 110 0 28 0 17 16 28 17 109 0 14 0 16 14 16 102 0 7 7 33 77 26 24 22 3 20 20 21 97 25 1 21 21 33 77 12 1 8 8 5 97 0 5 5 33 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
0 6 20 8 20 6 8 131 0 15 1 0 1 15 0 131 0 18 10 4 18 93 0 11 0 10 9 11 10 110 23 19 29 3 4 27 13 2 9 1 4 9 107 3 1 1 2 1 0 28 1 0 110 0 28 0 17 16 28 17 109 0 14 0 16 14 16 102 0 7 7 33 77 26 24 22 3 20 20 21 97 25 1 21 21 33 77 12 1 8 8 5 97 0 5 5 33 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 61 values pushed */
35 34 187 185 181 178 170 168 165 163 159 158 155 152 149 147 144 142 138 137 134 131 129 128 124 122 116 114 110 108 107 105 101 95 88 86 81 79 77 76 73 72 65 63 50 48 45 44 42 40 34 174 35 173 38 39 38 35 30 7 26 
CALL[ ]	/* CallFunction */";
};
width = 2183;
}
);
note = f_f_udieresis;
},
{
glyphname = f_j;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(958,-47,o),
(946,-129,qs),
(921,-303,o),
(764,-518,o),
(631,-547,qs),
(594,-555,o),
(559,-555,qs),
(496,-555,o),
(442,-512,qs),
(399,-477,o),
(397,-426,qs),
(397,-369,o),
(449,-340,qs),
(476,-326,o),
(508,-324,qs),
(555,-324,o),
(588,-377,qs),
(631,-451,o),
(668,-449,qs),
(715,-449,o),
(723,-358,qs),
(727,-305,o),
(727,-229,qs),
(727,678,ls),
(727,746,o),
(672,745,qs),
(424,745,ls),
(393,745,o),
(393,715,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(540,68,o),
(541,-8,o),
(526,-8,q),
(446,0,o),
(145,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,711,ls),
(164,746,o),
(133,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(119,819,o),
(147,860,qs),
(163,887,o),
(164,932,qs),
(164,1077,o),
(295,1331,o),
(532,1487,o),
(694,1487,qs),
(813,1487,o),
(885,1436,qs),
(938,1397,o),
(938,1298,o),
(866,1227,o),
(825,1223,q),
(753,1223,o),
(713,1274,qs),
(668,1331,ls),
(633,1374,o),
(496,1374,o),
(393,1217,o),
(393,1047,qs),
(393,881,ls),
(393,850,o),
(424,850,qs),
(682,850,ls),
(832,850,o),
(920,879,qs),
(932,883,o),
(936,883,qs),
(965,883,o),
(965,842,q),
(959,748,o),
(958,678,qs),
(958,139,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
48 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 11 13 12 13 11 12 131 0 0 1 3 1 0 3 131 0 3 2 2 3 115 0 13 0 12 8 13 12 109 0 5 1 6 5 93 10 1 6 0 1 0 6 1 107 0 2 0 4 2 4 102 9 1 7 7 8 97 0 8 8 33 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 11 13 12 13 11 12 131 0 0 1 3 1 0 3 131 0 3 2 1 3 2 129 0 13 0 12 8 13 12 109 0 5 1 6 5 93 10 1 6 0 1 0 6 1 107 0 2 0 4 2 4 102 9 1 7 7 8 97 0 8 8 33 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
77 75 69 67 65 63 58 55 52 50 20 19 50 22 37 19 20 51 19 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1087;
}
);
note = f_j;
},
{
glyphname = f_odieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1298,604,o),
(1227,713,qs),
(1174,795,o),
(1102,793,qs),
(1020,793,o),
(963,688,qs),
(904,579,o),
(901,420,qs),
(901,236,o),
(975,133,qs),
(1026,61,o),
(1100,61,qs),
(1194,61,o),
(1249,174,qs),
(1298,275,o),
(1298,420,q),
(1298,420,l)
);
},
{
closed = 1;
nodes = (
(1552,217,o),
(1430,94,qs),
(1311,-25,o),
(1102,-23,qs),
(918,-23,o),
(788,98,qs),
(649,229,o),
(649,424,qs),
(649,594,o),
(760,721,q),
(772,733,o),
(782,745,q),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,135,qs),
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(119,819,o),
(164,887,o),
(164,932,qs),
(164,1059,o),
(287,1339,o),
(475,1487,o),
(590,1487,qs),
(666,1487,o),
(784,1403,o),
(784,1346,qs),
(784,1303,o),
(731,1239,o),
(682,1239,qs),
(614,1239,o),
(559,1374,o),
(518,1374,qs),
(467,1374,o),
(393,1198,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(956,850,l),
(1022,870,o),
(1100,870,qs),
(1317,870,o),
(1450,713,qs),
(1552,590,o),
(1552,426,q),
(1552,426,l)
);
},
{
closed = 1;
nodes = (
(1055,1100,o),
(993,1065,qs),
(964,1049,o),
(930,1049,qs),
(844,1049,o),
(813,1110,qs),
(801,1135,o),
(801,1169,qs),
(801,1243,o),
(856,1280,qs),
(889,1300,o),
(930,1300,qs),
(998,1300,o),
(1032,1245,q),
(1055,1215,o),
(1055,1180,q),
(1055,1180,l)
);
},
{
closed = 1;
nodes = (
(1405,1100,o),
(1343,1065,qs),
(1314,1049,o),
(1280,1049,qs),
(1196,1049,o),
(1163,1110,qs),
(1151,1135,o),
(1151,1169,qs),
(1151,1243,o),
(1206,1280,qs),
(1239,1300,o),
(1280,1300,qs),
(1348,1300,o),
(1382,1245,q),
(1405,1217,o),
(1405,1180,q),
(1405,1180,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
61 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 5 15 14 4 5 117 0 7 3 8 7 93 12 1 8 0 3 2 8 3 107 0 1 0 2 15 1 2 109 17 1 15 16 1 14 4 15 14 109 0 4 0 6 4 6 102 11 9 2 0 0 13 97 0 13 13 33 77 11 9 2 0 0 10 97 0 10 10 33 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 5 15 14 15 5 14 131 0 7 3 8 7 93 12 1 8 0 3 2 8 3 107 0 1 0 2 15 1 2 109 17 1 15 16 1 14 4 15 14 109 0 4 0 6 4 6 102 11 9 2 0 0 13 97 0 13 13 33 77 11 9 2 0 0 10 97 0 10 10 33 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
113 111 105 103 96 94 88 86 79 77 70 68 65 63 60 59 55 54 50 21 36 33 36 33 39 38 35 18 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1613;
}
);
note = f_odieresis;
},
{
glyphname = f_thorn;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(430,0,o),
(154,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,135,qs),
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(115,819,o),
(164,883,o),
(164,932,qs),
(164,1077,o),
(293,1329,o),
(530,1487,o),
(674,1487,qs),
(783,1487,o),
(846,1440,q),
(881,1456,o),
(920,1487,o),
(934,1487,qs),
(965,1487,o),
(965,1454,qs),
(959,1343,o),
(958,1286,qs),
(958,825,ls),
(958,796,o),
(987,809,o),
(991,811,q),
(1057,870,o),
(1180,870,qs),
(1340,870,o),
(1444,793,qs),
(1569,699,o),
(1569,508,qs),
(1569,244,o),
(1327,92,qs),
(1227,29,o),
(983,-12,qs),
(958,-16,o),
(958,-45,qs),
(958,-393,ls),
(958,-473,o),
(877,-500,qs),
(702,-557,ls),
(673,-567,o),
(649,-518,qs),
(631,-481,o),
(653,-465,qs),
(715,-422,ls),
(729,-412,o),
(729,-391,qs),
(729,1161,ls),
(729,1261,o),
(682,1323,qs),
(643,1372,o),
(569,1374,qs),
(493,1374,o),
(393,1204,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(584,850,ls),
(600,850,o),
(600,745,o),
(584,745,q),
(584,745,l)
);
},
{
closed = 1;
nodes = (
(1315,779,o),
(1137,778,qs),
(1033,778,o),
(971,688,q),
(959,663,o),
(958,625,qs),
(958,100,ls),
(958,82,o),
(979,82,qs),
(987,82,l),
(1118,98,o),
(1198,195,qs),
(1315,336,o),
(1315,457,q),
(1315,457,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
73 49 2 3 73 0 11 7 6 7 11 6 131 0 5 0 6 5 93 10 1 6 0 0 2 6 0 107 0 12 0 2 1 12 2 109 0 1 4 1 3 1 3 101 9 1 7 7 8 97 0 8 8 33 7 78 96 94 89 87 82 80 77 75 72 69 67 66 63 60 58 57 52 50 46 45 37 35 36 50 13 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1636;
}
);
note = f_thorn;
},
{
glyphname = f_udieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1397,1100,o),
(1337,1065,qs),
(1308,1049,o),
(1272,1049,qs),
(1188,1049,o),
(1155,1110,qs),
(1143,1135,o),
(1143,1169,qs),
(1143,1243,o),
(1200,1280,qs),
(1233,1300,o),
(1272,1300,qs),
(1340,1300,o),
(1376,1245,qs),
(1397,1217,o),
(1397,1180,q),
(1397,1180,l)
);
},
{
closed = 1;
nodes = (
(1047,1100,o),
(987,1065,qs),
(958,1049,o),
(922,1049,qs),
(836,1049,o),
(807,1110,qs),
(795,1135,o),
(793,1169,qs),
(793,1243,o),
(850,1280,qs),
(883,1300,o),
(922,1300,qs),
(990,1300,o),
(1026,1245,qs),
(1047,1215,o),
(1047,1180,q),
(1047,1180,l)
);
},
{
closed = 1;
nodes = (
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,135,qs),
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(119,819,o),
(164,887,o),
(164,932,qs),
(164,1059,o),
(287,1339,o),
(475,1487,o),
(590,1487,qs),
(666,1487,o),
(784,1403,o),
(784,1346,qs),
(784,1303,o),
(731,1239,o),
(682,1239,qs),
(614,1239,o),
(559,1374,o),
(518,1374,qs),
(467,1374,o),
(393,1198,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(594,850,ls),
(680,850,o),
(850,854,o),
(948,854,o),
(946,811,qs),
(940,670,o),
(938,649,q),
(938,307,ls),
(938,184,o),
(989,125,qs),
(1018,92,o),
(1087,92,qs),
(1150,92,o),
(1219,147,qs),
(1272,190,o),
(1274,240,q),
(1274,655,ls),
(1274,757,o),
(1190,758,qs),
(1174,758,o),
(1174,831,o),
(1190,831,qs),
(1301,831,o),
(1417,850,qs),
(1442,854,o),
(1456,854,qs),
(1511,854,o),
(1509,817,qs),
(1501,686,o),
(1501,662,qs),
(1501,256,ls),
(1501,166,o),
(1511,139,qs),
(1525,98,o),
(1565,98,qs),
(1577,98,o),
(1597,104,qs),
(1615,108,o),
(1624,72,q),
(1626,58,o),
(1628,49,q),
(1628,33,o),
(1622,31,qs),
(1614,29,o),
(1516,10,qs),
(1489,6,o),
(1464,0,qs),
(1421,-10,o),
(1352,-31,qs),
(1340,-35,o),
(1327,-35,qs),
(1313,-35,o),
(1313,10,qs),
(1313,57,ls),
(1313,80,o),
(1288,80,o),
(1274,66,qs),
(1178,-22,o),
(1026,-23,qs),
(899,-23,o),
(856,12,qs),
(709,131,o),
(711,309,qs),
(711,641,ls),
(711,745,o),
(627,745,q),
(627,745,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
137 93 59 3 16 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
0 6 19 8 19 6 8 131 0 15 1 0 14 15 117 0 17 10 4 17 93 0 11 0 10 9 11 10 110 18 22 2 4 13 1 9 1 4 9 109 3 1 1 2 1 0 14 1 0 110 0 14 0 16 14 16 102 0 7 7 33 77 21 1 19 19 20 97 0 20 20 33 77 12 1 8 8 5 97 0 5 5 33 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 6 19 8 19 6 8 131 0 15 1 0 1 15 0 131 0 17 10 4 17 93 0 11 0 10 9 11 10 110 18 22 2 4 13 1 9 1 4 9 109 3 1 1 2 1 0 14 1 0 110 0 14 0 16 14 16 102 0 7 7 33 77 21 1 19 19 20 97 0 20 20 33 77 12 1 8 8 5 97 0 5 5 33 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
35 34 141 139 136 135 131 130 127 124 122 121 116 114 110 108 107 105 101 96 89 87 82 80 78 77 74 73 66 64 50 48 45 44 42 40 34 146 35 144 38 39 38 35 23 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1609;
}
);
note = f_udieresis;
},
{
glyphname = uniFB00;
kernLeft = f;
kernRight = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1470,1296,o),
(1395,1223,o),
(1358,1223,qs),
(1270,1223,o),
(1235,1274,qs),
(1186,1348,ls),
(1170,1375,o),
(1133,1374,qs),
(1059,1374,o),
(967,1196,o),
(967,1004,qs),
(967,881,ls),
(967,850,o),
(997,850,qs),
(1167,850,ls),
(1181,850,o),
(1182,745,o),
(1167,745,qs),
(997,745,ls),
(966,745,o),
(967,715,qs),
(967,143,ls),
(967,67,o),
(1100,68,qs),
(1114,68,o),
(1114,-8,o),
(1100,-8,q),
(1018,0,o),
(864,0,qs),
(710,0,o),
(629,-8,q),
(615,-8,o),
(614,68,o),
(629,68,qs),
(738,68,o),
(737,143,qs),
(737,711,ls),
(737,746,o),
(707,745,qs),
(424,745,ls),
(393,745,o),
(393,715,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(540,68,o),
(541,-8,o),
(526,-8,q),
(444,0,o),
(291,0,qs),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,711,ls),
(164,746,o),
(133,745,qs),
(72,745,ls),
(58,745,o),
(57,819,o),
(72,819,qs),
(164,819,o),
(164,932,qs),
(164,1071,o),
(317,1333,o),
(551,1466,o),
(674,1466,qs),
(832,1466,o),
(903,1370,qs),
(915,1354,l),
(1071,1487,o),
(1247,1487,qs),
(1360,1487,o),
(1470,1400,o),
(1470,1343,q),
(1470,1343,l)
);
},
{
closed = 1;
nodes = (
(742,1356,o),
(602,1356,qs),
(489,1356,o),
(393,1176,o),
(393,977,qs),
(393,881,ls),
(393,850,o),
(424,850,qs),
(705,850,ls),
(738,850,o),
(737,932,qs),
(738,1075,o),
(799,1190,q),
(799,1190,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
5 1 14 16 1 76 51 30 2 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 14 16 12 13 14 114 0 2 3 3 2 89 0 13 13 0 97 0 0 0 70 77 0 16 16 1 97 0 1 1 70 77 11 7 2 3 3 12 95 15 1 12 12 71 77 10 8 6 3 4 4 5 97 9 1 5 5 69 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 14 16 12 16 14 12 128 0 2 3 3 2 89 0 13 13 0 97 0 0 0 70 77 0 16 16 1 97 0 1 1 70 77 11 7 2 3 3 12 95 15 1 12 12 71 77 10 8 6 3 4 4 5 97 9 1 5 5 69 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 14 16 12 16 14 12 128 0 2 3 3 2 89 10 8 6 3 4 9 1 5 4 5 101 0 13 13 0 97 0 0 0 70 77 0 16 16 1 97 0 1 1 70 77 11 7 2 3 3 12 95 15 1 12 12 71 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 14 16 12 16 14 12 128 0 1 0 16 14 1 16 105 0 2 3 3 2 89 10 8 6 3 4 9 1 5 4 5 101 0 13 13 0 97 0 0 0 70 77 11 7 2 3 3 12 95 15 1 12 12 71 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
91 89 85 82 76 74 71 69 65 62 60 58 55 53 50 48 19 51 35 36 19 50 20 35 34 17 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1155;
}
);
note = uniFB00;
unicode = 64256;
},
{
glyphname = uniFB01;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,711,ls),
(166,746,o),
(135,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(117,819,o),
(164,887,o),
(164,932,qs),
(164,1077,o),
(295,1333,o),
(532,1487,o),
(696,1487,qs),
(809,1487,o),
(938,1401,o),
(938,1343,qs),
(938,1296,o),
(899,1257,qs),
(862,1222,o),
(825,1223,qs),
(747,1223,o),
(641,1374,o),
(592,1374,qs),
(490,1374,o),
(395,1196,o),
(395,1004,qs),
(395,881,ls),
(395,850,o),
(426,850,qs),
(682,850,ls),
(756,850,o),
(877,866,o),
(930,883,o),
(938,883,qs),
(967,883,o),
(967,852,q),
(959,762,o),
(958,674,qs),
(958,143,ls),
(958,67,o),
(1061,68,qs),
(1075,68,o),
(1075,-8,o),
(1061,-8,q),
(979,0,o),
(842,0,qs),
(707,0,o),
(625,-8,q),
(611,-8,o),
(608,68,o),
(625,68,qs),
(729,68,o),
(727,143,qs),
(727,678,ls),
(727,746,o),
(674,745,qs),
(426,745,ls),
(395,745,o),
(395,715,qs),
(395,143,ls),
(395,67,o),
(528,68,qs),
(542,68,o),
(543,-8,o),
(528,-8,q),
(446,0,o),
(293,0,qs),
(139,0,o),
(57,-8,q),
(43,-8,o),
(43,68,o),
(57,68,qs),
(166,67,o),
(166,143,q),
(166,143,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
38 1 8 7 1 76 30 9 2 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 9 7 9 10 114 0 12 3 3 12 89 0 9 9 11 97 0 11 11 70 77 0 7 7 71 77 13 1 3 3 8 95 0 8 8 71 77 6 4 2 3 0 0 1 97 5 1 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 9 7 9 10 7 128 0 12 3 3 12 89 0 9 9 11 97 0 11 11 70 77 0 7 7 71 77 13 1 3 3 8 95 0 8 8 71 77 6 4 2 3 0 0 1 97 5 1 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 9 7 9 10 7 128 0 12 3 3 12 89 6 4 2 3 0 5 1 1 0 1 101 0 9 9 11 97 0 11 11 70 77 0 7 7 71 77 13 1 3 3 8 95 0 8 8 71 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
73 70 68 67 62 60 55 53 52 50 51 21 35 36 19 51 35 36 17 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1087;
}
);
note = uniFB01;
unicode = 64257;
},
{
glyphname = uniFB02;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,850,o),
(430,850,qs),
(696,850,ls),
(729,850,o),
(729,885,qs),
(729,1161,ls),
(729,1274,o),
(637,1374,o),
(569,1374,qs),
(493,1374,o),
(393,1204,o),
(393,1049,qs),
(393,887,ls)
);
},
{
closed = 1;
nodes = (
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(115,819,o),
(164,883,o),
(164,932,qs),
(164,1077,o),
(293,1329,o),
(530,1487,o),
(674,1487,qs),
(783,1487,o),
(846,1440,q),
(881,1456,o),
(920,1487,o),
(934,1487,qs),
(965,1487,o),
(965,1454,qs),
(959,1341,o),
(958,1286,qs),
(958,143,ls),
(958,67,o),
(1061,68,qs),
(1075,68,o),
(1075,-8,o),
(1061,-8,qs),
(948,0,o),
(834,0,qs),
(719,0,o),
(625,-8,q),
(609,-8,o),
(608,68,o),
(625,68,qs),
(729,68,o),
(729,143,qs),
(729,709,ls),
(729,746,o),
(692,745,qs),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(430,0,o),
(293,0,qs),
(156,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,135,q),
(164,135,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
56 1 0 9 1 76 22 1 3 73 0 11 5 5 11 89 0 0 0 9 97 10 1 9 9 70 77 12 1 5 5 1 95 0 1 1 71 77 8 6 4 3 2 2 3 95 7 1 3 3 69 3 78 70 67 65 64 59 57 53 52 34 52 19 51 35 66 19 52 34 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1087;
}
);
note = uniFB02;
unicode = 64258;
},
{
glyphname = uniFB03;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,711,ls),
(164,746,o),
(133,745,qs),
(72,745,ls),
(58,745,o),
(57,819,o),
(72,819,qs),
(164,819,o),
(164,932,qs),
(164,1071,o),
(317,1333,o),
(551,1466,o),
(674,1466,qs),
(832,1466,o),
(903,1370,qs),
(915,1354,l),
(1065,1487,o),
(1268,1487,qs),
(1381,1487,o),
(1509,1401,o),
(1509,1343,qs),
(1509,1296,o),
(1434,1223,o),
(1399,1223,qs),
(1321,1223,o),
(1212,1374,o),
(1163,1374,qs),
(1061,1374,o),
(967,1196,o),
(967,1004,qs),
(967,881,ls),
(967,850,o),
(997,850,qs),
(1255,850,ls),
(1329,850,o),
(1450,866,o),
(1501,883,o),
(1509,883,qs),
(1538,883,o),
(1538,852,q),
(1530,762,o),
(1530,674,qs),
(1530,143,ls),
(1530,67,o),
(1632,68,qs),
(1646,68,o),
(1647,-8,o),
(1632,-8,q),
(1550,0,o),
(1413,0,qs),
(1278,0,o),
(1196,-8,q),
(1182,-8,o),
(1182,68,o),
(1196,68,qs),
(1300,68,o),
(1300,143,qs),
(1300,678,ls),
(1300,746,o),
(1245,745,qs),
(997,745,ls),
(966,745,o),
(967,715,qs),
(967,143,ls),
(967,67,o),
(1100,68,qs),
(1114,68,o),
(1114,-8,o),
(1100,-8,q),
(1018,0,o),
(864,0,qs),
(710,0,o),
(629,-8,q),
(615,-8,o),
(614,68,o),
(629,68,qs),
(738,68,o),
(737,143,qs),
(737,711,ls),
(737,746,o),
(707,745,qs),
(424,745,ls),
(393,745,o),
(393,715,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(540,68,o),
(541,-8,o),
(526,-8,q),
(444,0,o),
(291,0,qs),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
},
{
closed = 1;
nodes = (
(393,850,o),
(424,850,qs),
(705,850,ls),
(738,850,o),
(737,932,qs),
(737,1075,o),
(799,1190,q),
(742,1356,o),
(602,1356,qs),
(489,1356,o),
(393,1176,o),
(393,977,qs),
(393,881,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
83 1 14 19 105 1 11 14 59 1 12 11 3 76 51 30 9 3 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 14 19 11 13 14 114 0 17 3 3 17 89 0 13 13 15 97 0 15 15 70 77 0 19 19 16 97 0 16 16 70 77 0 11 11 71 77 18 7 2 3 3 12 95 20 1 12 12 71 77 10 8 6 4 2 5 0 0 1 97 9 5 2 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 14 19 11 19 14 11 128 0 17 3 3 17 89 0 13 13 15 97 0 15 15 70 77 0 19 19 16 97 0 16 16 70 77 0 11 11 71 77 18 7 2 3 3 12 95 20 1 12 12 71 77 10 8 6 4 2 5 0 0 1 97 9 5 2 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 14 19 11 19 14 11 128 0 17 3 3 17 89 10 8 6 4 2 5 0 9 5 2 1 0 1 101 0 13 13 15 97 0 15 15 70 77 0 19 19 16 97 0 16 16 70 77 0 11 11 71 77 18 7 2 3 3 12 95 20 1 12 12 71 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 14 19 11 19 14 11 128 0 16 0 19 14 16 19 105 0 17 3 3 17 89 10 8 6 4 2 5 0 9 5 2 1 0 1 101 0 13 13 15 97 0 15 15 70 77 0 11 11 71 77 18 7 2 3 3 12 95 20 1 12 12 71 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
111 108 104 102 97 94 92 91 87 85 82 80 76 74 73 71 67 64 61 60 55 53 50 48 19 51 35 36 19 51 35 36 17 21 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1660;
}
);
note = uniFB03;
unicode = 64259;
},
{
glyphname = uniFB04;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,711,ls),
(164,746,o),
(133,745,qs),
(72,745,ls),
(58,745,o),
(57,819,o),
(72,819,qs),
(164,819,o),
(164,932,qs),
(164,1071,o),
(317,1333,o),
(551,1466,o),
(674,1466,qs),
(832,1466,o),
(903,1370,qs),
(915,1354,l),
(1071,1487,o),
(1247,1487,qs),
(1353,1487,o),
(1419,1440,q),
(1460,1463,o),
(1493,1487,o),
(1505,1487,qs),
(1536,1487,o),
(1536,1454,q),
(1530,1368,o),
(1530,1286,qs),
(1530,143,ls),
(1530,65,o),
(1632,68,qs),
(1646,68,o),
(1647,-8,o),
(1632,-8,q),
(1538,0,o),
(1417,0,qs),
(1296,0,o),
(1196,-8,q),
(1182,-8,o),
(1182,68,o),
(1196,68,qs),
(1300,68,o),
(1300,143,qs),
(1300,713,ls),
(1300,746,o),
(1264,745,qs),
(997,745,ls),
(966,745,o),
(967,715,qs),
(967,143,ls),
(967,67,o),
(1100,68,qs),
(1114,68,o),
(1114,-8,o),
(1100,-8,q),
(1018,0,o),
(864,0,qs),
(710,0,o),
(629,-8,q),
(615,-8,o),
(614,68,o),
(629,68,qs),
(738,68,o),
(737,143,qs),
(737,711,ls),
(737,746,o),
(707,745,qs),
(424,745,ls),
(393,745,o),
(393,715,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(540,68,o),
(541,-8,o),
(526,-8,q),
(444,0,o),
(291,0,qs),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
},
{
closed = 1;
nodes = (
(393,850,o),
(424,850,qs),
(705,850,ls),
(738,850,o),
(737,932,qs),
(737,1075,o),
(799,1190,q),
(742,1356,o),
(602,1356,qs),
(489,1356,o),
(393,1176,o),
(393,977,qs),
(393,881,ls)
);
},
{
closed = 1;
nodes = (
(967,850,o),
(997,850,qs),
(1266,850,ls),
(1301,850,o),
(1300,883,qs),
(1300,1161,ls),
(1300,1374,o),
(1133,1374,qs),
(1059,1374,o),
(967,1196,o),
(967,1004,qs),
(967,881,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
64 1 18 13 90 68 2 17 16 2 76 51 30 9 3 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 14 3 3 14 89 0 18 18 11 97 12 1 11 11 70 77 0 16 16 13 97 0 13 13 70 77 15 7 2 3 3 17 95 19 1 17 17 71 77 10 8 6 4 2 5 0 0 1 97 9 5 2 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 14 3 3 14 89 10 8 6 4 2 5 0 9 5 2 1 0 1 101 0 18 18 11 97 12 1 11 11 70 77 0 16 16 13 97 0 13 13 70 77 15 7 2 3 3 17 95 19 1 17 17 71 17 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 13 0 16 17 13 16 105 0 14 3 3 14 89 10 8 6 4 2 5 0 9 5 2 1 0 1 101 0 18 18 11 97 12 1 11 11 70 77 15 7 2 3 3 17 95 19 1 17 17 71 17 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
108 105 102 100 96 93 89 87 82 79 77 76 72 70 67 65 61 60 55 53 50 46 19 51 35 36 19 51 35 36 17 20 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1660;
}
);
note = uniFB04;
unicode = 64260;
},
{
glyphname = f_f.alt;
kernRight = f.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(967,850,o),
(997,850,qs),
(1167,850,ls),
(1181,850,o),
(1182,745,o),
(1167,745,qs),
(997,745,ls),
(966,745,o),
(967,715,qs),
(967,143,ls),
(967,67,o),
(1100,68,qs),
(1114,68,o),
(1114,-8,o),
(1100,-8,q),
(1018,0,o),
(864,0,qs),
(710,0,o),
(629,-8,q),
(615,-8,o),
(614,68,o),
(629,68,qs),
(738,68,o),
(737,143,qs),
(737,711,ls),
(737,746,o),
(707,745,qs),
(424,745,ls),
(393,745,o),
(393,715,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(540,68,o),
(541,-8,o),
(526,-8,q),
(444,0,o),
(291,0,qs),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,711,ls),
(164,746,o),
(133,745,qs),
(72,745,ls),
(58,745,o),
(57,819,o),
(72,819,qs),
(164,819,o),
(164,932,qs),
(164,1071,o),
(317,1333,o),
(551,1466,o),
(674,1466,qs),
(832,1466,o),
(903,1370,q),
(903,1368,o),
(905,1368,q),
(928,1393,o),
(954,1413,qs),
(1048,1487,o),
(1163,1487,qs),
(1239,1487,o),
(1360,1403,o),
(1360,1346,qs),
(1360,1303,o),
(1305,1239,o),
(1257,1239,qs),
(1189,1239,o),
(1133,1374,o),
(1092,1374,qs),
(1041,1374,o),
(967,1198,o),
(967,1049,qs),
(967,881,ls)
);
},
{
closed = 1;
nodes = (
(740,1356,o),
(602,1356,qs),
(489,1356,o),
(393,1176,o),
(393,977,qs),
(393,881,ls),
(393,850,o),
(424,850,qs),
(705,850,ls),
(738,850,o),
(737,932,qs),
(738,1055,o),
(797,1194,q),
(797,1194,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
63 42 16 3 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 14 16 0 1 117 0 4 14 5 4 93 13 9 2 5 15 1 14 1 5 14 107 0 16 0 3 2 16 3 109 0 0 0 2 0 2 102 12 10 8 3 6 6 7 97 11 1 7 7 33 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 14 16 14 1 16 131 0 4 14 5 4 93 13 9 2 5 15 1 14 1 5 14 107 0 16 0 3 2 16 3 109 0 0 0 2 0 2 102 12 10 8 3 6 6 7 97 11 1 7 7 33 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
91 89 85 82 77 74 72 70 67 65 62 60 56 55 52 49 35 36 19 50 20 38 36 33 34 17 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1155;
}
);
note = f_f.alt;
},
{
glyphname = f_eth.nordic;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
pos = (584,0);
ref = eth.nordic;
},
{
ref = f.alt;
}
);
width = 1613;
}
);
note = f_eth.nordic;
},
{
glyphname = f_thorn.nordic;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(115,819,o),
(164,883,o),
(164,932,qs),
(164,1077,o),
(293,1329,o),
(530,1487,o),
(674,1487,qs),
(783,1487,o),
(846,1440,q),
(881,1456,o),
(920,1487,o),
(934,1487,qs),
(965,1487,o),
(965,1454,q),
(959,1358,o),
(958,1286,qs),
(958,815,ls),
(958,790,o),
(973,791,qs),
(985,791,o),
(999,809,qs),
(1030,846,o),
(1083,860,qs),
(1114,868,o),
(1151,870,q),
(1325,870,o),
(1550,659,o),
(1550,475,qs),
(1550,246,o),
(1360,-23,o),
(1118,-23,qs),
(1028,-23,o),
(991,-4,qs),
(983,0,o),
(977,0,qs),
(959,0,o),
(958,-27,qs),
(958,-397,ls),
(958,-483,o),
(1100,-483,qs),
(1114,-483,o),
(1114,-559,o),
(1100,-559,q),
(1002,-551,o),
(721,-551,o),
(625,-559,q),
(609,-559,o),
(608,-520,qs),
(608,-479,o),
(625,-483,q),
(729,-497,o),
(729,-399,qs),
(729,1161,ls),
(729,1261,o),
(682,1323,qs),
(643,1372,o),
(569,1374,qs),
(493,1374,o),
(393,1204,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(584,850,ls),
(600,850,o),
(600,745,o),
(584,745,qs),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(430,0,o),
(154,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,135,q),
(164,135,l)
);
},
{
closed = 1;
nodes = (
(958,59,o),
(1137,59,qs),
(1213,59,o),
(1317,274,o),
(1317,401,qs),
(1317,614,o),
(1192,770,o),
(1110,770,qs),
(1024,770,o),
(971,686,qs),
(959,668,o),
(958,616,qs),
(958,178,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
75 41 8 3 12 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 0 17 17 9 97 0 9 9 33 77 2 1 0 0 1 97 8 1 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 17 2 2 0 0 9 97 0 9 9 33 77 17 2 2 0 0 1 97 8 1 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 0 17 17 9 97 0 9 9 33 77 2 1 0 0 1 97 8 1 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 17 2 2 0 0 9 97 0 9 9 33 77 17 2 2 0 0 1 97 8 1 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 0 17 17 9 97 0 9 9 33 77 2 1 0 0 1 97 8 1 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 17 2 2 0 0 9 97 0 9 9 33 77 17 2 2 0 0 1 97 8 1 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 0 17 17 9 97 0 9 9 33 77 2 1 0 0 1 97 8 1 1 1 33 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 11 16 14 16 11 14 131 0 6 0 7 9 6 7 109 0 14 4 3 14 93 15 1 3 0 4 10 3 4 107 0 16 0 10 5 16 10 109 0 5 13 1 12 5 12 101 17 2 2 0 0 9 97 0 9 9 33 77 17 2 2 0 0 1 97 8 1 1 1 33 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
103 101 97 95 89 86 84 83 78 76 72 71 66 64 60 58 54 52 35 35 27 36 50 35 35 50 17 18 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1599;
}
);
note = f_thorn.nordic;
},
{
glyphname = uni1E9E.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,121,o),
(887,-16,o),
(616,-16,o),
(532,43,q),
(512,106,o),
(512,215,qs),
(512,260,ls),
(512,274,o),
(582,276,o),
(582,260,qs),
(586,194,o),
(670,63,o),
(727,63,qs),
(774,63,o),
(829,141,o),
(829,193,qs),
(829,285,o),
(741,412,o),
(588,469,qs),
(553,481,o),
(584,518,qs),
(823,805,l),
(749,850,o),
(649,850,qs),
(536,850,o),
(377,690,o),
(377,465,qs),
(377,145,ls),
(377,67,o),
(457,68,qs),
(471,68,o),
(471,-8,o),
(457,-8,q),
(373,0,o),
(113,0,o),
(33,-8,q),
(17,-8,o),
(14,68,o),
(33,68,qs),
(150,68,o),
(150,145,qs),
(150,387,ls),
(150,649,o),
(451,950,o),
(662,950,qs),
(850,950,o),
(971,803,qs),
(981,791,o),
(981,776,qs),
(981,756,o),
(954,725,qs),
(784,532,l),
(909,477,o),
(1020,338,o),
(1020,256,q),
(1020,256,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 1 76 22 1 2 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
45 33 6 3 4 1 4 22 1 6 2 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 6 1 2 2 49 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 4 0 97 0 0 0 50 77 5 3 2 1 1 2 97 0 2 2 49 77 5 3 2 1 1 6 97 0 6 6 49 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
25 41 36 35 20 20 41 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 1079;
}
);
note = uni1E9E.sc;
},
{
glyphname = a.sc;
kernLeft = a.sc;
kernRight = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,813,ls),
(407,836,o),
(408,840,q),
(408,846,o),
(401,852,qs),
(376,877,o),
(451,895,o),
(575,952,o),
(616,952,o),
(627,911,qs),
(647,841,o),
(659,807,qs),
(893,147,ls),
(922,67,o),
(1030,68,qs),
(1040,68,o),
(1044,-6,o),
(1030,-6,q),
(969,0,o),
(680,0,o),
(618,-6,q),
(604,-6,o),
(602,68,o),
(618,68,qs),
(700,68,o),
(674,147,qs),
(616,324,l),
(612,340,o),
(592,340,qs),
(342,340,ls),
(328,340,o),
(319,322,q),
(254,145,ls),
(225,67,o),
(344,68,qs),
(358,68,o),
(358,-6,o),
(344,-6,q),
(283,0,o),
(68,0,o),
(6,-6,q),
(-8,-6,o),
(-6,68,o),
(6,68,qs),
(106,70,o),
(143,160,q),
(143,160,l)
);
},
{
closed = 1;
nodes = (
(365,432,o),
(385,432,qs),
(555,432,ls),
(582,432,o),
(573,457,qs),
(496,698,ls),
(492,712,o),
(467,713,o),
(461,698,qs),
(371,455,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
28 8 2 1 73 0 8 7 9 7 8 9 128 0 9 0 3 0 9 3 104 0 7 7 50 77 6 4 2 3 0 0 1 97 5 1 1 1 49 1 78 55 52 26 21 35 20 19 51 35 20 17 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1052;
}
);
note = a.sc;
},
{
glyphname = aacute.sc;
kernLeft = aacute.sc;
kernRight = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (827,0);
ref = acutecomb.sc;
}
);
width = 1052;
}
);
note = aacute.sc;
},
{
glyphname = acircumflex.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (918,0);
ref = uni0302.sc;
}
);
width = 1052;
}
);
note = acircumflex.sc;
},
{
glyphname = adieresis.sc;
kernLeft = aacute.sc;
kernRight = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (969,0);
ref = uni0308.sc;
}
);
width = 1052;
}
);
note = adieresis.sc;
},
{
glyphname = agrave.sc;
kernLeft = aacute.sc;
kernRight = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (790,0);
ref = gravecomb.sc;
}
);
width = 1052;
}
);
note = agrave.sc;
},
{
glyphname = amacron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (966,72);
ref = uni0304;
}
);
width = 1052;
}
);
note = amacron.sc;
},
{
glyphname = aogonek.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,432,o),
(385,432,qs),
(555,432,ls),
(582,432,o),
(573,457,qs),
(496,698,ls),
(492,712,o),
(467,713,o),
(461,698,qs),
(371,455,l)
);
},
{
closed = 1;
nodes = (
(399,813,ls),
(407,836,o),
(408,840,q),
(408,846,o),
(401,852,qs),
(376,877,o),
(451,895,o),
(575,952,o),
(616,952,o),
(627,911,qs),
(647,841,o),
(659,807,qs),
(893,147,ls),
(922,67,o),
(1030,68,qs),
(1040,68,o),
(1044,-6,o),
(1030,-6,qs),
(983,-2,o),
(885,0,q),
(762,-141,o),
(760,-246,qs),
(760,-367,o),
(883,-367,qs),
(944,-367,o),
(987,-336,q),
(1007,-342,o),
(1008,-375,q),
(932,-488,o),
(791,-487,qs),
(586,-487,o),
(584,-303,qs),
(584,-160,o),
(766,0,q),
(666,0,o),
(618,-6,q),
(604,-6,o),
(602,68,o),
(618,68,qs),
(700,68,o),
(674,147,qs),
(616,324,l),
(612,340,o),
(592,340,qs),
(342,340,ls),
(328,340,o),
(319,322,q),
(254,145,ls),
(225,67,o),
(344,68,qs),
(358,68,o),
(358,-6,o),
(344,-6,q),
(283,0,o),
(68,0,o),
(6,-6,q),
(-8,-6,o),
(-6,68,o),
(6,68,qs),
(106,70,o),
(143,160,q),
(143,160,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
53 45 18 3 9 3 43 1 8 9 2 76 0 0 12 1 12 0 1 128 0 1 0 5 2 1 5 104 0 9 0 8 9 8 101 0 12 12 50 77 11 6 4 3 2 2 3 97 10 7 2 3 3 49 3 78 63 62 57 55 52 51 48 46 35 20 19 51 35 20 19 51 17 13 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1052;
}
);
note = aogonek.sc;
},
{
glyphname = aring.sc;
kernLeft = aacute.sc;
kernRight = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,813,ls),
(407,836,o),
(408,840,q),
(408,846,o),
(401,852,qs),
(376,877,o),
(451,895,o),
(575,952,o),
(616,952,o),
(627,911,qs),
(647,841,o),
(659,807,qs),
(893,147,ls),
(922,67,o),
(1030,68,qs),
(1040,68,o),
(1044,-6,o),
(1030,-6,q),
(969,0,o),
(680,0,o),
(618,-6,q),
(604,-6,o),
(602,68,o),
(618,68,qs),
(700,68,o),
(674,147,qs),
(616,324,l),
(612,340,o),
(592,340,qs),
(342,340,ls),
(328,340,o),
(319,322,q),
(254,145,ls),
(225,67,o),
(344,68,qs),
(358,68,o),
(358,-6,o),
(344,-6,q),
(283,0,o),
(68,0,o),
(6,-6,q),
(-8,-6,o),
(-6,68,o),
(6,68,qs),
(106,70,o),
(143,160,q),
(143,160,l)
);
},
{
closed = 1;
nodes = (
(365,432,o),
(385,432,qs),
(555,432,ls),
(582,432,o),
(573,457,qs),
(496,698,ls),
(492,712,o),
(467,713,o),
(461,698,qs),
(371,455,l)
);
},
{
closed = 1;
nodes = (
(756,1145,o),
(664,1077,qs),
(613,1040,o),
(535,1042,qs),
(422,1042,o),
(356,1122,qs),
(311,1175,o),
(311,1245,qs),
(311,1331,o),
(379,1391,qs),
(440,1446,o),
(535,1446,qs),
(650,1446,o),
(713,1366,qs),
(756,1313,o),
(756,1245,q),
(756,1245,l)
);
},
{
closed = 1;
nodes = (
(633,1315,o),
(584,1356,qs),
(564,1372,o),
(535,1374,qs),
(478,1374,o),
(449,1307,qs),
(439,1280,o),
(436,1245,q),
(436,1167,o),
(483,1135,qs),
(506,1121,o),
(535,1120,qs),
(596,1120,o),
(621,1182,qs),
(633,1210,o),
(633,1245,q),
(633,1245,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
82 1 12 13 1 76 28 8 2 1 73 0 8 7 9 7 8 9 128 0 10 0 13 12 10 13 105 0 12 0 11 7 12 11 105 0 9 0 3 0 9 3 104 0 7 7 50 77 6 4 2 3 0 0 1 97 5 1 1 1 49 1 78 87 85 79 77 70 68 62 60 55 52 26 21 35 20 19 51 35 20 17 14 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1052;
}
);
note = aring.sc;
},
{
glyphname = atilde.sc;
kernLeft = aacute.sc;
kernRight = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (881,0);
ref = tildecomb.sc;
}
);
width = 1052;
}
);
note = atilde.sc;
},
{
glyphname = ae.sc;
kernLeft = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1237,674,o),
(1133,674,o),
(1133,686,qs),
(1133,764,o),
(1083,795,qs),
(1034,826,o),
(979,827,qs),
(836,836,ls),
(818,836,o),
(817,809,qs),
(817,510,ls),
(817,490,o),
(838,487,q),
(940,487,ls),
(989,487,o),
(989,549,qs),
(989,602,ls),
(989,618,o),
(1069,618,o),
(1069,602,q),
(1065,577,o),
(1067,442,qs),
(1067,311,o),
(1069,287,qs),
(1069,271,o),
(989,270,o),
(989,287,qs),
(989,330,ls),
(989,391,o),
(940,391,qs),
(838,391,ls),
(818,391,o),
(817,371,qs),
(817,184,ls),
(817,139,o),
(899,90,o),
(950,90,qs),
(1047,94,ls),
(1176,98,o),
(1176,236,qs),
(1176,248,o),
(1278,248,o),
(1278,236,qs),
(1278,39,ls),
(1278,8,o),
(1266,0,q),
(1252,-6,o),
(1198,-6,qs),
(1149,-6,o),
(762,0,o),
(666,0,qs),
(586,0,o),
(479,-6,qs),
(465,-6,o),
(465,68,o),
(479,68,qs),
(590,68,o),
(590,147,qs),
(590,373,ls),
(590,391,o),
(575,391,qs),
(352,391,ls),
(336,391,o),
(328,377,qs),
(186,137,ls),
(161,94,o),
(190,82,qs),
(217,68,o),
(274,68,qs),
(290,68,o),
(291,-6,o),
(274,-6,q),
(213,0,o),
(4,0,o),
(-57,-6,q),
(-73,-6,o),
(-74,68,o),
(-57,68,qs),
(-6,68,o),
(61,115,o),
(86,154,qs),
(473,809,ls),
(483,827,o),
(483,838,qs),
(483,858,o),
(403,858,qs),
(387,858,o),
(385,932,o),
(403,932,qs),
(526,928,o),
(662,928,qs),
(842,928,o),
(1079,932,o),
(1130,932,qs),
(1210,932,o),
(1237,920,o),
(1237,897,qs),
(1237,686,ls)
);
},
{
closed = 1;
nodes = (
(399,500,o),
(408,487,o),
(414,487,qs),
(569,487,ls),
(589,487,o),
(590,508,qs),
(590,772,ls),
(590,784,o),
(571,791,o),
(561,772,qs),
(403,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
13 1 11 1 94 77 2 10 11 70 54 38 3 8 5 3 76 25 1 3 73 0 1 0 11 11 1 114 6 4 2 2 8 3 8 2 114 12 1 10 9 1 5 8 10 5 105 0 11 11 0 96 0 0 0 48 77 0 8 8 3 97 7 1 3 3 49 3 78 105 103 91 88 84 82 68 65 56 114 20 37 35 20 22 34 98 13 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1353;
}
);
note = ae.sc;
},
{
glyphname = uni01E3.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae.sc;
},
{
pos = (1257,72);
ref = uni0304;
}
);
width = 1353;
}
);
note = uni01E3.sc;
},
{
glyphname = b.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,119,o),
(719,-6,o),
(524,-6,qs),
(461,-6,o),
(399,0,o),
(309,0,qs),
(219,0,o),
(72,-6,qs),
(58,-6,o),
(57,68,o),
(72,68,qs),
(115,68,o),
(182,100,o),
(182,139,qs),
(182,793,ls),
(182,859,o),
(66,858,qs),
(50,858,o),
(49,932,o),
(66,932,qs),
(189,928,o),
(279,928,qs),
(369,928,o),
(502,932,o),
(537,932,qs),
(689,932,o),
(864,827,o),
(864,717,qs),
(864,580,o),
(698,516,qs),
(661,502,o),
(698,494,qs),
(776,476,o),
(946,371,o),
(946,254,q),
(946,254,l)
);
},
{
closed = 1;
nodes = (
(637,850,o),
(424,850,qs),
(412,850,o),
(412,827,qs),
(412,561,ls),
(412,547,o),
(453,543,o),
(461,543,qs),
(637,542,o),
(637,696,q),
(637,696,l)
);
},
{
closed = 1;
nodes = (
(684,354,o),
(539,449,o),
(428,449,qs),
(410,449,o),
(412,424,q),
(412,203,ls),
(412,164,o),
(449,82,o),
(514,82,qs),
(600,82,o),
(684,152,o),
(684,254,q),
(684,254,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
54 1 2 8 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
54 1 7 8 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 8 2 5 8 105 6 1 1 1 0 95 0 0 0 48 77 7 1 2 2 3 97 4 1 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 8 7 5 8 105 6 1 1 1 0 95 0 0 0 48 77 0 7 7 3 97 4 1 3 3 49 77 0 2 2 3 97 4 1 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 36 37 20 33 66 20 34 105 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = b.sc;
},
{
glyphname = c.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(971,213,o),
(920,55,o),
(899,25,q),
(850,17,o),
(838,12,q),
(732,-19,o),
(584,-18,qs),
(369,-18,o),
(59,240,o),
(59,444,qs),
(59,673,o),
(365,950,o),
(598,950,qs),
(694,950,o),
(850,918,qs),
(875,914,o),
(913,913,q),
(925,886,o),
(942,698,o),
(942,655,qs),
(942,643,o),
(856,639,o),
(854,651,qs),
(829,858,o),
(594,858,qs),
(449,858,o),
(291,655,o),
(291,483,qs),
(291,266,o),
(473,78,o),
(592,78,qs),
(834,78,o),
(887,260,qs),
(891,274,o),
(977,258,o),
(975,244,q),
(975,244,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
36 1 0 1 1 76 0 2 2 48 77 0 1 1 3 97 0 3 3 50 77 0 0 0 4 97 0 4 4 49 4 78 36 34 23 36 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = c.sc;
},
{
glyphname = cacute.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (868,0);
ref = acutecomb.sc;
}
);
width = 1013;
}
);
note = cacute.sc;
},
{
glyphname = ccaron.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (925,0);
ref = uni030C.sc;
}
);
width = 1013;
}
);
note = ccaron.sc;
},
{
glyphname = ccedilla.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,-410,o),
(606,-467,qs),
(532,-514,o),
(434,-514,qs),
(309,-514,o),
(285,-453,q),
(279,-441,o),
(279,-424,qs),
(279,-381,o),
(313,-362,qs),
(325,-356,o),
(342,-356,qs),
(373,-356,o),
(418,-395,qs),
(461,-432,o),
(483,-432,qs),
(536,-432,o),
(537,-381,qs),
(537,-303,o),
(393,-240,qs),
(373,-232,o),
(375,-221,q),
(375,-217,o),
(381,-209,qs),
(512,-14,l),
(342,4,o),
(213,111,qs),
(57,238,o),
(59,444,qs),
(59,673,o),
(365,950,o),
(598,950,qs),
(694,950,o),
(850,918,qs),
(875,914,o),
(913,913,q),
(925,886,o),
(942,698,o),
(942,655,qs),
(942,643,o),
(856,639,o),
(854,651,qs),
(829,858,o),
(594,858,qs),
(449,858,o),
(291,655,o),
(291,483,qs),
(291,266,o),
(473,78,o),
(592,78,qs),
(834,78,o),
(887,260,qs),
(891,274,o),
(977,258,o),
(975,244,qs),
(971,213,o),
(920,55,o),
(899,25,q),
(850,17,o),
(838,12,q),
(744,-15,o),
(616,-18,q),
(553,-106,ls),
(545,-118,o),
(543,-125,q),
(543,-135,o),
(571,-150,qs),
(694,-215,o),
(694,-324,q),
(694,-324,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
14 1 1 2 44 1 0 1 61 1 5 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 0 5 5 6 114 0 5 0 7 5 7 102 0 3 3 48 77 0 2 2 4 97 0 4 4 50 77 0 1 1 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 0 5 0 6 5 128 0 5 0 7 5 7 102 0 3 3 48 77 0 2 2 4 97 0 4 4 50 77 0 1 1 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
39 18 46 34 23 36 42 23 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = ccedilla.sc;
},
{
glyphname = cdotaccent.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (1035,72);
ref = uni0307;
}
);
width = 1013;
}
);
note = cdotaccent.sc;
},
{
glyphname = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1118,244,o),
(805,-6,o),
(608,-6,qs),
(563,-6,o),
(442,0,o),
(244,0,qs),
(144,0,o),
(72,-6,q),
(58,-6,o),
(57,68,o),
(72,68,qs),
(113,68,o),
(182,106,o),
(182,147,qs),
(182,784,ls),
(182,860,o),
(66,858,qs),
(50,858,o),
(49,932,o),
(66,932,qs),
(189,928,o),
(252,928,qs),
(406,928,o),
(530,932,o),
(575,932,qs),
(802,932,o),
(1118,709,o),
(1118,498,q),
(1118,498,l)
);
},
{
closed = 1;
nodes = (
(858,642,o),
(690,852,o),
(518,852,qs),
(450,852,o),
(432,842,qs),
(412,830,o),
(412,799,qs),
(412,215,ls),
(412,166,o),
(432,106,o),
(489,82,o),
(514,76,o),
(561,76,qs),
(702,76,o),
(858,289,o),
(858,492,q),
(858,492,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
5 1 1 1 0 95 0 0 0 48 77 4 1 2 2 3 95 0 3 3 49 3 78 40 37 114 20 34 98 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 1177;
}
);
note = d.sc;
},
{
glyphname = eth.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(858,642,o),
(690,852,o),
(518,852,qs),
(450,852,o),
(432,842,qs),
(412,830,o),
(412,799,qs),
(412,532,ls),
(412,516,o),
(426,516,qs),
(600,516,ls),
(620,516,o),
(621,401,o),
(598,401,qs),
(426,401,ls),
(412,401,o),
(412,385,qs),
(412,215,ls),
(412,166,o),
(432,106,o),
(489,82,o),
(514,76,o),
(561,76,qs),
(702,76,o),
(858,289,o),
(858,492,q),
(858,492,l)
);
},
{
closed = 1;
nodes = (
(1118,244,o),
(805,-6,o),
(608,-6,qs),
(563,-6,o),
(442,0,o),
(244,0,qs),
(144,0,o),
(72,-6,q),
(58,-6,o),
(57,68,o),
(72,68,qs),
(113,68,o),
(182,106,o),
(182,147,qs),
(182,385,ls),
(182,399,o),
(168,401,q),
(43,401,ls),
(25,401,o),
(25,516,o),
(43,516,qs),
(168,516,ls),
(182,516,o),
(182,530,qs),
(182,784,ls),
(182,860,o),
(66,858,qs),
(50,858,o),
(49,932,o),
(66,932,qs),
(189,928,o),
(252,928,qs),
(406,928,o),
(530,932,o),
(575,932,qs),
(802,932,o),
(1118,709,o),
(1118,498,q),
(1118,498,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
41 18 2 2 3 50 9 2 0 1 2 76 6 1 2 7 1 1 0 2 1 105 5 1 3 3 4 95 0 4 4 48 77 8 1 0 0 9 95 0 9 9 49 9 78 63 56 21 34 20 34 101 38 33 39 34 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1177;
}
);
note = eth.sc;
},
{
glyphname = dcaron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = d.sc;
},
{
pos = (947,0);
ref = uni030C.sc;
}
);
width = 1177;
}
);
note = dcaron.sc;
},
{
glyphname = e.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(895,8,o),
(870,-6,o),
(815,-6,qs),
(766,-6,o),
(354,0,o),
(258,0,qs),
(178,0,o),
(72,-6,qs),
(58,-6,o),
(57,68,o),
(72,68,qs),
(183,68,o),
(182,147,qs),
(182,784,ls),
(182,860,o),
(66,858,qs),
(50,858,o),
(49,932,o),
(66,932,qs),
(189,928,o),
(254,928,qs),
(434,928,o),
(700,932,o),
(752,932,qs),
(832,932,o),
(856,920,o),
(856,897,qs),
(856,686,ls),
(856,674,o),
(754,674,o),
(754,686,qs),
(754,764,o),
(702,795,qs),
(653,826,o),
(598,827,qs),
(428,836,ls),
(410,836,o),
(412,809,q),
(412,510,ls),
(412,490,o),
(430,487,q),
(532,487,ls),
(583,487,o),
(584,549,qs),
(584,602,ls),
(584,618,o),
(664,618,o),
(664,602,q),
(660,577,o),
(659,442,qs),
(659,311,o),
(664,287,q),
(664,271,o),
(584,270,o),
(584,287,qs),
(584,330,ls),
(584,391,o),
(532,391,qs),
(430,391,ls),
(410,391,o),
(412,371,q),
(412,184,ls),
(412,139,o),
(489,90,o),
(543,90,qs),
(639,94,ls),
(793,100,o),
(793,236,qs),
(793,248,o),
(895,248,o),
(895,236,qs),
(895,39,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
40 33 23 3 2 3 16 10 0 3 0 1 2 76 0 5 4 3 3 5 114 0 6 0 7 0 6 114 0 2 0 1 0 2 1 105 0 3 3 4 96 0 4 4 48 77 0 0 0 7 95 0 7 7 49 7 78 114 19 34 105 52 46 52 52 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 958;
}
);
note = e.sc;
},
{
glyphname = eacute.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (810,0);
ref = acutecomb.sc;
}
);
width = 958;
}
);
note = eacute.sc;
},
{
glyphname = ecaron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (867,0);
ref = uni030C.sc;
}
);
width = 958;
}
);
note = ecaron.sc;
},
{
glyphname = ecircumflex.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (901,0);
ref = uni0302.sc;
}
);
width = 958;
}
);
note = ecircumflex.sc;
},
{
glyphname = edieresis.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (952,0);
ref = uni0308.sc;
}
);
width = 958;
}
);
note = edieresis.sc;
},
{
glyphname = egrave.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (773,0);
ref = gravecomb.sc;
}
);
width = 958;
}
);
note = egrave.sc;
},
{
glyphname = emacron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (949,72);
ref = uni0304;
}
);
width = 958;
}
);
note = emacron.sc;
},
{
glyphname = f.sc;
kernRight = f.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(860,674,o),
(758,674,o),
(758,686,qs),
(758,731,o),
(715,811,o),
(602,829,qs),
(575,833,o),
(453,838,o),
(428,838,qs),
(410,838,o),
(412,811,q),
(412,522,ls),
(412,502,o),
(430,504,q),
(526,504,ls),
(589,504,o),
(590,563,qs),
(590,643,ls),
(590,657,o),
(672,657,o),
(672,643,q),
(668,618,o),
(668,457,qs),
(668,289,o),
(672,264,q),
(672,248,o),
(590,248,o),
(590,264,qs),
(590,346,ls),
(590,407,o),
(526,408,qs),
(430,408,ls),
(410,408,o),
(412,387,q),
(412,147,ls),
(412,98,o),
(467,68,o),
(514,68,qs),
(530,68,o),
(532,-6,o),
(514,-6,q),
(453,0,o),
(133,0,o),
(72,-6,q),
(58,-6,o),
(57,68,o),
(72,68,qs),
(183,68,o),
(182,147,qs),
(182,784,ls),
(182,860,o),
(66,858,qs),
(50,858,o),
(49,932,o),
(66,932,qs),
(189,928,o),
(471,928,o),
(778,932,o),
(788,932,qs),
(835,932,o),
(860,920,o),
(860,897,qs),
(860,686,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
59 51 41 3 6 7 34 28 2 2 5 2 76 21 1 3 73 0 1 0 7 7 1 114 0 6 0 5 2 6 5 105 0 7 7 0 96 0 0 0 48 77 4 1 2 2 3 97 0 3 3 49 3 78 52 46 52 35 20 19 34 82 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = f.sc;
},
{
glyphname = g.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(942,643,o),
(856,639,o),
(854,651,qs),
(819,858,o),
(594,858,qs),
(449,858,o),
(291,655,o),
(291,483,qs),
(291,266,o),
(469,78,o),
(573,78,qs),
(665,78,o),
(719,102,o),
(719,131,qs),
(719,256,ls),
(719,307,o),
(645,319,o),
(608,319,qs),
(592,319,o),
(592,391,o),
(608,391,q),
(649,387,o),
(967,387,o),
(1008,391,q),
(1024,391,o),
(1024,319,o),
(1008,319,qs),
(959,319,o),
(934,299,o),
(934,264,qs),
(934,111,ls),
(934,78,o),
(963,78,qs),
(979,78,o),
(979,23,o),
(963,23,qs),
(869,23,o),
(676,-18,o),
(569,-18,qs),
(368,-18,o),
(59,240,o),
(59,444,qs),
(59,673,o),
(365,950,o),
(598,950,qs),
(694,950,o),
(850,918,qs),
(875,914,o),
(913,913,q),
(925,886,o),
(942,698,o),
(942,655,q),
(942,655,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 6 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 7 1 5 4 6 5 105 0 0 0 48 77 0 9 9 1 97 0 1 1 50 77 8 1 4 4 3 97 0 3 3 49 77 8 1 4 4 2 97 0 2 2 49 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 7 1 5 4 6 5 105 0 3 2 4 3 89 0 0 0 48 77 0 9 9 1 97 0 1 1 50 77 8 1 4 4 2 97 0 2 2 49 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
48 46 37 35 50 20 34 17 36 34 19 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1067;
}
);
note = g.sc;
},
{
glyphname = gcaron.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (932,0);
ref = uni030C.sc;
}
);
width = 1067;
}
);
note = gcaron.sc;
},
{
glyphname = gdotaccent.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (1042,72);
ref = uni0307;
}
);
width = 1067;
}
);
note = gdotaccent.sc;
},
{
glyphname = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,784,ls),
(182,864,o),
(74,862,qs),
(58,862,o),
(57,936,o),
(74,936,q),
(115,932,o),
(481,932,o),
(522,936,q),
(538,936,o),
(541,862,o),
(522,862,qs),
(409,862,o),
(412,784,q),
(412,553,ls),
(412,528,o),
(434,526,q),
(821,526,ls),
(844,526,o),
(844,553,qs),
(844,784,ls),
(844,864,o),
(733,862,qs),
(717,862,o),
(719,936,o),
(733,936,q),
(774,932,o),
(1143,932,o),
(1184,936,q),
(1200,936,o),
(1200,862,o),
(1184,862,qs),
(1073,862,o),
(1073,784,qs),
(1073,147,ls),
(1073,67,o),
(1182,68,qs),
(1196,68,o),
(1196,-6,o),
(1182,-6,q),
(1121,0,o),
(797,0,o),
(733,-6,q),
(717,-6,o),
(719,68,o),
(733,68,qs),
(844,68,o),
(844,147,qs),
(844,408,ls),
(844,433,o),
(821,432,qs),
(434,432,ls),
(409,432,o),
(412,408,q),
(412,147,ls),
(412,67,o),
(518,68,qs),
(534,68,o),
(537,-6,o),
(518,-6,q),
(457,0,o),
(133,0,o),
(72,-6,q),
(58,-6,o),
(57,68,o),
(72,68,qs),
(182,67,o),
(182,147,q),
(182,147,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
14 1 0 3 1 76 62 42 2 8 74 28 8 2 1 73 0 10 0 3 0 10 3 103 13 11 9 3 7 7 8 97 12 1 8 8 48 77 6 4 2 3 0 0 1 97 5 1 1 1 49 1 78 66 64 61 58 56 55 51 49 46 44 50 19 35 20 19 51 35 20 17 14 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1265;
}
);
note = h.sc;
},
{
glyphname = i.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,784,ls),
(193,864,o),
(84,862,qs),
(70,862,o),
(70,936,o),
(84,936,q),
(125,932,o),
(494,932,o),
(535,936,q),
(549,936,o),
(549,862,o),
(535,862,qs),
(422,862,o),
(422,784,qs),
(422,147,ls),
(422,67,o),
(530,68,qs),
(544,68,o),
(545,-6,o),
(530,-6,q),
(469,0,o),
(143,0,o),
(82,-6,q),
(66,-6,o),
(66,68,o),
(82,68,qs),
(193,67,o),
(193,147,q),
(193,147,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
22 1 4 74 8 1 1 73 5 1 3 3 4 97 0 4 4 48 77 2 1 0 0 1 97 0 1 1 49 1 78 35 20 19 35 20 17 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 624;
}
);
note = i.sc;
},
{
glyphname = iacute.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (613,0);
ref = acutecomb.sc;
}
);
width = 624;
}
);
note = iacute.sc;
},
{
glyphname = icircumflex.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (704,0);
ref = uni0302.sc;
}
);
width = 624;
}
);
note = icircumflex.sc;
},
{
glyphname = idieresis.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (755,0);
ref = uni0308.sc;
}
);
width = 624;
}
);
note = idieresis.sc;
},
{
glyphname = igrave.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (576,0);
ref = gravecomb.sc;
}
);
width = 624;
}
);
note = igrave.sc;
},
{
glyphname = imacron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (752,72);
ref = uni0304;
}
);
width = 624;
}
);
note = imacron.sc;
},
{
glyphname = j.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,323,o),
(436,8,o),
(319,-211,o),
(170,-301,o),
(59,-301,qs),
(18,-301,o),
(-70,-248,o),
(-70,-188,qs),
(-70,-147,o),
(-6,-92,o),
(43,-92,qs),
(82,-92,o),
(158,-145,o),
(172,-188,q),
(195,-151,o),
(223,29,o),
(223,432,qs),
(223,784,ls),
(223,864,o),
(106,862,qs),
(90,862,o),
(90,936,o),
(106,936,q),
(147,932,o),
(528,932,o),
(569,936,q),
(583,936,o),
(584,862,o),
(569,862,qs),
(501,862,o),
(451,827,o),
(451,784,qs),
(451,432,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
18 1 4 3 1 76 9 1 1 74 0 3 0 4 3 4 101 2 1 0 0 1 97 0 1 1 48 0 78 36 39 35 20 18 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 628;
}
);
note = j.sc;
},
{
glyphname = k.sc;
kernRight = k.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,784,ls),
(182,864,o),
(66,862,qs),
(50,862,o),
(49,936,o),
(66,936,q),
(107,932,o),
(479,932,o),
(520,936,q),
(534,936,o),
(537,862,o),
(520,862,qs),
(409,862,o),
(412,784,q),
(412,530,ls),
(412,510,o),
(426,510,qs),
(442,510,o),
(483,535,o),
(496,549,qs),
(707,784,ls),
(744,825,o),
(743,862,o),
(700,862,qs),
(684,862,o),
(684,936,o),
(700,936,q),
(741,932,o),
(999,932,o),
(1040,936,q),
(1054,936,o),
(1057,862,o),
(1040,862,qs),
(977,862,o),
(930,838,o),
(895,805,qs),
(627,545,ls),
(604,522,o),
(627,498,q),
(938,139,ls),
(967,106,o),
(1026,76,o),
(1067,68,o),
(1102,68,qs),
(1116,68,o),
(1116,-6,o),
(1102,-6,q),
(1041,0,o),
(696,0,o),
(635,-6,q),
(621,-6,o),
(621,68,o),
(635,68,qs),
(711,68,o),
(709,90,qs),
(709,113,o),
(680,147,qs),
(510,342,ls),
(461,397,o),
(434,399,qs),
(411,399,o),
(412,375,qs),
(412,147,ls),
(412,67,o),
(516,68,qs),
(530,68,o),
(532,-6,o),
(516,-6,q),
(455,0,o),
(133,0,o),
(72,-6,q),
(58,-6,o),
(57,68,o),
(72,68,qs),
(182,67,o),
(182,147,q),
(182,147,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
21 1 0 3 1 76 70 49 2 8 74 29 8 2 1 73 0 10 0 3 0 10 3 105 13 11 9 3 7 7 8 97 12 1 8 8 48 77 6 4 2 3 0 0 1 97 5 1 1 1 49 1 78 74 72 69 68 64 63 60 58 53 51 20 25 35 20 22 19 35 20 17 14 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1122;
}
);
note = k.sc;
},
{
glyphname = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,28,o),
(922,-6,o),
(866,-6,qs),
(862,-6,o),
(500,0,o),
(160,0,o),
(72,-6,qs),
(58,-6,o),
(57,59,o),
(72,59,qs),
(183,59,o),
(182,145,qs),
(182,784,ls),
(182,864,o),
(66,862,qs),
(50,862,o),
(49,936,o),
(66,936,q),
(107,932,o),
(475,932,o),
(516,936,q),
(530,936,o),
(526,862,o),
(516,862,qs),
(410,862,o),
(412,784,qs),
(412,209,ls),
(412,152,o),
(440,121,qs),
(471,88,o),
(530,90,qs),
(690,98,ls),
(758,102,o),
(799,162,qs),
(844,228,o),
(844,305,qs),
(844,317,o),
(946,317,o),
(946,305,qs),
(946,59,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 1 76 21 1 2 74 0 4 0 5 0 4 114 3 1 1 1 2 97 0 2 2 48 77 0 0 0 5 95 0 5 5 49 5 78 98 19 35 20 21 54 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 1019;
}
);
note = l.sc;
},
{
glyphname = lslash.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,28,o),
(922,-6,o),
(866,-6,qs),
(862,-6,o),
(500,0,o),
(160,0,o),
(72,-6,qs),
(58,-6,o),
(57,59,o),
(72,59,qs),
(183,59,o),
(182,145,qs),
(182,352,l),
(82,279,ls),
(62,265,o),
(31,311,qs),
(19,329,o),
(18,344,qs),
(18,354,o),
(23,358,qs),
(182,475,l),
(182,784,ls),
(182,864,o),
(66,862,qs),
(50,862,o),
(49,936,o),
(66,936,q),
(107,932,o),
(475,932,o),
(516,936,q),
(530,936,o),
(526,862,o),
(516,862,qs),
(410,862,o),
(412,784,qs),
(412,645,l),
(537,737,ls),
(557,751,o),
(590,705,qs),
(602,687,o),
(602,672,qs),
(602,662,o),
(596,657,qs),
(412,522,l),
(412,209,ls),
(412,152,o),
(440,121,qs),
(471,88,o),
(530,90,qs),
(690,98,ls),
(758,102,o),
(799,162,qs),
(844,228,o),
(844,305,qs),
(844,317,o),
(946,317,o),
(946,305,qs),
(946,59,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
44 36 21 16 13 0 6 0 1 1 76 30 1 2 74 0 4 0 5 0 4 114 3 1 1 1 2 97 0 2 2 48 77 0 0 0 5 95 0 5 5 49 5 78 98 28 35 20 30 54 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 1019;
}
);
note = lslash.sc;
},
{
glyphname = m.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1202,123,o),
(1214,94,o),
(1266,68,o),
(1315,68,qs),
(1329,68,o),
(1327,-6,o),
(1315,-6,q),
(1254,0,o),
(942,0,o),
(881,-6,q),
(867,-6,o),
(866,68,o),
(881,68,qs),
(985,68,o),
(985,152,qs),
(983,594,ls),
(983,629,o),
(967,596,qs),
(682,2,ls),
(676,-12,o),
(631,-14,o),
(623,0,qs),
(309,610,ls),
(293,643,o),
(291,608,qs),
(264,160,ls),
(262,127,o),
(311,78,o),
(381,78,qs),
(395,78,o),
(395,2,o),
(381,2,q),
(320,8,o),
(109,0,o),
(47,-6,q),
(33,-6,o),
(37,68,o),
(47,68,qs),
(147,68,o),
(154,152,qs),
(195,758,ls),
(199,819,o),
(141,864,o),
(76,862,qs),
(62,862,o),
(61,936,o),
(76,936,qs),
(135,932,o),
(203,932,qs),
(295,932,ls),
(320,932,o),
(352,909,o),
(377,862,qs),
(678,276,ls),
(692,249,o),
(707,279,qs),
(997,868,ls),
(1022,915,o),
(1038,932,o),
(1055,932,qs),
(1130,932,ls),
(1189,932,o),
(1305,936,qs),
(1321,936,o),
(1321,862,o),
(1305,862,qs),
(1246,862,o),
(1221,842,qs),
(1196,819,o),
(1196,764,qs),
(1202,152,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
30 1 4 0 63 38 2 7 5 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
30 1 4 0 1 76 63 38 2 5 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
30 1 4 0 63 38 2 7 5 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
30 1 6 0 63 38 2 7 5 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 0 0 1 95 2 1 1 1 48 77 10 8 6 3 4 4 5 97 0 5 5 49 77 10 8 6 3 4 4 7 97 9 1 7 7 49 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
3 1 0 0 1 95 2 1 1 1 48 77 10 8 6 3 4 4 5 97 9 7 2 5 5 49 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 0 0 1 95 2 1 1 1 48 77 10 8 6 3 4 4 5 97 0 5 5 49 77 10 8 6 3 4 4 7 97 9 1 7 7 49 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 0 0 1 95 2 1 1 1 48 77 10 8 6 3 4 4 5 97 9 1 5 5 49 77 0 7 7 49 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
10 8 6 3 4 9 1 5 7 4 5 105 3 1 0 0 1 95 2 1 1 1 48 77 0 7 7 49 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 6 0 4 4 6 114 10 8 2 4 9 1 5 7 4 5 106 3 1 0 0 1 95 2 1 1 1 48 77 0 7 7 49 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
67 65 62 61 22 23 35 20 20 34 73 66 19 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1366;
}
);
note = m.sc;
},
{
glyphname = n.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(952,872,o),
(907,836,o),
(907,791,qs),
(907,25,ls),
(907,-14,o),
(862,-14,qs),
(819,-14,o),
(805,4,qs),
(307,586,ls),
(299,596,o),
(287,598,o),
(287,582,qs),
(287,139,ls),
(287,100,o),
(348,59,o),
(389,59,qs),
(403,59,o),
(406,-6,o),
(389,-6,q),
(328,0,o),
(227,0,qs),
(127,0,o),
(66,-6,q),
(50,-6,o),
(49,59,o),
(66,59,qs),
(175,59,o),
(174,139,qs),
(174,750,ls),
(174,824,o),
(129,872,o),
(55,872,qs),
(41,872,o),
(41,936,o),
(55,936,q),
(96,932,o),
(156,932,qs),
(264,932,ls),
(284,932,o),
(303,922,qs),
(326,912,o),
(344,891,qs),
(756,385,ls),
(768,369,o),
(799,369,o),
(799,385,qs),
(799,791,ls),
(799,842,o),
(745,872,o),
(692,872,qs),
(676,872,o),
(678,936,o),
(692,936,q),
(733,932,o),
(848,932,qs),
(961,932,o),
(1001,936,q),
(1015,936,o),
(1015,872,o),
(1001,872,q),
(1001,872,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
48 14 2 4 1 1 76 25 7 2 0 74 41 1 5 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
48 14 2 4 1 41 1 7 5 2 76 25 7 2 0 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
8 3 2 1 1 0 97 2 1 0 0 48 77 6 1 4 4 5 97 7 1 5 5 49 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
8 3 2 1 1 0 97 2 1 0 0 48 77 6 1 4 4 5 97 0 5 5 49 77 0 7 7 49 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
20 40 35 36 20 35 58 35 36 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1060;
}
);
note = n.sc;
},
{
glyphname = nacute.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (831,0);
ref = acutecomb.sc;
}
);
width = 1060;
}
);
note = nacute.sc;
},
{
glyphname = ncaron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (888,0);
ref = uni030C.sc;
}
);
width = 1060;
}
);
note = ncaron.sc;
},
{
glyphname = thorn.nordic.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,557,o),
(578,659,o),
(489,659,qs),
(411,659,o),
(412,635,qs),
(412,332,ls),
(412,314,o),
(455,305,qs),
(467,303,o),
(508,303,qs),
(674,305,o),
(674,475,q),
(674,475,l)
);
},
{
closed = 1;
nodes = (
(182,793,ls),
(182,873,o),
(74,872,qs),
(60,872,o),
(59,936,o),
(74,936,q),
(115,932,o),
(481,932,o),
(522,936,q),
(536,936,o),
(537,872,o),
(522,872,qs),
(409,872,o),
(410,793,qs),
(410,762,ls),
(410,742,o),
(442,741,qs),
(553,741,ls),
(707,739,o),
(807,668,qs),
(909,594,o),
(909,473,qs),
(909,350,o),
(713,219,o),
(549,219,qs),
(467,219,o),
(442,223,o),
(410,207,o),
(410,201,qs),
(410,139,ls),
(410,59,o),
(526,59,qs),
(542,59,o),
(543,-6,o),
(526,-6,q),
(465,0,o),
(137,0,o),
(76,-6,q),
(62,-6,o),
(61,59,o),
(76,59,qs),
(182,59,o),
(182,139,q),
(182,139,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
27 1 2 5 1 76 50 1 8 74 21 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 9 1 7 6 8 7 105 0 6 0 1 0 6 1 105 0 0 0 5 2 0 5 105 4 1 2 2 3 97 0 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 8 9 1 7 6 8 7 105 0 6 0 1 0 6 1 105 0 0 0 5 2 0 5 105 4 1 2 3 3 2 89 4 1 2 2 3 97 0 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
54 52 20 19 53 37 35 20 20 37 33 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 952;
}
);
note = thorn.nordic.sc;
},
{
glyphname = ntilde.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (885,0);
ref = tildecomb.sc;
}
);
width = 1060;
}
);
note = ntilde.sc;
},
{
glyphname = o.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1001,305,o),
(903,170,qs),
(762,-18,o),
(528,-18,qs),
(387,-18,o),
(252,68,qs),
(174,117,o),
(59,324,o),
(59,457,qs),
(59,639,o),
(178,782,qs),
(317,950,o),
(532,950,qs),
(700,950,o),
(823,844,qs),
(1001,691,o),
(1001,455,q),
(1001,455,l)
);
},
{
closed = 1;
nodes = (
(748,622,o),
(608,870,o),
(528,870,qs),
(434,870,o),
(313,662,o),
(313,498,qs),
(313,297,o),
(459,66,o),
(537,66,qs),
(592,66,o),
(676,127,o),
(717,213,o),
(741,330,o),
(748,407,o),
(748,446,q),
(748,446,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 3 3 0 97 0 0 0 50 77 0 2 2 1 97 0 1 1 49 1 78 36 41 39 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 1060;
}
);
note = o.sc;
},
{
glyphname = oacute.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (831,0);
ref = acutecomb.sc;
}
);
width = 1060;
}
);
note = oacute.sc;
},
{
glyphname = ocircumflex.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (922,0);
ref = uni0302.sc;
}
);
width = 1060;
}
);
note = ocircumflex.sc;
},
{
glyphname = odieresis.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (973,0);
ref = uni0308.sc;
}
);
width = 1060;
}
);
note = odieresis.sc;
},
{
glyphname = ograve.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (794,0);
ref = gravecomb.sc;
}
);
width = 1060;
}
);
note = ograve.sc;
},
{
glyphname = omacron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (970,72);
ref = uni0304;
}
);
width = 1060;
}
);
note = omacron.sc;
},
{
glyphname = oslash.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1001,305,o),
(903,170,qs),
(762,-18,o),
(528,-18,qs),
(401,-18,o),
(279,53,q),
(186,-74,ls),
(182,-80,o),
(172,-82,q),
(160,-82,o),
(133,-61,qs),
(100,-34,o),
(113,-20,q),
(203,106,l),
(154,149,o),
(117,219,qs),
(60,323,o),
(59,457,qs),
(59,639,o),
(178,782,qs),
(317,950,o),
(532,950,qs),
(663,950,o),
(766,887,q),
(840,987,ls),
(846,995,o),
(854,995,qs),
(866,995,o),
(891,981,qs),
(932,954,o),
(915,934,q),
(840,829,l),
(1001,678,o),
(1001,455,q),
(1001,455,l)
);
},
{
closed = 1;
nodes = (
(381,187,o),
(385,180,qs),
(457,63,o),
(537,66,qs),
(592,66,o),
(676,127,o),
(717,213,o),
(741,330,o),
(748,410,o),
(748,446,qs),
(748,565,o),
(717,659,q),
(379,193,l)
);
},
{
closed = 1;
nodes = (
(674,758,l),
(606,873,o),
(528,870,qs),
(434,870,o),
(313,662,o),
(313,498,qs),
(313,381,o),
(338,293,q),
(338,293,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
10 1 4 1 55 45 20 2 4 3 4 28 1 2 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 50 77 0 4 4 1 97 0 1 1 50 77 0 3 3 2 97 0 2 2 49 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 1 0 133 0 4 4 1 97 0 1 1 50 77 0 3 3 2 97 0 2 2 49 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
54 52 44 42 31 29 35 38 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 1060;
}
);
note = oslash.sc;
},
{
glyphname = otilde.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (885,0);
ref = tildecomb.sc;
}
);
width = 1060;
}
);
note = otilde.sc;
},
{
glyphname = oe.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1407,8,o),
(1382,-6,o),
(1327,-6,qs),
(1278,-6,o),
(866,0,o),
(770,0,qs),
(719,0,o),
(596,-10,o),
(528,-10,qs),
(387,-10,o),
(174,117,o),
(59,324,o),
(59,457,qs),
(59,639,o),
(317,936,o),
(532,936,qs),
(606,936,o),
(727,928,o),
(766,928,qs),
(946,928,o),
(1212,932,o),
(1264,932,qs),
(1344,932,o),
(1368,920,o),
(1368,897,qs),
(1368,686,ls),
(1368,674,o),
(1266,674,o),
(1266,686,qs),
(1266,764,o),
(1214,795,qs),
(1165,826,o),
(1110,827,qs),
(940,836,ls),
(922,836,o),
(924,809,q),
(924,510,ls),
(924,490,o),
(942,487,q),
(1044,487,ls),
(1095,487,o),
(1096,549,qs),
(1096,602,ls),
(1096,618,o),
(1176,618,o),
(1176,602,q),
(1172,577,o),
(1171,442,qs),
(1171,311,o),
(1176,287,q),
(1176,271,o),
(1096,270,o),
(1096,287,qs),
(1096,330,ls),
(1096,391,o),
(1044,391,qs),
(942,391,ls),
(922,391,o),
(924,371,q),
(924,184,ls),
(924,139,o),
(1001,90,o),
(1055,90,qs),
(1151,94,ls),
(1305,100,o),
(1305,236,qs),
(1305,248,o),
(1407,248,o),
(1407,236,qs),
(1407,39,ls)
);
},
{
closed = 1;
nodes = (
(694,778,ls),
(694,833,o),
(602,856,o),
(528,856,qs),
(434,856,o),
(313,662,o),
(313,498,qs),
(313,297,o),
(459,74,o),
(537,74,qs),
(609,74,o),
(694,98,o),
(694,164,q),
(694,164,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
40 33 23 3 2 3 16 10 0 3 0 1 2 76 0 3 8 2 8 3 114 0 2 0 1 0 2 1 105 0 8 8 4 95 0 4 4 48 77 0 0 0 5 97 6 1 5 5 49 77 0 7 7 5 97 6 1 5 5 49 5 78 36 37 81 37 137 52 46 52 52 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1470;
}
);
note = oe.sc;
},
{
glyphname = p.sc;
kernRight = p.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(469,410,o),
(442,414,o),
(426,408,qs),
(410,400,o),
(412,391,q),
(412,147,ls),
(412,67,o),
(526,68,qs),
(542,68,o),
(545,-6,o),
(526,-6,q),
(465,0,o),
(137,0,o),
(76,-6,q),
(62,-6,o),
(61,68,o),
(76,68,qs),
(182,68,o),
(182,147,qs),
(182,784,ls),
(182,860,o),
(66,858,qs),
(50,858,o),
(49,932,o),
(66,932,qs),
(189,928,o),
(254,928,qs),
(356,928,o),
(496,932,o),
(555,932,qs),
(705,932,o),
(909,786,o),
(909,541,o),
(713,410,o),
(551,410,q),
(551,410,l)
);
},
{
closed = 1;
nodes = (
(674,746,o),
(578,850,o),
(489,850,qs),
(411,850,o),
(412,823,qs),
(412,520,ls),
(412,502,o),
(455,496,qs),
(467,494,o),
(508,494,qs),
(674,494,o),
(674,664,q),
(674,664,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
30 1 3 0 1 76 24 1 4 73 0 6 8 1 0 3 6 0 105 7 1 2 2 1 95 0 1 1 48 77 5 1 3 3 4 97 0 4 4 49 4 78 1 0 46 44 39 37 28 26 23 22 18 17 14 12 10 4 0 35 1 34 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = p.sc;
},
{
glyphname = thorn.sc;
kernRight = thorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(922,312,o),
(608,-8,o),
(401,-8,qs),
(376,-8,o),
(377,-35,qs),
(377,-168,ls),
(377,-193,o),
(289,-270,o),
(221,-317,o),
(150,-360,o),
(115,-375,q),
(109,-375,ls),
(91,-375,o),
(68,-338,qs),
(39,-293,o),
(53,-279,q),
(88,-250,o),
(104,-233,o),
(139,-195,o),
(147,-164,o),
(147,-143,qs),
(147,741,ls),
(147,782,o),
(88,836,o),
(39,836,qs),
(25,836,o),
(25,907,o),
(39,907,qs),
(219,907,o),
(322,948,qs),
(332,952,o),
(350,952,qs),
(383,952,o),
(381,920,qs),
(375,809,o),
(375,795,qs),
(375,785,o),
(387,776,o),
(395,776,o),
(401,780,qs),
(539,874,ls),
(592,911,o),
(641,911,qs),
(676,911,o),
(799,836,o),
(922,625,o),
(922,500,q),
(922,500,l)
);
},
{
closed = 1;
nodes = (
(672,594,o),
(623,725,o),
(575,774,o),
(561,774,qs),
(555,774,o),
(530,766,o),
(438,696,o),
(391,674,qs),
(375,666,o),
(375,641,qs),
(375,106,ls),
(375,81,o),
(406,82,qs),
(529,82,o),
(672,355,o),
(672,500,q),
(672,500,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 3 6 3 7 6 128 0 4 5 4 134 0 1 1 50 77 0 3 3 0 97 2 1 0 0 48 77 0 6 6 5 97 0 5 5 49 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 3 6 3 7 6 128 0 4 5 4 134 2 1 0 0 3 7 0 3 105 0 1 1 50 77 0 6 6 5 97 0 5 5 49 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
39 37 39 43 34 19 25 35 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 980;
}
);
note = thorn.sc;
},
{
glyphname = q.sc;
kernLeft = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(748,622,o),
(608,870,o),
(528,870,qs),
(434,870,o),
(313,662,o),
(313,498,qs),
(313,297,o),
(459,66,o),
(537,66,qs),
(635,66,o),
(748,268,o),
(748,446,q),
(748,446,l)
);
},
{
closed = 1;
nodes = (
(1175,-180,o),
(1176,-199,qs),
(1176,-217,o),
(1151,-270,o),
(1139,-268,qs),
(869,-211,o),
(358,-41,o),
(59,231,o),
(59,453,qs),
(59,631,o),
(180,780,qs),
(319,950,o),
(532,950,qs),
(708,950,o),
(823,844,qs),
(1001,678,o),
(1001,453,qs),
(1001,326,o),
(862,96,o),
(784,49,qs),
(751,29,o),
(784,10,q),
(997,-127,o),
(1161,-176,q),
(1161,-176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
32 1 0 73 0 0 1 0 134 0 1 1 2 97 0 2 2 50 1 78 45 36 34 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 1060;
}
);
note = q.sc;
},
{
glyphname = r.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(696,746,o),
(588,850,o),
(489,850,qs),
(411,850,o),
(412,823,qs),
(412,512,ls),
(412,494,o),
(455,485,qs),
(467,483,o),
(508,483,qs),
(696,484,o),
(696,664,q),
(696,664,l)
);
},
{
closed = 1;
nodes = (
(182,784,ls),
(182,860,o),
(66,858,qs),
(50,858,o),
(49,932,o),
(66,932,qs),
(189,928,o),
(274,928,qs),
(360,928,o),
(498,932,o),
(555,932,qs),
(725,932,o),
(934,791,o),
(934,664,qs),
(934,592,o),
(895,537,qs),
(852,476,o),
(762,440,q),
(737,432,o),
(758,401,qs),
(852,258,o),
(1026,53,o),
(1081,53,qs),
(1099,53,o),
(1100,18,qs),
(1100,-15,o),
(1081,-14,qs),
(923,-14,o),
(784,61,o),
(686,172,o),
(596,309,o),
(573,338,o),
(524,393,o),
(498,401,o),
(483,401,qs),
(440,401,o),
(428,403,qs),
(410,405,o),
(412,387,q),
(412,147,ls),
(412,102,o),
(461,68,o),
(516,68,qs),
(530,68,o),
(532,-6,o),
(516,-6,q),
(455,0,o),
(295,0,qs),
(133,0,o),
(72,-6,q),
(58,-6,o),
(57,68,o),
(72,68,qs),
(182,67,o),
(182,147,q),
(182,147,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
29 1 2 5 1 76 22 1 3 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
29 1 2 5 22 1 6 3 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 5 2 0 5 103 9 1 1 1 8 95 0 8 8 48 77 7 4 2 2 2 3 97 6 1 3 3 49 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 0 5 2 0 5 103 9 1 1 1 8 95 0 8 8 48 77 7 4 2 2 2 3 97 0 3 3 49 77 7 4 2 2 2 6 97 0 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 0 5 2 0 5 103 9 1 1 1 8 95 0 8 8 48 77 4 1 2 2 3 97 0 3 3 49 77 0 7 7 6 97 0 6 6 49 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
66 64 106 34 39 37 35 36 20 37 33 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1095;
}
);
note = r.sc;
},
{
glyphname = rcaron.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (906,0);
ref = uni030C.sc;
}
);
width = 1095;
}
);
note = rcaron.sc;
},
{
glyphname = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(723,138,o),
(612,47,qs),
(522,-27,o),
(375,-25,qs),
(230,-25,o),
(135,41,q),
(106,115,o),
(106,283,qs),
(106,303,o),
(188,303,o),
(190,285,qs),
(196,224,o),
(315,55,o),
(408,55,qs),
(480,55,o),
(530,150,o),
(530,195,qs),
(530,308,o),
(184,442,o),
(92,600,o),
(92,670,qs),
(92,795,o),
(193,874,qs),
(285,950,o),
(416,950,qs),
(539,950,o),
(633,911,q),
(672,796,o),
(672,702,qs),
(672,682,o),
(602,682,o),
(598,694,qs),
(580,749,o),
(498,868,o),
(401,868,qs),
(340,868,o),
(281,788,o),
(281,741,qs),
(281,626,o),
(608,537,o),
(723,387,o),
(723,283,q),
(723,283,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 0 2 0 3 2 128 0 0 0 1 97 0 1 1 50 77 0 2 2 4 97 0 4 4 49 4 78 36 19 41 40 38 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 782;
}
);
note = s.sc;
},
{
glyphname = sacute.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (712,0);
ref = acutecomb.sc;
}
);
width = 782;
}
);
note = sacute.sc;
},
{
glyphname = scaron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (769,0);
ref = uni030C.sc;
}
);
width = 782;
}
);
note = scaron.sc;
},
{
glyphname = scedilla.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,-410,o),
(436,-467,qs),
(362,-514,o),
(264,-514,qs),
(139,-514,o),
(115,-453,q),
(109,-441,o),
(109,-424,qs),
(109,-381,o),
(143,-362,qs),
(155,-356,o),
(172,-356,qs),
(203,-356,o),
(248,-395,qs),
(291,-432,o),
(313,-432,qs),
(366,-432,o),
(367,-381,qs),
(367,-303,o),
(223,-240,qs),
(203,-232,o),
(205,-221,q),
(205,-217,o),
(211,-209,qs),
(336,-25,l),
(217,-17,o),
(135,41,q),
(106,115,o),
(106,283,qs),
(106,303,o),
(188,303,o),
(190,285,qs),
(196,224,o),
(315,55,o),
(408,55,qs),
(480,55,o),
(530,150,o),
(530,195,qs),
(530,308,o),
(184,442,o),
(92,600,o),
(92,670,qs),
(92,795,o),
(193,874,qs),
(285,950,o),
(416,950,qs),
(539,950,o),
(633,911,q),
(672,796,o),
(672,702,qs),
(672,682,o),
(602,682,o),
(598,694,qs),
(580,749,o),
(498,868,o),
(401,868,qs),
(340,868,o),
(281,788,o),
(281,741,qs),
(281,626,o),
(608,537,o),
(723,387,o),
(723,283,qs),
(723,138,o),
(612,47,qs),
(544,-8,o),
(444,-20,q),
(383,-106,ls),
(375,-118,o),
(373,-125,q),
(373,-135,o),
(401,-150,qs),
(524,-215,o),
(524,-324,q),
(524,-324,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 5 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 0 2 0 3 2 128 0 6 4 5 5 6 114 0 5 0 7 5 7 102 0 0 0 1 97 0 1 1 50 77 0 2 2 4 97 0 4 4 49 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 0 2 0 3 2 128 0 6 4 5 4 6 5 128 0 5 0 7 5 7 102 0 0 0 1 97 0 1 1 50 77 0 2 2 4 97 0 4 4 49 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
71 69 62 61 59 57 49 48 44 43 40 38 29 27 19 17 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 808;
}
);
note = scedilla.sc;
},
{
glyphname = germandbls.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (811,0);
ref = s.sc;
}
);
width = 1619;
}
);
note = germandbls.sc;
},
{
glyphname = t.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,805,ls),
(406,836,o),
(373,836,qs),
(279,836,ls),
(197,836,o),
(119,752,o),
(119,657,qs),
(119,649,o),
(45,649,o),
(45,657,qs),
(45,907,ls),
(45,930,o),
(98,930,qs),
(166,930,o),
(369,928,o),
(711,928,o),
(874,930,o),
(940,930,qs),
(993,930,o),
(993,907,qs),
(993,657,ls),
(993,649,o),
(922,649,o),
(922,657,qs),
(922,755,o),
(860,836,o),
(782,836,qs),
(668,836,ls),
(633,836,o),
(633,805,qs),
(633,145,ls),
(633,63,o),
(762,66,qs),
(772,66,o),
(770,-6,o),
(762,-6,qs),
(692,0,o),
(340,0,o),
(270,-6,qs),
(260,-6,o),
(260,66,o),
(270,66,qs),
(406,63,o),
(406,145,q),
(406,145,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
34 20 2 0 3 1 76 8 1 1 73 5 1 3 3 4 95 0 4 4 48 77 2 1 0 0 1 97 0 1 1 49 1 78 55 119 51 35 20 17 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = t.sc;
},
{
glyphname = tcaron.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (875,0);
ref = uni030C.sc;
}
);
width = 1034;
}
);
note = tcaron.sc;
},
{
glyphname = u.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1010,442,o),
(979,160,o),
(805,-18,o),
(633,-18,qs),
(520,-18,o),
(313,43,o),
(174,225,o),
(174,373,qs),
(174,784,ls),
(174,829,o),
(121,862,o),
(66,862,qs),
(50,862,o),
(49,936,o),
(66,936,q),
(107,932,o),
(479,932,o),
(520,936,q),
(534,936,o),
(537,862,o),
(520,862,qs),
(444,862,o),
(403,829,o),
(403,784,qs),
(403,471,ls),
(403,461,o),
(414,205,o),
(516,78,o),
(633,78,qs),
(744,78,o),
(854,190,o),
(854,340,qs),
(854,784,ls),
(854,825,o),
(786,862,o),
(748,862,qs),
(732,862,o),
(731,936,o),
(748,936,q),
(789,932,o),
(1073,932,o),
(1114,936,q),
(1128,936,o),
(1130,862,o),
(1114,862,qs),
(1073,862,o),
(1010,825,o),
(1010,784,qs),
(1010,604,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
33 9 2 1 74 6 4 2 3 0 0 1 97 5 1 1 1 48 77 0 3 3 7 97 0 7 7 49 7 78 38 35 20 22 37 35 20 18 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 1159;
}
);
note = u.sc;
},
{
glyphname = uacute.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (921,0);
ref = acutecomb.sc;
}
);
width = 1159;
}
);
note = uacute.sc;
},
{
glyphname = ucircumflex.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (1012,0);
ref = uni0302.sc;
}
);
width = 1159;
}
);
note = ucircumflex.sc;
},
{
glyphname = udieresis.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (1063,0);
ref = uni0308.sc;
}
);
width = 1159;
}
);
note = udieresis.sc;
},
{
glyphname = ugrave.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (884,0);
ref = gravecomb.sc;
}
);
width = 1159;
}
);
note = ugrave.sc;
},
{
glyphname = umacron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (1060,72);
ref = uni0304;
}
);
width = 1159;
}
);
note = umacron.sc;
},
{
glyphname = uring.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1010,442,o),
(979,160,o),
(805,-18,o),
(633,-18,qs),
(520,-18,o),
(313,43,o),
(174,225,o),
(174,373,qs),
(174,784,ls),
(174,829,o),
(121,862,o),
(66,862,qs),
(50,862,o),
(49,936,o),
(66,936,q),
(107,932,o),
(479,932,o),
(520,936,q),
(534,936,o),
(537,862,o),
(520,862,qs),
(444,862,o),
(403,829,o),
(403,784,qs),
(403,471,ls),
(403,461,o),
(414,205,o),
(516,78,o),
(633,78,qs),
(744,78,o),
(854,190,o),
(854,340,qs),
(854,784,ls),
(854,825,o),
(786,862,o),
(748,862,qs),
(732,862,o),
(731,936,o),
(748,936,q),
(789,932,o),
(1073,932,o),
(1114,936,q),
(1128,936,o),
(1130,862,o),
(1114,862,qs),
(1073,862,o),
(1010,825,o),
(1010,784,qs),
(1010,604,ls)
);
},
{
closed = 1;
nodes = (
(854,1145,o),
(762,1077,qs),
(711,1040,o),
(633,1042,qs),
(520,1042,o),
(455,1122,qs),
(412,1175,o),
(412,1245,qs),
(412,1331,o),
(477,1391,qs),
(538,1446,o),
(633,1446,qs),
(748,1446,o),
(811,1366,qs),
(854,1313,o),
(854,1245,q),
(854,1245,l)
);
},
{
closed = 1;
nodes = (
(729,1315,o),
(682,1356,qs),
(662,1372,o),
(633,1374,qs),
(576,1374,o),
(547,1307,qs),
(537,1280,o),
(535,1245,qs),
(535,1167,o),
(582,1135,qs),
(605,1121,o),
(633,1120,qs),
(694,1120,o),
(719,1182,qs),
(729,1210,o),
(729,1245,q),
(729,1245,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
33 9 2 1 9 1 76 0 8 0 11 10 8 11 105 0 10 0 9 1 10 9 105 6 4 2 3 0 0 1 97 5 1 1 1 48 77 0 3 3 7 97 0 7 7 49 7 78 79 77 71 69 62 60 39 38 35 20 22 37 35 20 18 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1159;
}
);
note = uring.sc;
},
{
glyphname = v.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(893,856,o),
(870,799,qs),
(561,14,ls),
(545,-27,o),
(471,-27,qs),
(397,-27,o),
(381,16,qs),
(106,784,ls),
(77,864,o),
(8,862,qs),
(-8,862,o),
(-8,936,o),
(8,936,q),
(49,932,o),
(360,932,o),
(401,936,q),
(415,936,o),
(418,862,o),
(401,862,qs),
(350,862,o),
(330,848,qs),
(310,836,o),
(328,784,qs),
(508,229,ls),
(512,219,o),
(522,217,q),
(532,217,o),
(539,229,q),
(745,776,ls),
(778,862,o),
(684,862,qs),
(668,862,o),
(668,936,o),
(684,936,q),
(725,932,o),
(954,926,o),
(995,930,q),
(1009,930,o),
(1009,856,o),
(995,856,q),
(995,856,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
14 1 5 1 1 76 27 6 2 0 74 6 4 2 3 1 1 0 97 3 1 0 0 48 77 0 5 5 49 5 78 19 35 35 20 26 35 20 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 970;
}
);
note = v.sc;
},
{
glyphname = w.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1002,-27,o),
(858,-27,o),
(840,16,qs),
(735,254,l),
(627,14,ls),
(609,-27,o),
(465,-27,o),
(446,16,qs),
(113,784,ls),
(78,864,o),
(25,862,qs),
(9,862,o),
(8,936,o),
(25,936,q),
(66,932,o),
(309,932,o),
(350,936,q),
(364,936,o),
(367,862,o),
(350,862,qs),
(299,862,o),
(334,784,qs),
(573,229,ls),
(577,219,o),
(590,217,q),
(600,217,o),
(604,229,q),
(678,387,l),
(506,784,ls),
(471,864,o),
(428,862,qs),
(412,862,o),
(412,936,o),
(428,936,q),
(469,932,o),
(702,932,o),
(743,936,q),
(757,936,o),
(758,862,o),
(743,862,qs),
(692,862,o),
(725,784,qs),
(791,633,l),
(858,776,ls),
(899,862,o),
(834,862,qs),
(818,862,o),
(815,936,o),
(834,936,q),
(875,932,o),
(1030,932,o),
(1071,936,q),
(1085,936,o),
(1085,862,o),
(1071,862,qs),
(1014,862,o),
(983,799,qs),
(848,502,l),
(967,229,ls),
(971,219,o),
(981,217,q),
(991,217,o),
(995,229,q),
(1249,776,ls),
(1290,862,o),
(1210,862,qs),
(1194,862,o),
(1194,936,o),
(1210,936,q),
(1251,932,o),
(1425,932,o),
(1466,936,q),
(1480,936,o),
(1481,862,o),
(1466,862,qs),
(1405,862,o),
(1374,799,q),
(1020,14,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
73 52 49 34 19 16 6 12 0 1 76 63 43 28 8 4 1 74 11 9 8 6 5 3 2 7 0 0 1 97 10 7 4 3 1 1 48 77 13 1 12 12 49 12 78 76 75 71 70 67 65 62 61 57 56 35 20 20 35 20 25 35 20 17 14 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1464;
}
);
note = w.sc;
},
{
glyphname = x.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(932,0,o),
(614,0,o),
(553,-6,q),
(537,-6,o),
(537,68,o),
(553,68,qs),
(627,68,o),
(627,100,qs),
(627,118,o),
(604,152,qs),
(479,324,ls),
(465,344,o),
(444,319,qs),
(311,174,ls),
(278,139,o),
(281,113,q),
(281,68,o),
(350,68,qs),
(364,68,o),
(365,-6,o),
(350,-6,q),
(289,0,o),
(68,0,o),
(6,-6,q),
(-8,-6,o),
(-8,68,o),
(6,68,qs),
(90,66,o),
(143,127,qs),
(399,410,ls),
(409,420,o),
(397,436,qs),
(139,791,ls),
(108,832,o),
(66,862,o),
(39,862,qs),
(25,862,o),
(23,936,o),
(39,936,q),
(80,932,o),
(426,932,o),
(467,936,q),
(483,936,o),
(483,862,o),
(467,862,qs),
(375,862,o),
(375,823,qs),
(375,807,o),
(393,780,qs),
(535,586,ls),
(545,574,o),
(555,584,qs),
(731,776,ls),
(749,796,o),
(752,817,q),
(752,862,o),
(692,862,qs),
(676,862,o),
(678,936,o),
(692,936,q),
(733,932,o),
(965,932,o),
(1006,936,q),
(1022,936,o),
(1024,862,o),
(1006,862,qs),
(963,862,o),
(903,823,o),
(827,741,qs),
(612,508,ls),
(600,496,o),
(612,479,qs),
(856,141,ls),
(909,67,o),
(993,68,qs),
(1007,68,o),
(1007,-6,o),
(993,-6,q),
(993,-6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
62 23 2 0 1 1 76 39 18 2 2 74 57 1 8 73 6 4 3 3 1 1 2 97 5 1 2 2 48 77 10 9 7 3 0 0 8 97 11 1 8 8 49 8 78 77 76 72 71 61 59 20 23 35 50 26 35 50 23 34 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1044;
}
);
note = x.sc;
},
{
glyphname = y.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,862,o),
(924,848,o),
(864,788,o),
(854,774,qs),
(829,739,o),
(807,705,q),
(639,471,ls),
(621,446,o),
(608,420,qs),
(600,402,o),
(600,385,qs),
(600,342,l),
(600,147,ls),
(600,102,o),
(645,68,o),
(702,68,qs),
(716,68,o),
(717,-6,o),
(702,-6,q),
(641,0,o),
(334,0,o),
(272,-6,q),
(258,-6,o),
(258,68,o),
(272,68,qs),
(329,68,o),
(373,100,o),
(373,147,qs),
(373,340,ls),
(373,385,o),
(369,399,qs),
(361,419,o),
(328,469,qs),
(125,784,ls),
(74,864,o),
(12,862,qs),
(-4,862,o),
(-4,936,o),
(12,936,q),
(53,932,o),
(352,932,o),
(391,936,q),
(407,936,o),
(410,862,o),
(391,862,qs),
(344,862,o),
(328,848,qs),
(305,828,o),
(332,784,qs),
(510,508,ls),
(522,488,o),
(537,508,qs),
(731,776,ls),
(760,815,o),
(737,842,qs),
(719,862,o),
(674,862,qs),
(660,862,o),
(659,936,o),
(674,936,q),
(715,932,o),
(975,932,o),
(1016,936,q),
(1032,936,o),
(1032,862,o),
(1016,862,q),
(1016,862,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
55 35 2 5 1 1 76 27 6 2 0 74 47 1 6 73 7 1 5 1 6 1 5 6 128 8 4 2 3 1 1 0 97 3 1 0 0 48 77 0 6 6 49 6 78 30 35 20 25 35 20 26 35 50 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1009;
}
);
note = y.sc;
},
{
glyphname = yacute.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (836,0);
ref = acutecomb.sc;
}
);
width = 1009;
}
);
note = yacute.sc;
},
{
glyphname = ydieresis.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (978,0);
ref = uni0308.sc;
}
);
width = 1009;
}
);
note = ydieresis.sc;
},
{
glyphname = uni0233.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (975,72);
ref = uni0304;
}
);
width = 1009;
}
);
note = uni0233.sc;
},
{
glyphname = z.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(914,178,o),
(899,98,o),
(897,16,o),
(895,-10,o),
(889,-23,o),
(881,-23,qs),
(879,-23,o),
(858,-18,o),
(743,0,o),
(401,0,qs),
(125,0,ls),
(76,0,o),
(76,37,qs),
(76,51,o),
(86,68,q),
(616,811,ls),
(622,819,o),
(623,823,q),
(623,835,o),
(596,836,qs),
(334,836,ls),
(305,836,o),
(252,805,o),
(201,698,o),
(197,668,qs),
(195,656,o),
(119,668,o),
(121,678,qs),
(133,746,o),
(137,807,o),
(137,885,o),
(145,928,o),
(162,938,o),
(182,938,o),
(274,928,o),
(598,928,qs),
(647,928,o),
(815,936,o),
(860,936,qs),
(895,936,o),
(915,901,o),
(895,870,q),
(362,123,ls),
(358,117,o),
(356,109,q),
(356,95,o),
(381,94,qs),
(586,94,o),
(723,104,qs),
(756,106,o),
(842,207,o),
(852,244,q),
(856,250,o),
(901,248,o),
(928,235,o),
(928,227,q),
(928,227,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 0 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 5 1 5 0 1 128 0 5 5 3 97 4 1 3 3 48 77 2 1 1 1 6 95 0 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 1 5 0 1 128 0 1 2 2 1 112 0 5 5 3 97 4 1 3 3 48 77 0 2 2 6 96 0 6 6 49 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
55 59 17 86 33 19 18 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = z.sc;
},
{
glyphname = zacute.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
},
{
pos = (856,0);
ref = acutecomb.sc;
}
);
width = 950;
}
);
note = zacute.sc;
},
{
glyphname = zcaron.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
},
{
pos = (913,0);
ref = uni030C.sc;
}
);
width = 950;
}
);
note = zcaron.sc;
},
{
glyphname = zdotaccent.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
},
{
pos = (1023,72);
ref = uni0307;
}
);
width = 950;
}
);
note = zdotaccent.sc;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(496,804,o),
(420,805,qs),
(359,805,o),
(319,854,qs),
(309,866,o),
(305,866,q),
(297,862,l),
(295,860,o),
(289,856,q),
(234,805,o),
(166,805,qs),
(76,805,o),
(47,870,q),
(39,893,o),
(39,920,qs),
(39,996,o),
(176,1067,q),
(264,1108,ls),
(284,1118,o),
(285,1137,qs),
(285,1255,l),
(279,1296,o),
(221,1298,qs),
(170,1298,o),
(150,1268,qs),
(144,1260,o),
(141,1214,qs),
(141,1198,o),
(139,1188,qs),
(125,1135,o),
(82,1135,q),
(31,1139,o),
(27,1182,q),
(27,1231,o),
(70,1282,qs),
(84,1300,o),
(102,1313,q),
(176,1358,o),
(266,1358,qs),
(346,1358,o),
(397,1315,qs),
(428,1288,o),
(428,1257,qs),
(428,942,ls),
(428,889,o),
(457,874,q),
(471,872,l),
(489,872,o),
(514,895,q),
(520,897,l),
(530,895,o),
(537,881,q),
(537,874,l)
);
},
{
closed = 1;
nodes = (
(285,1051,ls),
(285,1065,o),
(276,1067,q),
(268,1065,l),
(182,1020,o),
(182,946,qs),
(182,874,o),
(268,874,o),
(281,913,qs),
(285,926,o),
(285,938,q),
(285,938,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
31 25 19 3 2 3 64 63 60 3 0 2 46 1 4 0 3 76 0 2 3 0 3 2 0 128 6 1 0 5 1 4 0 4 101 0 3 3 1 97 0 1 1 84 3 78 21 39 42 38 23 38 36 7 12 29 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,938,o),
(494,862,qs),
(424,805,o),
(313,805,qs),
(194,805,o),
(115,893,qs),
(41,973,o),
(41,1081,qs),
(41,1200,o),
(125,1280,qs),
(203,1358,o),
(313,1358,qs),
(436,1358,o),
(516,1270,qs),
(586,1192,o),
(586,1083,q),
(586,1083,l)
);
},
{
closed = 1;
nodes = (
(442,1200,o),
(387,1270,qs),
(352,1313,o),
(313,1311,qs),
(258,1311,o),
(219,1237,qs),
(201,1198,l),
(183,1143,o),
(182,1079,qs),
(182,962,o),
(238,897,qs),
(271,858,o),
(313,858,qs),
(376,858,o),
(414,938,qs),
(442,997,o),
(442,1079,q),
(442,1079,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 2 1 101 0 3 3 0 97 0 0 0 84 3 78 39 39 38 35 4 12 26 
CALL[ ]	/* CallFunction */";
};
width = 622;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = uni02B0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(600,524,o),
(426,524,o),
(377,520,qs),
(368,520,o),
(368,565,o),
(377,565,qs),
(438,565,o),
(440,604,q),
(440,858,ls),
(440,903,o),
(383,981,o),
(340,981,qs),
(315,981,o),
(270,965,o),
(236,924,o),
(236,901,qs),
(236,610,ls),
(236,565,o),
(299,565,qs),
(307,565,o),
(307,520,o),
(299,520,qs),
(250,524,o),
(80,524,o),
(31,520,qs),
(23,520,o),
(23,565,o),
(31,565,qs),
(98,565,o),
(98,606,qs),
(98,1223,ls),
(98,1296,o),
(43,1296,qs),
(34,1296,o),
(34,1341,o),
(43,1341,qs),
(74,1341,o),
(193,1401,o),
(205,1411,qs),
(213,1417,o),
(223,1417,qs),
(239,1417,o),
(240,1401,qs),
(240,1350,o),
(236,1296,q),
(236,1018,ls),
(236,1004,o),
(242,1004,qs),
(246,1004,o),
(256,1010,q),
(305,1047,o),
(383,1047,qs),
(438,1047,o),
(520,1004,o),
(578,911,o),
(578,858,qs),
(578,610,l),
(582,565,o),
(647,565,qs),
(657,565,o),
(657,520,o),
(647,520,q),
(647,520,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
16 14 2 7 1 5 1 0 7 2 76 17 1 3 1 75 21 19 2 2 74 40 1 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 87 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 93 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 87 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 93 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 87 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 93 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 87 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 3 2 97 0 2 2 84 77 0 7 7 1 97 0 1 1 93 77 8 6 4 3 0 0 5 97 9 1 5 5 85 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
61 58 20 37 35 50 19 34 30 37 34 10 12 31 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uni02B0;
unicode = 688;
},
{
glyphname = uni02B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,1018,ls),
(236,1004,o),
(242,1004,qs),
(246,1004,o),
(256,1010,q),
(305,1047,o),
(383,1047,qs),
(438,1047,o),
(518,1006,o),
(578,915,o),
(578,858,qs),
(578,610,ls),
(578,565,o),
(647,565,qs),
(657,565,o),
(657,520,o),
(647,520,qs),
(600,524,o),
(512,524,qs),
(426,524,o),
(377,520,qs),
(367,520,o),
(369,565,o),
(377,565,qs),
(438,565,o),
(440,604,q),
(440,858,ls),
(440,903,o),
(383,981,o),
(340,981,qs),
(287,981,o),
(254,944,qs),
(238,924,o),
(236,901,q),
(236,610,ls),
(236,565,o),
(299,565,qs),
(307,565,o),
(307,520,o),
(299,520,qs),
(250,524,o),
(164,524,qs),
(80,524,o),
(31,520,qs),
(23,520,o),
(23,565,o),
(31,565,qs),
(99,563,o),
(98,606,qs),
(98,1083,ls),
(98,1171,o),
(164,1311,o),
(311,1417,o),
(403,1417,qs),
(466,1417,o),
(537,1366,o),
(537,1331,qs),
(537,1302,o),
(492,1260,o),
(469,1260,qs),
(410,1260,o),
(365,1350,o),
(336,1350,qs),
(293,1350,o),
(236,1241,o),
(236,1153,q),
(236,1153,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
65 63 2 6 10 32 1 3 6 2 76 49 26 2 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 87 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 93 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 87 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 93 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 87 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 93 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 87 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 10 0 1 114 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 93 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 10 0 1 10 128 0 0 0 2 97 0 2 2 86 77 0 6 6 10 97 0 10 10 93 77 9 7 5 3 3 3 4 97 8 1 4 4 85 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
60 58 53 51 66 20 37 35 66 21 36 33 34 11 12 31 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uni02B1;
unicode = 689;
},
{
glyphname = uni02B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,1194,o),
(203,1169,qs),
(180,1153,o),
(150,1153,qs),
(107,1153,o),
(80,1188,qs),
(64,1211,o),
(63,1237,qs),
(63,1278,o),
(96,1303,qs),
(119,1319,o),
(150,1321,qs),
(193,1321,o),
(219,1286,qs),
(238,1264,o),
(238,1237,q),
(238,1237,l)
);
},
{
closed = 1;
nodes = (
(236,983,o),
(233,934,q),
(233,608,ls),
(233,495,o),
(227,446,qs),
(213,342,o),
(164,274,qs),
(119,213,o),
(39,197,qs),
(16,193,o),
(-4,193,qs),
(-41,193,o),
(-76,217,qs),
(-103,237,o),
(-102,268,qs),
(-102,303,o),
(-72,322,q),
(-56,330,o),
(-37,330,qs),
(-8,330,o),
(10,299,qs),
(37,256,o),
(59,256,qs),
(88,256,o),
(92,309,qs),
(94,336,o),
(96,387,q),
(96,858,ls),
(96,934,o),
(41,934,qs),
(33,934,o),
(33,979,o),
(41,979,qs),
(72,979,o),
(154,1020,qs),
(193,1038,o),
(205,1049,qs),
(213,1055,o),
(221,1055,qs),
(240,1054,o),
(240,1038,q),
(240,1038,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 5 6 5 4 6 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 84 77 0 5 5 6 97 0 6 6 89 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 6 5 4 6 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 105 0 5 5 6 97 0 6 6 89 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
39 18 37 34 27 38 35 7 12 29 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = uni02B2;
unicode = 690;
},
{
glyphname = uni02B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,942,o),
(428,920,qs),
(412,906,o),
(391,905,qs),
(360,905,o),
(332,936,qs),
(318,950,o),
(301,948,q),
(276,948,o),
(256,913,qs),
(238,880,o),
(236,838,q),
(236,610,ls),
(236,565,o),
(299,565,qs),
(307,565,o),
(307,520,o),
(299,520,qs),
(250,524,o),
(172,524,qs),
(86,524,o),
(35,520,qs),
(27,520,o),
(27,565,o),
(35,565,qs),
(98,565,o),
(98,610,qs),
(98,854,ls),
(98,934,o),
(43,934,qs),
(33,934,o),
(35,956,qs),
(35,979,o),
(43,979,qs),
(74,979,o),
(158,1022,qs),
(195,1040,o),
(205,1049,qs),
(213,1055,o),
(223,1055,qs),
(237,1055,o),
(240,1042,q),
(236,997,l),
(236,983,o),
(252,983,o),
(264,999,qs),
(305,1046,o),
(367,1047,qs),
(410,1047,o),
(434,1022,q),
(455,1004,o),
(455,977,q),
(455,977,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
10 9 2 1 0 1 76 12 1 0 74 34 1 4 73 0 6 1 2 1 6 2 128 0 1 0 2 7 1 2 105 0 7 7 0 97 0 0 0 87 77 5 1 3 3 4 97 0 4 4 85 4 78 35 21 35 66 19 35 28 35 8 12 30 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni02B3;
unicode = 691;
},
{
glyphname = uni02B4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,637,o),
(436,637,qs),
(446,637,o),
(446,592,o),
(436,592,qs),
(405,592,o),
(324,549,qs),
(287,531,o),
(274,522,qs),
(266,516,o),
(256,514,q),
(242,514,o),
(242,526,qs),
(244,571,ls),
(244,585,o),
(229,586,o),
(215,569,qs),
(174,522,o),
(115,522,qs),
(72,522,o),
(45,549,qs),
(27,567,o),
(27,594,qs),
(27,629,o),
(51,651,qs),
(67,665,o),
(88,666,qs),
(119,666,o),
(150,635,qs),
(164,621,o),
(178,621,qs),
(203,621,o),
(225,655,qs),
(243,688,o),
(244,731,qs),
(244,958,ls),
(244,1003,o),
(182,1004,qs),
(174,1004,o),
(172,1051,o),
(182,1051,qs),
(231,1047,o),
(307,1044,qs),
(393,1044,o),
(444,1051,q),
(452,1051,o),
(455,1004,o),
(444,1004,qs),
(381,1004,o),
(383,958,qs),
(383,717,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
37 36 2 5 6 1 76 9 1 1 74 39 1 5 73 0 3 7 6 7 3 6 128 0 7 0 6 5 7 6 105 2 1 0 0 1 97 0 1 1 87 77 0 4 4 5 97 0 5 5 85 5 78 34 28 38 35 21 35 36 17 8 12 30 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni02B4;
unicode = 692;
},
{
glyphname = uni02B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,387,ls),
(383,336,o),
(385,309,qs),
(391,256,o),
(420,256,qs),
(443,256,o),
(467,299,qs),
(485,330,o),
(514,330,qs),
(532,330,o),
(549,322,qs),
(580,304,o),
(580,268,qs),
(580,237,o),
(555,217,qs),
(520,190,o),
(483,193,qs),
(463,193,o),
(440,197,qs),
(360,213,o),
(315,274,qs),
(264,342,o),
(252,446,q),
(252,456,o),
(244,571,qs),
(242,585,o),
(236,586,qs),
(228,586,o),
(215,569,qs),
(174,522,o),
(115,522,qs),
(72,522,o),
(45,549,qs),
(27,567,o),
(27,594,qs),
(27,629,o),
(51,651,qs),
(67,665,o),
(88,666,qs),
(119,666,o),
(150,635,qs),
(164,621,o),
(178,621,qs),
(203,621,o),
(225,655,qs),
(243,688,o),
(244,731,qs),
(244,958,ls),
(244,1003,o),
(182,1004,qs),
(174,1004,o),
(172,1051,o),
(182,1051,qs),
(231,1047,o),
(313,1044,qs),
(395,1044,o),
(444,1051,q),
(452,1051,o),
(455,1004,o),
(444,1004,qs),
(383,1003,o),
(383,958,q),
(383,958,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
37 1 5 3 1 76 9 1 1 74 0 3 4 5 4 3 5 128 0 7 5 8 5 7 8 128 0 8 6 5 8 6 126 2 1 0 0 1 97 0 1 1 87 77 0 4 4 5 97 0 5 5 85 77 0 6 6 89 6 78 34 39 28 38 35 21 35 36 17 9 12 31 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni02B5;
unicode = 693;
},
{
glyphname = uni02B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(584,573,o),
(653,573,qs),
(663,573,o),
(664,528,o),
(653,528,qs),
(590,530,o),
(532,530,qs),
(475,530,o),
(389,528,o),
(356,528,qs),
(260,528,o),
(133,606,o),
(133,676,qs),
(133,782,o),
(233,811,qs),
(245,815,o),
(236,829,qs),
(191,892,o),
(139,944,qs),
(94,991,o),
(35,1024,q),
(25,1028,o),
(23,1036,q),
(23,1048,o),
(35,1049,q),
(129,1049,o),
(213,1014,o),
(274,952,o),
(324,885,o),
(344,858,o),
(371,823,o),
(379,823,qs),
(399,823,ls),
(428,823,o),
(446,821,o),
(446,831,qs),
(446,954,ls),
(446,979,o),
(416,999,o),
(383,999,qs),
(375,999,o),
(373,1044,o),
(383,1044,qs),
(438,1040,o),
(516,1040,qs),
(596,1040,o),
(649,1044,qs),
(657,1044,o),
(657,999,o),
(649,999,qs),
(583,999,o),
(584,954,qs),
(584,614,ls)
);
},
{
closed = 1;
nodes = (
(272,631,o),
(350,565,o),
(403,565,qs),
(434,565,o),
(446,571,o),
(446,582,qs),
(446,768,ls),
(446,780,o),
(434,782,q),
(397,784,o),
(393,784,qs),
(342,784,o),
(272,725,o),
(272,676,q),
(272,676,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
16 1 3 0 61 60 2 6 7 2 76 9 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 7 8 8 6 114 0 3 0 7 6 3 7 105 2 1 0 0 1 97 4 1 1 1 87 77 0 8 8 5 96 0 5 5 85 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 7 6 3 7 105 2 1 0 0 1 97 4 1 1 1 87 77 8 1 6 6 5 95 0 5 5 85 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
37 52 34 110 22 37 35 66 17 9 12 31 
CALL[ ]	/* CallFunction */";
};
width = 690;
}
);
note = uni02B6;
unicode = 694;
},
{
glyphname = uni02B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,995,o),
(6,995,qs),
(-2,995,o),
(-2,1038,o),
(6,1038,qs),
(45,1034,o),
(123,1034,qs),
(217,1034,o),
(254,1038,q),
(262,1038,o),
(262,995,o),
(254,995,qs),
(211,995,o),
(213,969,qs),
(213,959,o),
(215,944,q),
(301,680,ls),
(303,672,o),
(307,670,q),
(311,670,o),
(317,680,q),
(391,893,ls),
(393,901,o),
(393,913,o),
(391,920,q),
(377,952,ls),
(359,995,o),
(326,995,qs),
(316,995,o),
(315,1038,o),
(326,1038,q),
(363,1034,o),
(432,1034,qs),
(526,1034,o),
(563,1038,q),
(573,1038,o),
(573,995,o),
(563,995,qs),
(522,995,o),
(522,969,qs),
(522,961,o),
(526,944,q),
(610,680,ls),
(612,672,o),
(618,670,q),
(622,670,o),
(627,680,q),
(721,948,l),
(723,956,o),
(723,965,qs),
(723,998,o),
(668,995,qs),
(660,995,o),
(659,1038,o),
(668,1038,qs),
(707,1034,o),
(776,1034,qs),
(833,1034,o),
(870,1038,q),
(878,1038,o),
(879,995,o),
(870,995,qs),
(811,995,o),
(795,952,qs),
(639,549,ls),
(625,512,o),
(596,512,qs),
(563,512,o),
(549,543,qs),
(442,799,l),
(440,807,o),
(430,807,o),
(426,799,q),
(332,549,ls),
(318,512,o),
(285,512,qs),
(256,512,o),
(240,543,q),
(68,952,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
59 28 2 0 2 1 76 73 47 23 3 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
10 8 7 5 4 5 2 2 3 97 9 6 2 3 3 87 77 1 1 0 0 91 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
10 8 7 5 4 5 2 2 3 97 9 6 2 3 3 87 77 1 1 0 0 85 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
10 8 7 5 4 5 2 2 3 97 9 6 2 3 3 87 77 1 1 0 0 91 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
10 8 7 5 4 5 2 2 3 97 9 6 2 3 3 87 77 1 1 0 0 85 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
10 8 7 5 4 5 2 2 3 97 9 6 2 3 3 87 77 1 1 0 0 91 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
77 75 72 70 30 35 36 28 35 36 19 39 33 11 12 31 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uni02B7;
unicode = 695;
},
{
glyphname = uni02B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,234,o),
(174,211,qs),
(154,203,o),
(131,203,qs),
(94,203,o),
(72,229,qs),
(56,247,o),
(55,270,qs),
(55,307,o),
(92,326,qs),
(110,334,o),
(131,334,qs),
(192,334,o),
(205,356,q),
(252,467,ls),
(256,477,o),
(256,498,o),
(252,508,qs),
(88,963,ls),
(72,1006,o),
(25,1006,qs),
(17,1006,o),
(14,1049,o),
(25,1049,q),
(64,1045,o),
(145,1044,qs),
(233,1044,o),
(272,1049,q),
(280,1049,o),
(283,1006,o),
(272,1006,qs),
(225,1006,o),
(225,977,qs),
(225,969,o),
(229,954,q),
(322,700,ls),
(326,688,o),
(332,688,qs),
(340,688,o),
(344,702,q),
(442,954,l),
(444,962,o),
(446,969,q),
(446,1006,o),
(375,1006,qs),
(365,1006,o),
(365,1049,o),
(375,1049,q),
(412,1045,o),
(489,1044,qs),
(557,1044,o),
(594,1049,q),
(604,1049,o),
(604,1006,o),
(594,1006,qs),
(539,1006,o),
(518,971,q),
(252,297,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
24 19 14 3 6 0 1 76 33 9 2 1 74 5 3 2 3 0 0 1 97 4 1 1 1 87 77 0 6 6 7 97 0 7 7 89 7 78 38 39 35 36 28 35 36 17 8 12 30 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni02B8;
unicode = 696;
},
{
glyphname = uni02E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,522,o),
(172,524,qs),
(86,524,o),
(37,518,q),
(29,518,o),
(27,563,o),
(37,563,qs),
(100,563,o),
(98,604,q),
(98,1221,ls),
(98,1297,o),
(43,1294,qs),
(33,1294,o),
(35,1339,o),
(43,1339,qs),
(74,1339,o),
(156,1380,qs),
(195,1398,o),
(207,1409,qs),
(215,1415,o),
(221,1415,qs),
(239,1415,o),
(240,1397,q),
(236,1352,o),
(236,1294,qs),
(236,608,ls),
(236,563,o),
(299,563,qs),
(307,563,o),
(307,518,o),
(299,518,q),
(299,518,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
10 8 2 1 74 0 2 2 1 97 0 1 1 84 77 3 1 0 0 4 97 0 4 4 85 4 78 36 19 34 27 34 5 12 27 
CALL[ ]	/* CallFunction */";
};
width = 360;
}
);
note = uni02E1;
unicode = 737;
},
{
glyphname = uni02E2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,516,o),
(59,553,q),
(43,594,o),
(43,684,qs),
(43,694,o),
(63,696,qs),
(86,696,o),
(88,686,q),
(90,653,o),
(127,610,qs),
(166,565,o),
(223,563,qs),
(252,563,o),
(276,590,qs),
(296,610,o),
(297,635,qs),
(297,707,o),
(195,733,qs),
(89,762,o),
(51,823,qs),
(33,854,o),
(33,897,qs),
(33,965,o),
(92,1010,qs),
(147,1051,o),
(227,1053,qs),
(301,1053,o),
(358,1030,q),
(381,967,o),
(381,915,qs),
(381,905,o),
(362,903,qs),
(344,903,o),
(342,911,qs),
(332,942,o),
(295,979,qs),
(270,1004,o),
(219,1004,qs),
(182,1004,o),
(160,973,qs),
(146,955,o),
(147,934,qs),
(147,875,o),
(248,850,qs),
(344,825,o),
(383,778,qs),
(414,741,o),
(412,684,qs),
(412,604,o),
(344,555,qs),
(289,516,o),
(203,516,q),
(203,516,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
46 44 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 2 97 0 2 2 93 77 0 3 3 0 97 4 1 0 0 94 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 2 97 0 2 2 93 77 0 3 3 0 97 4 1 0 0 85 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 2 97 0 2 2 93 77 0 3 3 0 97 4 1 0 0 94 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 41 39 27 25 15 13 0 52 1 51 5 12 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = uni02E2;
unicode = 738;
},
{
glyphname = uni02E3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(567,565,o),
(610,565,qs),
(620,565,o),
(621,518,o),
(610,518,qs),
(563,522,o),
(479,524,qs),
(391,524,o),
(342,518,q),
(332,518,o),
(332,565,o),
(342,565,qs),
(391,565,o),
(391,580,qs),
(391,586,o),
(373,612,qs),
(309,702,l),
(305,706,o),
(299,709,q),
(295,709,o),
(289,702,qs),
(221,623,ls),
(192,588,o),
(195,580,q),
(195,566,o),
(229,565,qs),
(239,565,o),
(240,518,o),
(229,518,qs),
(182,522,o),
(131,524,qs),
(82,524,o),
(35,518,q),
(25,518,o),
(25,565,o),
(35,565,qs),
(94,565,o),
(127,604,qs),
(250,756,l),
(256,762,o),
(256,770,qs),
(256,776,o),
(254,784,q),
(121,952,ls),
(88,993,o),
(51,993,qs),
(43,993,o),
(43,1038,o),
(51,1038,qs),
(90,1034,o),
(180,1034,qs),
(272,1034,o),
(307,1038,q),
(317,1038,o),
(317,993,o),
(307,993,qs),
(270,993,o),
(270,979,qs),
(270,969,o),
(287,944,qs),
(332,883,ls),
(336,877,o),
(342,874,q),
(348,874,o),
(354,883,q),
(397,936,ls),
(417,961,o),
(418,975,qs),
(418,995,o),
(373,993,qs),
(363,993,o),
(365,1038,o),
(373,1038,q),
(410,1034,o),
(537,1034,o),
(573,1038,q),
(581,1038,o),
(584,993,o),
(573,993,qs),
(534,993,o),
(502,954,qs),
(393,825,ls),
(387,819,o),
(387,811,qs),
(387,805,o),
(393,797,qs),
(528,616,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
23 18 2 6 0 1 76 37 13 2 1 74 81 57 2 7 73 5 3 2 3 0 0 1 97 4 1 1 1 87 77 11 9 8 3 6 6 7 98 10 1 7 7 85 7 78 85 83 80 78 74 73 35 36 24 35 36 28 35 20 22 12 12 31 
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = uni02E3;
unicode = 739;
},
{
glyphname = beta;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(358,-262,o),
(500,-262,qs),
(514,-262,o),
(514,-338,o),
(500,-338,q),
(416,-330,o),
(248,-330,qs),
(105,-330,o),
(25,-338,q),
(9,-338,o),
(8,-262,o),
(25,-262,qs),
(127,-262,o),
(129,-178,qs),
(129,862,ls),
(129,1040,o),
(279,1208,qs),
(392,1333,o),
(590,1331,qs),
(787,1331,o),
(858,1231,qs),
(915,1149,o),
(915,1077,qs),
(915,895,o),
(725,782,qs),
(692,764,o),
(692,758,qs),
(692,748,o),
(721,741,qs),
(981,690,o),
(981,412,qs),
(981,234,o),
(864,98,qs),
(762,-23,o),
(526,-23,qs),
(430,-23,o),
(358,6,q),
(358,-176,ls)
);
},
{
closed = 1;
nodes = (
(727,575,o),
(684,637,qs),
(641,694,o),
(571,694,qs),
(514,694,o),
(457,678,qs),
(443,674,o),
(442,719,qs),
(442,758,o),
(457,758,qs),
(510,762,l),
(614,778,o),
(659,825,qs),
(716,886,o),
(713,1055,qs),
(711,1133,o),
(653,1188,qs),
(614,1229,o),
(526,1229,qs),
(465,1229,o),
(414,1180,qs),
(359,1127,o),
(358,1026,qs),
(358,121,l),
(415,58,o),
(571,57,qs),
(639,57,o),
(680,139,qs),
(727,235,o),
(727,389,q),
(727,389,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
60 1 7 6 44 1 5 7 0 1 0 5 3 76 32 1 3 73 0 7 6 5 6 7 5 128 0 5 0 0 2 5 0 105 0 6 6 1 97 0 1 1 40 77 4 1 2 2 3 97 0 3 3 41 3 78 45 37 37 35 36 21 46 33 8 8 30 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = beta;
unicode = 946;
},
{
glyphname = chi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1145,-336,o),
(1063,-442,qs),
(1016,-503,o),
(928,-506,qs),
(781,-508,o),
(680,-227,qs),
(600,6,l),
(348,-483,l),
(100,-483,l),
(500,303,l),
(412,565,ls),
(377,667,o),
(338,719,qs),
(303,764,o),
(246,766,qs),
(170,766,o),
(141,662,qs),
(137,650,o),
(121,545,q),
(121,539,o),
(86,539,qs),
(41,539,o),
(41,549,qs),
(43,717,o),
(119,809,qs),
(164,866,o),
(250,868,qs),
(414,874,o),
(473,696,qs),
(563,428,l),
(780,854,l),
(1034,854,l),
(664,129,l),
(741,-98,ls),
(843,-397,o),
(922,-399,qs),
(1010,-399,o),
(1047,-281,qs),
(1053,-258,o),
(1065,-182,q),
(1065,-176,o),
(1100,-176,qs),
(1145,-176,o),
(1145,-184,q),
(1145,-184,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
21 1 4 5 37 34 14 11 4 0 4 44 1 1 0 3 76 0 2 3 5 3 2 5 128 0 4 5 0 5 4 0 128 0 0 1 5 0 1 126 0 6 1 7 1 6 7 128 0 3 0 5 4 3 5 105 0 1 6 7 1 89 0 1 1 7 97 0 7 1 7 81 35 21 36 21 35 19 36 18 8 8 30 
CALL[ ]	/* CallFunction */";
};
width = 1159;
}
);
note = chi;
unicode = 967;
},
{
glyphname = uni03D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,1244,o),
(305,1389,o),
(414,1389,qs),
(576,1389,o),
(799,1264,o),
(965,1010,o),
(993,879,q),
(1042,889,o),
(1073,903,qs),
(1087,909,o),
(1100,909,qs),
(1143,909,o),
(1212,797,o),
(1212,768,qs),
(1212,754,o),
(1198,725,o),
(1178,715,qs),
(1115,688,o),
(1028,678,q),
(1036,617,o),
(1036,530,qs),
(1036,434,o),
(975,205,o),
(805,-2,o),
(682,-2,qs),
(578,-2,o),
(373,238,o),
(322,238,qs),
(297,238,o),
(262,195,o),
(252,111,o),
(211,86,o),
(193,86,qs),
(160,86,o),
(72,135,o),
(49,180,o),
(49,203,qs),
(49,264,o),
(180,428,o),
(260,428,qs),
(348,428,o),
(547,190,o),
(674,190,o),
(782,289,o),
(879,502,o),
(879,608,qs),
(879,647,o),
(877,676,q),
(613,678,o),
(299,786,o),
(137,985,o),
(137,1135,q),
(137,1135,l)
);
},
{
closed = 1;
nodes = (
(274,1007,o),
(420,901,o),
(705,868,o),
(848,866,q),
(838,919,o),
(768,1079,o),
(602,1210,o),
(477,1210,qs),
(389,1210,o),
(274,1138,o),
(274,1079,q),
(274,1079,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 8 9 8 6 9 128 0 3 1 5 4 3 114 0 7 0 8 6 7 8 105 0 9 0 0 2 9 0 105 0 2 0 4 1 2 4 105 0 1 3 5 1 89 0 1 1 5 97 0 5 1 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 6 8 9 8 6 9 128 0 3 1 5 1 3 5 128 0 7 0 8 6 7 8 105 0 9 0 0 2 9 0 105 0 2 0 4 1 2 4 105 0 1 3 5 1 89 0 1 1 5 97 0 5 1 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
61 60 37 39 28 33 36 21 33 21 19 10 8 31 
CALL[ ]	/* CallFunction */";
};
width = 1218;
}
);
note = uni03D1;
unicode = 977;
},
{
glyphname = uniA770;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(633,805,o),
(494,657,qs),
(400,557,o),
(256,506,q),
(246,506,l),
(226,510,o),
(213,543,q),
(209,561,l),
(209,571,o),
(215,575,qs),
(342,653,o),
(399,817,qs),
(432,909,o),
(432,1008,qs),
(432,1164,o),
(365,1243,qs),
(324,1292,o),
(264,1292,qs),
(184,1292,o),
(145,1235,qs),
(122,1204,o),
(123,1128,o),
(170,1108,qs),
(229,1079,ls),
(254,1065,o),
(264,1047,q),
(270,1024,l),
(270,1016,ls),
(270,961,o),
(217,936,qs),
(194,926,o),
(170,924,q),
(80,924,o),
(41,1008,qs),
(21,1051,o),
(20,1108,qs),
(20,1241,o),
(117,1327,qs),
(199,1399,o),
(303,1399,qs),
(491,1399,o),
(578,1245,q),
(600,1198,l),
(633,1114,o),
(633,1010,q),
(633,1010,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
17 1 1 2 1 76 40 37 2 1 73 0 1 2 1 134 0 2 2 0 97 0 0 0 86 2 78 45 22 36 3 12 25 
CALL[ ]	/* CallFunction */";
};
width = 698;
}
);
note = uniA770;
unicode = 42864;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(924,440,o),
(854,270,qs),
(737,-17,o),
(477,-16,qs),
(209,-16,o),
(96,274,qs),
(33,442,o),
(33,668,qs),
(33,899,o),
(111,1071,qs),
(228,1331,o),
(479,1333,qs),
(741,1333,o),
(854,1049,qs),
(924,874,o),
(924,643,q),
(924,643,l)
);
},
{
closed = 1;
nodes = (
(672,907,o),
(633,1069,qs),
(592,1243,o),
(481,1243,qs),
(323,1243,o),
(289,889,qs),
(281,801,o),
(281,680,qs),
(281,422,o),
(309,297,qs),
(360,76,o),
(475,76,qs),
(672,76,o),
(672,571,qs),
(672,633,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 3 0 97 0 0 0 68 77 0 2 2 1 97 0 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 3 2 0 3 105 0 2 2 1 97 0 1 1 69 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
38 37 38 35 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(614,156,o),
(649,113,qs),
(686,70,o),
(776,68,qs),
(790,68,o),
(791,-8,o),
(776,-8,q),
(696,0,o),
(494,0,qs),
(289,0,o),
(209,-8,q),
(195,-8,o),
(195,68,o),
(209,68,qs),
(318,68,o),
(354,119,qs),
(387,164,o),
(387,281,qs),
(387,1087,ls),
(387,1153,o),
(367,1145,qs),
(263,1110,o),
(205,1081,qs),
(185,1071,o),
(164,1135,o),
(182,1141,q),
(313,1196,o),
(530,1354,qs),
(557,1374,o),
(578,1374,qs),
(621,1374,o),
(621,1321,q),
(615,1249,o),
(614,1161,qs),
(614,283,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 1 0 1 76 27 1 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 74 77 3 1 1 1 2 97 0 2 2 69 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
3 1 1 0 2 1 2 101 0 0 0 74 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
35 36 30 35 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(783,-8,o),
(719,-8,q),
(584,0,o),
(473,0,qs),
(393,0,ls),
(231,0,o),
(51,-8,qs),
(-2,-8,o),
(-2,39,qs),
(-2,59,o),
(18,80,qs),
(178,240,o),
(334,451,qs),
(590,797,o),
(588,979,qs),
(584,1184,o),
(416,1184,qs),
(266,1184,o),
(174,1020,qs),
(162,997,o),
(127,1022,q),
(100,1038,o),
(109,1055,qs),
(191,1213,o),
(319,1286,qs),
(403,1333,o),
(496,1333,qs),
(660,1333,o),
(758,1223,qs),
(844,1127,o),
(844,989,qs),
(844,799,o),
(569,489,qs),
(510,423,o),
(279,193,q),
(575,193,ls),
(690,193,o),
(733,211,qs),
(782,234,o),
(811,291,qs),
(821,311,o),
(864,295,qs),
(903,281,o),
(897,266,qs),
(799,31,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 1 97 0 1 1 68 77 0 0 0 3 95 0 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 2 0 1 2 105 0 0 0 3 95 0 3 3 69 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
120 40 39 39 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(856,252,o),
(731,125,qs),
(588,-22,o),
(371,-23,qs),
(228,-23,o),
(137,27,qs),
(57,70,o),
(59,143,qs),
(59,239,o),
(180,240,qs),
(225,240,o),
(272,184,qs),
(324,125,ls),
(369,78,o),
(424,78,qs),
(524,78,o),
(578,211,qs),
(613,297,o),
(612,401,qs),
(612,534,o),
(530,610,qs),
(464,673,o),
(367,674,qs),
(308,674,o),
(260,657,q),
(231,657,o),
(231,713,qs),
(231,764,o),
(254,764,qs),
(408,764,o),
(496,848,qs),
(564,914,o),
(563,1008,qs),
(563,1108,o),
(508,1163,qs),
(469,1204,o),
(412,1204,qs),
(322,1204,o),
(244,1120,qs),
(213,1087,o),
(188,1049,qs),
(174,1029,o),
(139,1057,qs),
(112,1077,o),
(123,1094,qs),
(217,1235,o),
(305,1286,qs),
(383,1331,o),
(479,1333,qs),
(612,1333,o),
(702,1239,qs),
(788,1153,o),
(788,1032,qs),
(788,862,o),
(616,760,q),
(856,688,o),
(856,426,q),
(856,426,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
2 1 3 2 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
2 1 4 2 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
2 1 3 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
2 1 4 2 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 3 5 3 6 5 128 0 2 4 1 3 6 2 3 105 0 1 1 0 97 0 0 0 68 77 0 5 5 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 6 4 3 114 0 6 5 4 6 5 126 0 2 0 4 3 2 4 105 0 1 1 0 97 0 0 0 68 77 0 5 5 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 3 5 3 6 5 128 0 2 4 1 3 6 2 3 105 0 1 1 0 97 0 0 0 68 77 0 5 5 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 6 4 3 114 0 6 5 4 6 5 126 0 2 0 4 3 2 4 105 0 1 1 0 97 0 0 0 68 77 0 5 5 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 4 6 4 3 114 0 6 5 4 6 5 126 0 0 0 1 2 0 1 105 0 2 0 4 3 2 4 105 0 5 5 7 97 0 7 7 69 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 35 38 33 18 38 42 39 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(768,68,o),
(870,68,qs),
(884,68,o),
(885,-8,o),
(870,-8,q),
(790,0,o),
(662,0,qs),
(484,0,o),
(399,-8,q),
(385,-8,o),
(385,68,o),
(399,68,qs),
(540,68,o),
(541,156,qs),
(541,371,l),
(80,371,ls),
(-6,371,o),
(-6,428,qs),
(-6,477,o),
(45,551,q),
(334,934,ls),
(522,1184,o),
(571,1264,qs),
(666,1413,l),
(680,1429,o),
(711,1430,qs),
(797,1430,o),
(795,1376,qs),
(795,1368,o),
(791,1360,q),
(174,545,ls),
(166,533,o),
(166,522,qs),
(166,504,o),
(184,504,qs),
(541,504,l),
(541,932,ls),
(541,955,o),
(653,954,qs),
(768,954,o),
(768,932,qs),
(768,504,l),
(891,504,ls),
(905,504,o),
(905,438,qs),
(905,370,o),
(891,371,qs),
(768,371,l),
(768,156,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
20 1 2 4 3 1 0 1 2 76 43 1 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 4 1 4 2 1 128 3 1 1 5 1 0 6 1 0 103 0 4 4 74 77 8 1 6 6 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 2 4 133 0 2 1 2 133 3 1 1 5 1 0 6 1 0 103 8 1 6 6 7 97 0 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 2 4 133 0 2 1 2 133 3 1 1 5 1 0 6 1 0 103 8 1 6 7 7 6 89 8 1 6 6 7 97 0 7 6 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
35 36 18 40 40 18 34 35 16 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(850,309,o),
(733,168,qs),
(583,-14,o),
(334,-16,qs),
(187,-16,o),
(111,35,qs),
(56,72,o),
(55,129,qs),
(55,182,o),
(90,209,qs),
(121,232,o),
(170,231,qs),
(231,231,o),
(274,178,qs),
(348,92,o),
(418,92,qs),
(524,90,o),
(598,201,qs),
(659,291,o),
(659,397,qs),
(659,551,o),
(555,635,qs),
(471,703,o),
(344,702,qs),
(278,702,o),
(207,682,qs),
(191,678,o),
(180,678,qs),
(143,678,o),
(147,711,qs),
(190,990,o),
(244,1262,qs),
(254,1317,o),
(313,1317,qs),
(815,1317,ls),
(821,1317,o),
(821,1296,qs),
(821,1278,o),
(815,1241,qs),
(799,1128,o),
(780,1130,q),
(365,1130,ls),
(330,1130,o),
(328,1116,q),
(305,1024,o),
(297,926,q),
(297,910,o),
(311,911,qs),
(352,917,o),
(383,918,qs),
(614,918,o),
(741,793,qs),
(850,682,o),
(850,504,q),
(850,504,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 0 1 6 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 6 4 3 6 128 0 6 5 5 6 112 0 1 1 2 95 0 2 2 68 77 0 4 4 0 97 0 0 0 71 77 0 5 5 7 98 0 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 1 1 2 95 0 2 2 68 77 0 4 4 0 97 0 0 0 71 77 0 5 5 7 98 0 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 0 0 4 3 0 4 105 0 1 1 2 95 0 2 2 68 77 0 5 5 7 98 0 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 2 0 1 0 2 1 103 0 0 0 4 3 0 4 105 0 5 5 7 98 0 7 7 69 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 38 35 20 53 23 35 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(901,240,o),
(793,123,qs),
(668,-14,o),
(473,-16,qs),
(248,-16,o),
(137,170,qs),
(61,299,o),
(63,475,qs),
(63,731,o),
(242,977,qs),
(447,1260,o),
(762,1384,q),
(764,1384,o),
(768,1386,q),
(782,1386,o),
(793,1360,qs),
(799,1344,o),
(799,1323,o),
(793,1321,q),
(553,1190,o),
(422,934,qs),
(361,813,o),
(330,686,q),
(389,762,o),
(485,788,qs),
(518,796,o),
(549,797,qs),
(711,797,o),
(813,666,qs),
(901,556,o),
(901,406,q),
(901,406,l)
);
},
{
closed = 1;
nodes = (
(682,448,o),
(623,547,qs),
(564,643,o),
(469,643,qs),
(379,643,o),
(309,565,q),
(301,524,o),
(301,473,qs),
(301,88,o),
(498,88,qs),
(604,88,o),
(653,201,qs),
(682,266,o),
(682,348,q),
(682,348,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
8 1 3 0 1 76 0 0 0 3 2 0 3 105 0 2 2 1 97 0 1 1 69 1 78 43 41 37 35 28 26 35 4 11 23 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(398,-23,o),
(313,-23,qs),
(225,-23,o),
(178,2,q),
(174,6,o),
(174,20,q),
(723,1141,l),
(426,1141,ls),
(311,1141,o),
(254,1112,qs),
(191,1079,o),
(160,1012,q),
(154,996,o),
(119,995,qs),
(66,995,o),
(70,1018,qs),
(121,1260,ls),
(129,1299,o),
(139,1309,qs),
(149,1317,o),
(176,1317,qs),
(858,1317,ls),
(913,1317,o),
(913,1284,qs),
(913,1276,o),
(909,1264,qs),
(406,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 95 0 0 0 68 77 0 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 103 0 3 3 69 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
36 36 37 51 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,190,o),
(768,86,qs),
(645,-16,o),
(477,-16,qs),
(307,-16,o),
(190,76,qs),
(67,172,o),
(68,334,qs),
(68,512,o),
(322,662,q),
(105,795,o),
(104,989,qs),
(104,1134,o),
(213,1237,qs),
(317,1333,o),
(477,1333,qs),
(659,1333,o),
(762,1235,qs),
(848,1151,o),
(846,1018,qs),
(846,838,o),
(635,717,q),
(889,565,o),
(889,348,q),
(889,348,l)
);
},
{
closed = 1;
nodes = (
(633,1118,o),
(565,1188,qs),
(520,1233,o),
(453,1233,qs),
(365,1233,o),
(319,1153,qs),
(294,1108,o),
(295,1053,qs),
(295,918,o),
(524,780,q),
(633,844,o),
(633,979,q),
(633,979,l)
);
},
{
closed = 1;
nodes = (
(672,447,o),
(426,596,q),
(297,520,o),
(297,352,qs),
(297,235,o),
(358,154,qs),
(417,76,o),
(598,76,o),
(645,166,qs),
(672,218,o),
(672,281,q),
(672,281,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
47 27 14 2 4 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 0 97 0 0 0 68 77 0 3 3 1 97 0 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 2 3 0 2 105 0 3 3 1 97 0 1 1 69 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
23 43 42 39 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(893,549,o),
(657,283,qs),
(481,84,o),
(215,-41,qs),
(197,-49,o),
(176,-8,qs),
(164,17,o),
(166,29,q),
(166,39,o),
(172,43,qs),
(375,156,o),
(477,301,qs),
(563,420,o),
(625,627,q),
(578,580,o),
(496,551,qs),
(453,537,o),
(416,535,q),
(250,535,o),
(154,645,qs),
(56,760,o),
(55,893,qs),
(55,1081,o),
(166,1202,qs),
(287,1333,o),
(483,1333,qs),
(690,1333,o),
(803,1167,qs),
(893,1032,o),
(893,854,q),
(893,854,l)
);
},
{
closed = 1;
nodes = (
(653,1227,o),
(453,1227,qs),
(347,1227,o),
(303,1094,qs),
(285,1033,o),
(285,958,qs),
(285,854,o),
(340,768,qs),
(397,676,o),
(481,674,qs),
(581,674,o),
(641,733,q),
(653,778,o),
(653,852,q),
(653,852,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 1 2 1 101 0 3 3 0 97 0 0 0 68 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
44 42 36 34 38 35 4 11 24 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = nine;
unicode = 57;
},
{
glyphname = zero.zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(924,440,o),
(854,270,qs),
(737,-16,o),
(477,-16,qs),
(209,-16,o),
(96,274,qs),
(33,442,o),
(33,668,qs),
(33,899,o),
(111,1071,qs),
(228,1331,o),
(479,1333,qs),
(741,1333,o),
(854,1049,qs),
(924,874,o),
(924,643,q),
(924,643,l)
);
},
{
closed = 1;
nodes = (
(645,1037,o),
(625,1098,qs),
(578,1243,o),
(481,1243,qs),
(380,1243,o),
(281,958,o),
(281,680,qs),
(281,608,o),
(283,545,q),
(656,945,l)
);
},
{
closed = 1;
nodes = (
(301,348,l),
(314,263,o),
(335,209,qs),
(389,76,o),
(475,76,qs),
(573,76,o),
(672,322,o),
(672,633,qs),
(672,692,o),
(670,744,q),
(670,744,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
37 36 26 17 4 0 73 0 2 0 0 2 0 101 0 3 3 1 97 0 1 1 33 3 78 40 40 38 35 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = zero.zero;
},
{
glyphname = nine.oldstsyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(944,288,o),
(889,147,qs),
(828,-9,o),
(725,-113,qs),
(571,-267,o),
(401,-352,qs),
(290,-407,o),
(121,-463,q),
(109,-463,l),
(91,-457,o),
(86,-428,q),
(88,-414,ls),
(90,-404,o),
(100,-399,q),
(352,-301,o),
(535,-37,qs),
(574,16,o),
(616,92,q),
(624,104,o),
(625,115,q),
(623,125,l),
(614,129,l),
(602,127,l),
(596,125,l),
(535,84,o),
(451,84,qs),
(308,84,o),
(205,166,qs),
(78,264,o),
(78,442,qs),
(78,551,o),
(139,655,qs),
(239,831,o),
(449,864,qs),
(492,870,o),
(539,870,qs),
(795,870,o),
(895,653,qs),
(944,542,o),
(944,397,q),
(944,397,l)
);
},
{
closed = 1;
nodes = (
(713,594,o),
(657,686,qs),
(598,784,o),
(494,784,qs),
(441,784,o),
(389,733,qs),
(307,651,o),
(307,498,qs),
(307,363,o),
(367,283,qs),
(414,215,o),
(489,215,qs),
(604,215,o),
(668,313,qs),
(713,381,o),
(713,465,q),
(713,465,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
28 18 2 0 73 0 1 0 2 3 1 2 109 0 3 0 0 3 93 0 3 3 0 97 0 0 3 0 81 54 52 46 44 40 35 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1009;
}
);
note = nine.oldstsyle;
},
{
glyphname = zero.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1044,256,o),
(928,129,qs),
(813,6,o),
(643,-18,qs),
(606,-24,o),
(569,-25,qs),
(389,-25,o),
(254,88,qs),
(127,197,o),
(100,354,qs),
(94,389,o),
(94,424,qs),
(94,594,o),
(213,719,qs),
(328,842,o),
(500,866,qs),
(535,870,o),
(569,870,qs),
(751,870,o),
(887,758,qs),
(918,731,o),
(942,700,qs),
(1044,580,o),
(1044,424,q),
(1044,424,l)
);
},
{
closed = 1;
nodes = (
(682,725,o),
(569,725,qs),
(458,725,o),
(295,545,o),
(295,420,qs),
(295,297,o),
(459,117,o),
(569,115,qs),
(682,115,o),
(846,295,o),
(846,545,o),
(764,637,q),
(764,637,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 3 0 0 3 0 101 0 2 2 1 97 0 1 1 33 2 78 36 41 42 37 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1089;
}
);
note = zero.oldstyle;
},
{
glyphname = one.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(485,0,o),
(360,0,qs),
(221,0,o),
(139,-8,q),
(125,-8,o),
(125,29,qs),
(127,53,l),
(131,67,o),
(139,68,q),
(200,68,o),
(221,90,qs),
(237,108,o),
(238,143,qs),
(238,705,ls),
(238,773,o),
(172,778,qs),
(139,780,ls),
(125,780,o),
(125,817,qs),
(127,842,l),
(131,856,o),
(139,856,qs),
(200,850,o),
(360,850,qs),
(505,850,o),
(567,856,q),
(581,856,o),
(584,819,q),
(580,795,l),
(573,782,l),
(567,780,l),
(514,780,o),
(492,764,q),
(479,752,l),
(467,734,o),
(467,702,qs),
(467,145,ls),
(467,67,o),
(555,68,qs),
(565,68,l),
(567,68,ls),
(581,68,o),
(584,31,q),
(580,6,l),
(575,-8,o),
(567,-8,q),
(567,-8,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
24 1 5 74 40 27 18 3 4 2 73 3 1 1 0 2 0 1 2 131 0 2 2 132 4 1 0 0 5 97 0 5 5 33 0 78 38 22 37 38 22 68 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = one.oldstyle;
},
{
glyphname = two.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(893,121,o),
(846,-8,q),
(772,0,o),
(717,0,qs),
(303,0,ls),
(217,0,o),
(139,-8,q),
(115,-6,l),
(90,0,o),
(90,18,q),
(94,35,l),
(104,58,o),
(135,80,qs),
(252,162,o),
(391,350,qs),
(393,352,o),
(395,356,q),
(479,473,o),
(479,563,qs),
(479,639,o),
(426,682,qs),
(395,707,o),
(358,707,qs),
(264,707,o),
(211,662,qs),
(191,646,o),
(156,602,qs),
(152,596,o),
(139,596,qs),
(112,596,o),
(92,616,qs),
(84,624,o),
(82,633,q),
(82,635,o),
(84,639,qs),
(135,725,o),
(141,733,qs),
(211,833,o),
(328,860,qs),
(377,870,o),
(436,870,qs),
(542,870,o),
(623,815,qs),
(711,756,o),
(711,659,qs),
(711,524,o),
(571,375,qs),
(426,221,l),
(410,205,ls),
(398,191,o),
(397,180,q),
(399,170,l),
(405,162,o),
(426,162,qs),
(756,162,ls),
(809,162,o),
(856,244,qs),
(872,274,l),
(878,282,o),
(893,283,q),
(913,279,l),
(946,269,o),
(950,252,q),
(950,244,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
63 56 53 28 3 5 1 73 0 2 0 3 0 2 3 131 0 3 0 1 3 1 101 0 0 0 4 95 0 4 4 33 0 78 60 57 37 26 43 55 5 7 26 
CALL[ ]	/* CallFunction */";
};
width = 940;
}
);
note = two.oldstyle;
},
{
glyphname = three.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(696,-43,o),
(506,-205,qs),
(381,-307,o),
(240,-356,qs),
(183,-376,o),
(150,-377,qs),
(54,-377,o),
(35,-311,q),
(31,-287,l),
(31,-232,o),
(82,-213,q),
(98,-209,o),
(117,-209,qs),
(133,-209,o),
(172,-231,qs),
(207,-254,o),
(233,-254,qs),
(311,-254,o),
(377,-172,qs),
(459,-72,o),
(461,74,qs),
(461,82,ls),
(461,176,o),
(410,238,qs),
(367,293,o),
(299,293,qs),
(258,293,o),
(186,250,q),
(178,250,l),
(160,254,o),
(145,287,qs),
(139,299,o),
(139,309,qs),
(139,317,o),
(145,322,q),
(272,390,o),
(319,426,qs),
(425,510,o),
(426,602,qs),
(426,708,o),
(354,739,qs),
(327,751,o),
(293,752,qs),
(215,752,o),
(133,651,q),
(125,649,l),
(107,649,o),
(86,670,q),
(78,680,o),
(80,688,q),
(80,692,l),
(115,768,o),
(203,819,qs),
(289,870,o),
(385,870,qs),
(508,870,o),
(584,805,qs),
(656,744,o),
(655,637,qs),
(655,539,o),
(502,446,qs),
(486,436,o),
(485,416,o),
(506,406,qs),
(608,359,o),
(662,272,qs),
(696,213,o),
(696,154,q),
(696,154,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
59 39 17 3 0 73 0 3 5 4 5 3 4 131 0 2 4 1 4 2 1 131 0 5 0 4 2 5 4 109 0 1 0 0 1 93 0 1 1 0 98 0 0 1 0 82 37 34 39 47 42 44 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = three.oldstyle;
},
{
glyphname = four.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(782,35,ls),
(759,35,o),
(760,4,qs),
(760,-362,ls),
(760,-385,o),
(670,-389,qs),
(604,-389,l),
(528,-383,o),
(530,-362,q),
(530,4,ls),
(530,31,o),
(512,35,q),
(504,35,l),
(55,35,ls),
(20,35,o),
(16,66,q),
(16,84,l),
(20,98,o),
(31,111,qs),
(641,858,ls),
(666,889,o),
(696,887,qs),
(733,887,o),
(752,854,qs),
(760,840,o),
(760,827,qs),
(760,199,ls),
(760,170,o),
(782,170,qs),
(930,170,ls),
(948,170,o),
(952,115,q),
(952,76,l),
(946,35,o),
(930,35,q),
(930,35,l)
);
},
{
closed = 1;
nodes = (
(530,528,ls),
(530,546,o),
(520,549,q),
(510,545,ls),
(506,543,o),
(502,537,qs),
(240,203,ls),
(234,195,o),
(233,178,o),
(246,170,o),
(258,170,qs),
(504,170,ls),
(530,170,o),
(530,199,q),
(530,199,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
49 47 26 9 3 2 6 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 5 1 0 1 2 0 107 0 3 3 1 97 0 1 1 32 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 3 2 1 3 93 4 1 2 5 1 0 1 2 0 107 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 35 38 38 37 52 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 942;
}
);
note = four.oldstyle;
},
{
glyphname = five.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(758,854,o),
(758,811,qs),
(758,791,o),
(750,766,qs),
(732,707,o),
(692,692,q),
(684,688,o),
(674,688,qs),
(340,688,ls),
(270,688,o),
(246,635,qs),
(238,617,o),
(236,596,qs),
(236,578,o),
(244,563,q),
(254,549,l),
(258,545,o),
(264,541,qs),
(500,402,o),
(578,260,qs),
(631,166,o),
(631,49,qs),
(631,-70,o),
(526,-227,qs),
(424,-383,o),
(287,-471,qs),
(252,-494,o),
(219,-508,q),
(207,-510,l),
(187,-508,o),
(172,-479,qs),
(166,-469,o),
(166,-459,qs),
(166,-451,o),
(172,-444,q),
(367,-274,o),
(395,-68,qs),
(399,-27,o),
(401,14,qs),
(401,145,o),
(295,240,qs),
(244,283,l),
(152,348,ls),
(146,352,o),
(141,358,q),
(98,395,o),
(92,455,q),
(92,481,ls),
(92,569,o),
(166,705,qs),
(195,754,o),
(225,797,qs),
(260,848,o),
(315,854,q),
(326,854,l),
(727,854,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
26 22 8 3 1 73 0 0 1 1 0 91 0 0 0 1 95 2 1 1 0 1 79 0 0 0 55 0 54 47 45 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = five.oldstyle;
},
{
glyphname = six.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(792,1183,o),
(627,1020,qs),
(508,903,o),
(438,762,q),
(432,746,o),
(430,735,q),
(432,725,l),
(436,719,o),
(444,719,qs),
(450,719,o),
(463,723,q),
(524,754,o),
(590,754,qs),
(727,754,o),
(831,678,qs),
(962,580,o),
(963,395,qs),
(963,286,o),
(901,180,qs),
(799,6,o),
(588,-25,qs),
(547,-31,o),
(502,-31,qs),
(244,-31,o),
(145,186,qs),
(96,297,o),
(96,440,qs),
(96,551,o),
(152,692,qs),
(213,848,o),
(317,952,qs),
(485,1120,o),
(682,1208,qs),
(805,1263,o),
(973,1307,q),
(985,1307,l),
(1003,1301,o),
(1008,1274,q),
(1006,1260,l),
(1003,1251,o),
(995,1249,q),
(995,1249,l)
);
},
{
closed = 1;
nodes = (
(733,453,o),
(682,539,qs),
(651,588,o),
(610,610,qs),
(581,624,o),
(551,625,qs),
(434,625,o),
(371,516,qs),
(328,442,o),
(326,354,qs),
(326,260,o),
(371,176,qs),
(434,55,o),
(559,57,qs),
(612,57,o),
(659,106,qs),
(733,182,o),
(733,340,q),
(733,340,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
2 1 0 74 32 1 1 73 0 3 0 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 55 53 47 45 29 27 19 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1054;
}
);
note = six.oldstyle;
},
{
glyphname = seven.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,-399,ls),
(254,-407,o),
(240,-408,qs),
(207,-408,o),
(172,-381,qs),
(154,-365,o),
(152,-350,qs),
(152,-346,o),
(154,-344,q),
(618,631,ls),
(622,639,o),
(623,651,o),
(618,655,q),
(610,664,l),
(602,670,o),
(590,670,qs),
(223,670,ls),
(172,670,o),
(154,651,q),
(146,645,o),
(113,592,qs),
(111,588,o),
(102,575,o),
(90,575,qs),
(80,575,o),
(68,580,qs),
(37,590,o),
(33,608,q),
(33,614,l),
(58,675,o),
(80,791,q),
(96,854,o),
(154,854,qs),
(739,854,ls),
(807,854,o),
(811,807,q),
(811,782,l),
(807,768,o),
(801,754,q),
(801,754,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
30 15 10 3 0 73 0 2 1 2 136 0 1 0 0 1 91 0 1 1 0 96 0 0 1 0 80 28 46 52 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 835;
}
);
note = seven.oldstyle;
},
{
glyphname = eight.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(795,141,o),
(678,47,qs),
(582,-31,o),
(453,-31,qs),
(234,-31,o),
(127,86,qs),
(55,164,o),
(57,276,qs),
(57,411,o),
(219,539,q),
(242,555,o),
(293,590,q),
(156,699,o),
(98,817,qs),
(69,876,o),
(70,930,qs),
(70,1028,o),
(135,1120,qs),
(235,1259,o),
(426,1272,q),
(457,1272,ls),
(578,1272,o),
(676,1198,qs),
(787,1110,o),
(788,983,qs),
(788,817,o),
(651,707,qs),
(618,680,o),
(578,657,q),
(693,577,o),
(741,498,qs),
(795,410,o),
(795,299,q),
(795,299,l)
);
},
{
closed = 1;
nodes = (
(561,1110,o),
(508,1161,qs),
(479,1192,o),
(434,1192,qs),
(360,1192,o),
(322,1114,qs),
(297,1061,o),
(297,985,qs),
(297,858,o),
(432,756,qs),
(452,742,o),
(477,727,q),
(561,821,o),
(561,991,q),
(561,991,l)
);
},
{
closed = 1;
nodes = (
(563,373,o),
(457,469,qs),
(426,498,o),
(383,524,q),
(305,458,o),
(291,328,qs),
(289,303,o),
(287,281,q),
(287,154,o),
(352,88,qs),
(389,51,o),
(430,51,qs),
(561,51,o),
(563,227,qs),
(563,242,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
59 55 36 21 4 5 0 73 0 2 0 0 2 0 101 0 3 3 1 97 0 1 1 33 3 78 37 45 46 59 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 849;
}
);
note = eight.oldstyle;
},
{
glyphname = zero.oldstylezero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1044,239,o),
(774,-19,o),
(569,-25,qs),
(362,-25,o),
(94,249,o),
(94,424,qs),
(94,594,o),
(354,870,o),
(784,870,o),
(1044,594,o),
(1044,424,q),
(1044,424,l)
);
},
{
closed = 1;
nodes = (
(489,116,o),
(569,115,qs),
(682,115,o),
(846,295,o),
(846,420,qs),
(846,495,o),
(816,558,q),
(423,165,l)
);
},
{
closed = 1;
nodes = (
(650,725,o),
(569,725,qs),
(458,725,o),
(295,545,o),
(295,420,qs),
(295,349,o),
(323,288,q),
(715,680,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
27 19 2 0 73 0 3 0 0 3 0 101 0 2 2 1 97 0 1 1 33 2 78 38 39 36 18 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1089;
}
);
note = zero.oldstylezero;
},
{
glyphname = uni00B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,526,o),
(322,526,qs),
(164,526,o),
(125,522,qs),
(117,522,o),
(117,582,o),
(125,582,qs),
(197,582,o),
(238,631,o),
(238,698,qs),
(238,1208,ls),
(238,1237,o),
(217,1237,q),
(197,1233,l),
(146,1215,o),
(123,1210,q),
(117,1212,l),
(103,1224,o),
(102,1247,qs),
(102,1259,o),
(109,1262,qs),
(302,1325,o),
(393,1374,qs),
(399,1378,o),
(410,1378,qs),
(418,1378,o),
(420,1366,q),
(420,1360,ls),
(418,1342,o),
(418,1253,qs),
(418,698,ls),
(418,618,o),
(455,582,o),
(516,582,qs),
(524,582,o),
(524,553,qs),
(522,528,l),
(518,522,o),
(516,522,q),
(516,522,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
22 1 0 1 3 1 3 0 2 76 20 11 2 1 74 0 1 0 1 133 2 1 0 0 3 97 0 3 3 85 3 78 38 36 32 31 27 26 36 4 12 23 
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = uni00B9;
unicode = 185;
},
{
glyphname = uni00B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,514,o),
(473,514,qs),
(389,518,o),
(319,520,qs),
(270,520,ls),
(170,520,o),
(59,514,qs),
(26,514,o),
(27,545,qs),
(27,557,o),
(39,569,qs),
(137,667,o),
(233,799,qs),
(391,1014,o),
(391,1126,qs),
(389,1253,o),
(285,1253,qs),
(193,1253,o),
(135,1151,q),
(129,1137,o),
(104,1153,qs),
(88,1163,o),
(94,1174,qs),
(143,1272,o),
(225,1317,qs),
(276,1346,o),
(336,1346,qs),
(438,1346,o),
(498,1278,qs),
(551,1219,o),
(551,1133,qs),
(551,1014,o),
(381,823,qs),
(344,782,o),
(201,639,q),
(385,639,ls),
(457,639,o),
(481,651,qs),
(512,665,o),
(530,700,qs),
(536,712,o),
(563,702,qs),
(588,694,o),
(584,684,qs),
(522,539,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
21 1 0 2 1 76 0 2 2 1 97 0 1 1 84 77 0 0 0 3 95 0 3 3 85 3 78 120 40 39 39 4 12 26 
CALL[ ]	/* CallFunction */";
};
width = 624;
}
);
note = uni00B2;
unicode = 178;
},
{
glyphname = uni00B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(530,675,o),
(455,598,qs),
(367,506,o),
(229,506,qs),
(141,506,o),
(86,537,qs),
(37,564,o),
(37,608,qs),
(37,667,o),
(113,670,qs),
(142,670,o),
(170,635,qs),
(201,598,l),
(230,569,o),
(262,567,qs),
(325,567,o),
(358,651,qs),
(378,704,o),
(379,768,qs),
(379,850,o),
(330,899,qs),
(289,938,o),
(227,938,qs),
(190,938,o),
(162,928,q),
(146,928,o),
(143,963,q),
(143,996,o),
(158,993,q),
(252,993,o),
(307,1047,qs),
(350,1088,o),
(348,1145,qs),
(348,1206,o),
(315,1241,qs),
(290,1266,o),
(256,1266,qs),
(201,1266,o),
(152,1214,qs),
(134,1194,o),
(117,1169,qs),
(109,1157,o),
(86,1176,qs),
(70,1188,o),
(76,1198,qs),
(135,1284,o),
(188,1319,qs),
(235,1348,o),
(297,1346,qs),
(379,1346,o),
(436,1288,qs),
(489,1235,o),
(489,1159,qs),
(489,1053,o),
(383,991,q),
(530,948,o),
(530,784,q),
(530,784,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
12 1 2 1 30 2 2 3 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 3 4 3 5 4 128 0 1 1 0 97 0 0 0 84 77 0 3 3 2 97 0 2 2 87 77 0 4 4 6 97 0 6 6 91 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 84 77 0 4 4 6 97 0 6 6 91 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 35 38 37 22 42 39 7 12 29 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = uni00B3;
unicode = 179;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,-18,ls),
(117,-26,o),
(100,-27,qs),
(59,-27,o),
(12,2,qs),
(-17,18,o),
(-14,33,q),
(-14,39,l),
(596,1479,ls),
(598,1485,o),
(614,1487,q),
(657,1487,o),
(705,1458,qs),
(732,1444,o),
(733,1432,qs),
(733,1423,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
15 1 1 0 1 76 0 0 0 70 77 0 1 1 75 1 78 23 19 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni215F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,620,o),
(446,567,o),
(502,567,qs),
(510,567,o),
(512,520,o),
(502,520,qs),
(453,524,o),
(201,524,o),
(152,520,qs),
(144,520,o),
(141,567,o),
(152,567,qs),
(220,567,o),
(260,627,o),
(260,698,qs),
(260,1198,ls),
(260,1239,o),
(248,1235,qs),
(182,1212,o),
(147,1194,qs),
(135,1188,o),
(123,1229,o),
(133,1233,qs),
(215,1268,o),
(350,1364,qs),
(366,1376,o),
(379,1376,qs),
(406,1376,o),
(406,1343,q),
(402,1300,o),
(401,1245,qs),
(401,700,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
2 1 5 0 15 13 8 3 1 5 25 1 4 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 5 0 1 0 5 1 128 0 2 4 1 2 89 0 0 0 74 77 3 1 1 1 4 95 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
6 1 5 0 1 0 5 1 128 0 2 4 1 2 89 3 1 1 0 4 1 4 99 0 0 0 74 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
32 32 32 35 32 35 20 35 50 30 19 7 11 27 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni215F;
unicode = 8543;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1383,-7,o),
(1343,-4,qs),
(1259,0,o),
(1190,0,qs),
(1141,0,ls),
(1041,0,o),
(930,-4,qs),
(897,-4,o),
(897,25,qs),
(897,37,o),
(907,49,q),
(1005,147,o),
(1104,279,qs),
(1262,494,o),
(1262,606,qs),
(1260,733,o),
(1155,733,qs),
(1063,733,o),
(1006,633,q),
(1000,619,o),
(975,633,qs),
(959,643,o),
(965,653,qs),
(1014,751,o),
(1096,797,qs),
(1147,826,o),
(1204,825,qs),
(1306,825,o),
(1366,758,qs),
(1419,699,o),
(1419,612,qs),
(1419,493,o),
(1249,303,qs),
(1212,262,o),
(1069,121,q),
(1253,121,ls),
(1325,121,o),
(1352,131,qs),
(1383,145,o),
(1401,180,qs),
(1407,192,o),
(1434,182,qs),
(1459,174,o),
(1454,166,q),
(1393,18,ls)
);
},
{
closed = 1;
nodes = (
(401,620,o),
(446,567,o),
(502,567,qs),
(510,567,o),
(512,520,o),
(502,520,qs),
(453,524,o),
(201,524,o),
(152,520,qs),
(144,520,o),
(141,567,o),
(152,567,qs),
(220,567,o),
(260,627,o),
(260,698,qs),
(260,1198,ls),
(260,1239,o),
(248,1235,qs),
(182,1212,o),
(147,1194,qs),
(135,1188,o),
(123,1229,o),
(133,1233,qs),
(215,1268,o),
(350,1364,qs),
(366,1376,o),
(379,1376,qs),
(406,1376,o),
(406,1343,q),
(402,1300,o),
(401,1245,qs),
(401,700,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 83 values pushed */
47 1 9 4 60 58 53 3 1 9 21 1 5 2 70 1 0 6 4 76 0 4 9 4 133 10 1 9 1 9 133 0 1 0 2 5 1 2 105 7 1 5 0 6 0 5 6 105 0 0 3 3 0 87 0 0 0 3 95 8 1 3 0 3 79 77 77 77 80 77 80 20 35 50 30 22 104 40 39 39 11 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1507;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = uni2153;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1444,155,o),
(1366,78,qs),
(1278,-14,o),
(1145,-14,qs),
(1057,-14,o),
(999,16,qs),
(950,43,o),
(950,88,qs),
(950,147,o),
(1026,150,qs),
(1055,150,o),
(1083,115,qs),
(1114,78,l),
(1143,49,o),
(1176,47,qs),
(1239,47,o),
(1272,131,qs),
(1292,184,o),
(1292,250,qs),
(1292,332,o),
(1243,379,qs),
(1202,418,o),
(1141,418,qs),
(1104,418,o),
(1075,408,q),
(1059,408,o),
(1057,442,qs),
(1057,475,o),
(1071,473,q),
(1165,473,o),
(1221,526,qs),
(1264,567,o),
(1264,625,qs),
(1264,686,o),
(1229,723,qs),
(1204,748,o),
(1169,745,q),
(1114,745,o),
(1065,694,qs),
(1047,674,o),
(1030,649,qs),
(1022,637,o),
(999,655,qs),
(983,667,o),
(989,678,q),
(1048,764,o),
(1104,799,qs),
(1151,828,o),
(1210,825,qs),
(1292,825,o),
(1350,768,qs),
(1403,713,o),
(1403,639,qs),
(1403,533,o),
(1294,471,q),
(1444,428,o),
(1444,264,q),
(1444,264,l)
);
},
{
closed = 1;
nodes = (
(401,620,o),
(446,567,o),
(502,567,qs),
(510,567,o),
(512,520,o),
(502,520,qs),
(453,524,o),
(201,524,o),
(152,520,qs),
(144,520,o),
(141,567,o),
(152,567,qs),
(220,567,o),
(260,627,o),
(260,698,qs),
(260,1198,ls),
(260,1239,o),
(248,1235,qs),
(182,1212,o),
(147,1194,qs),
(135,1188,o),
(123,1229,o),
(133,1233,qs),
(215,1268,o),
(350,1364,qs),
(366,1376,o),
(379,1376,qs),
(406,1376,o),
(406,1343,q),
(402,1300,o),
(401,1245,qs),
(401,700,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
60 1 12 7 73 71 66 3 0 12 12 1 8 1 83 1 2 9 30 2 2 3 2 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
13 1 12 7 0 7 12 0 128 0 5 3 4 3 5 4 128 10 1 8 0 9 2 8 9 105 0 2 0 3 5 2 3 105 0 7 7 74 77 0 1 1 0 97 0 0 0 71 77 0 4 4 6 97 11 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
13 1 12 7 0 7 12 0 128 0 5 3 4 3 5 4 128 0 0 0 1 8 0 1 105 10 1 8 0 9 2 8 9 105 0 2 0 3 5 2 3 105 0 7 7 74 77 0 4 4 6 97 11 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
13 1 12 7 0 7 12 0 128 0 5 3 4 3 5 4 128 0 0 0 1 8 0 1 105 0 9 2 8 9 89 0 2 0 3 5 2 3 105 0 7 7 74 77 10 1 8 8 11 95 0 11 11 69 77 0 4 4 6 97 0 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
13 1 12 7 0 7 12 0 128 0 5 3 4 3 5 4 128 0 0 0 1 8 0 1 105 10 1 8 0 9 2 8 9 105 0 2 0 3 5 2 3 105 0 7 7 74 77 0 4 4 6 97 11 1 6 6 69 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
13 1 12 7 0 7 12 0 128 0 5 3 4 3 5 4 128 0 0 0 1 8 0 1 105 0 9 2 8 9 89 0 2 0 3 5 2 3 105 0 7 7 74 77 10 1 8 8 11 95 0 11 11 69 77 0 4 4 6 97 0 6 6 69 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
13 1 12 7 0 7 12 0 128 0 5 3 4 3 5 4 128 0 0 0 1 8 0 1 105 0 9 2 8 9 89 0 2 0 3 5 2 3 105 10 1 8 0 11 6 8 11 103 0 7 7 74 77 0 4 4 6 97 0 6 6 69 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
90 90 90 93 90 93 92 91 87 85 82 79 30 23 36 35 38 37 23 26 39 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni2153;
unicode = 8531;
},
{
glyphname = uni2154;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(510,520,o),
(469,520,qs),
(385,524,o),
(317,524,qs),
(268,524,ls),
(168,524,o),
(55,520,qs),
(22,520,o),
(23,549,qs),
(23,561,o),
(37,575,qs),
(135,673,o),
(231,805,qs),
(389,1020,o),
(389,1133,qs),
(387,1260,o),
(283,1260,qs),
(191,1260,o),
(131,1157,q),
(125,1143,o),
(102,1157,qs),
(86,1167,o),
(92,1180,qs),
(141,1278,o),
(221,1323,qs),
(272,1352,o),
(332,1352,qs),
(434,1352,o),
(494,1282,qs),
(547,1223,o),
(549,1139,qs),
(549,1020,o),
(377,829,qs),
(340,788,o),
(197,645,q),
(381,645,ls),
(453,645,o),
(479,655,qs),
(510,669,o),
(526,705,qs),
(532,717,o),
(559,709,qs),
(584,701,o),
(582,690,q),
(520,545,ls)
);
},
{
closed = 1;
nodes = (
(1444,155,o),
(1366,78,qs),
(1278,-14,o),
(1145,-14,qs),
(1057,-14,o),
(999,16,qs),
(950,43,o),
(950,88,qs),
(950,147,o),
(1026,150,qs),
(1055,150,o),
(1083,115,qs),
(1114,78,l),
(1143,49,o),
(1176,47,qs),
(1239,47,o),
(1272,131,qs),
(1292,184,o),
(1292,250,qs),
(1292,332,o),
(1243,379,qs),
(1202,418,o),
(1141,418,qs),
(1104,418,o),
(1075,408,q),
(1059,408,o),
(1057,442,qs),
(1057,475,o),
(1071,473,q),
(1165,473,o),
(1221,526,qs),
(1264,567,o),
(1264,625,qs),
(1264,686,o),
(1229,723,qs),
(1204,748,o),
(1169,745,q),
(1114,745,o),
(1065,694,qs),
(1047,674,o),
(1030,649,qs),
(1022,637,o),
(999,655,qs),
(983,667,o),
(989,678,q),
(1048,764,o),
(1104,799,qs),
(1151,828,o),
(1210,825,qs),
(1292,825,o),
(1350,768,qs),
(1403,713,o),
(1403,639,qs),
(1403,533,o),
(1294,471,q),
(1444,428,o),
(1444,264,q),
(1444,264,l)
);
},
{
closed = 1;
nodes = (
(639,0,l),
(512,0,l),
(967,1300,l),
(1092,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
21 1 4 2 57 1 0 5 75 47 2 7 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
13 1 12 1 2 1 12 2 128 0 9 7 8 7 9 8 128 0 0 0 3 6 0 3 103 0 6 0 7 9 6 7 105 0 2 2 1 97 0 1 1 68 77 0 5 5 4 97 0 4 4 71 77 0 8 8 10 97 11 1 10 10 69 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
13 1 12 1 2 1 12 2 128 0 9 7 8 7 9 8 128 0 4 0 5 0 4 5 105 0 0 0 3 6 0 3 103 0 6 0 7 9 6 7 105 0 2 2 1 97 0 1 1 68 77 0 8 8 10 97 11 1 10 10 69 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
13 1 12 1 2 1 12 2 128 0 9 7 8 7 9 8 128 0 4 0 5 0 4 5 105 0 0 0 3 6 0 3 103 0 6 0 7 9 6 7 105 0 2 2 1 97 0 1 1 68 77 0 11 11 69 77 0 8 8 10 97 0 10 10 69 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
13 1 12 1 2 1 12 2 128 0 9 7 8 7 9 8 128 0 4 0 5 0 4 5 105 0 0 0 3 6 0 3 103 0 6 0 7 9 6 7 105 0 2 2 1 97 0 1 1 68 77 0 8 8 10 97 11 1 10 10 69 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
13 1 12 1 2 1 12 2 128 0 9 7 8 7 9 8 128 0 4 0 5 0 4 5 105 0 0 0 3 6 0 3 103 0 6 0 7 9 6 7 105 0 2 2 1 97 0 1 1 68 77 0 11 11 69 77 0 8 8 10 97 0 10 10 69 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
13 1 12 1 2 1 12 2 128 0 9 7 8 7 9 8 128 0 11 8 10 8 11 10 128 0 4 0 5 0 4 5 105 0 0 0 3 6 0 3 103 0 6 0 7 9 6 7 105 0 2 2 1 97 0 1 1 68 77 0 8 8 10 97 0 10 10 69 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
103 103 103 106 103 106 105 104 99 97 93 91 38 37 23 26 41 120 40 39 39 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni2154;
unicode = 8532;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,620,o),
(446,567,o),
(502,567,qs),
(510,567,o),
(512,520,o),
(502,520,qs),
(453,524,o),
(201,524,o),
(152,520,qs),
(144,520,o),
(141,567,o),
(152,567,qs),
(220,567,o),
(260,627,o),
(260,698,qs),
(260,1198,ls),
(260,1239,o),
(248,1235,qs),
(182,1212,o),
(147,1194,qs),
(135,1188,o),
(123,1229,o),
(133,1233,qs),
(215,1268,o),
(350,1364,qs),
(366,1376,o),
(379,1376,qs),
(406,1376,o),
(406,1343,q),
(402,1300,o),
(401,1245,qs),
(401,700,ls)
);
},
{
closed = 1;
nodes = (
(1370,41,o),
(1434,43,qs),
(1442,43,o),
(1444,-4,o),
(1434,-4,qs),
(1385,0,o),
(1194,0,o),
(1141,-4,qs),
(1133,-4,o),
(1133,43,o),
(1141,43,qs),
(1229,43,o),
(1229,96,qs),
(1229,229,l),
(944,229,ls),
(891,229,o),
(891,266,qs),
(891,297,o),
(922,342,q),
(1102,580,ls),
(1219,734,o),
(1249,782,qs),
(1307,877,l),
(1315,887,o),
(1333,887,qs),
(1386,887,o),
(1386,854,qs),
(1386,848,o),
(1384,844,q),
(1001,338,l),
(995,332,o),
(995,324,qs),
(995,312,o),
(1008,311,q),
(1229,311,l),
(1229,578,ls),
(1229,592,o),
(1370,592,o),
(1370,578,qs),
(1370,311,l),
(1446,311,ls),
(1454,311,o),
(1456,229,o),
(1446,229,qs),
(1370,229,l),
(1370,96,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 105 values pushed */
2 1 13 0 15 13 8 3 7 13 48 38 2 1 7 25 1 5 2 4 76 72 1 10 73 0 0 13 0 133 14 1 13 7 13 133 0 7 1 7 133 3 1 1 0 2 5 1 2 105 6 1 5 8 1 4 9 5 4 104 11 1 9 10 10 9 89 11 1 9 9 10 97 12 1 10 9 10 81 78 78 78 81 78 81 80 79 76 74 71 68 66 65 41 24 21 34 19 35 50 30 19 15 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1507;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(530,679,o),
(455,602,qs),
(367,510,o),
(229,512,qs),
(141,512,o),
(86,541,qs),
(37,568,o),
(37,614,qs),
(37,673,o),
(113,674,q),
(142,672,o),
(170,639,qs),
(201,602,l),
(230,573,o),
(262,573,qs),
(325,573,o),
(358,655,qs),
(378,708,o),
(379,774,qs),
(379,856,o),
(330,903,qs),
(289,942,o),
(227,942,qs),
(190,942,o),
(162,932,q),
(146,932,o),
(143,967,q),
(143,1000,o),
(158,999,qs),
(252,999,o),
(307,1051,qs),
(350,1092,o),
(348,1151,qs),
(348,1212,o),
(315,1247,qs),
(290,1272,o),
(256,1272,qs),
(201,1272,o),
(152,1221,qs),
(134,1201,o),
(117,1176,qs),
(109,1164,o),
(86,1180,qs),
(70,1192,o),
(76,1202,qs),
(135,1288,o),
(188,1323,qs),
(235,1352,o),
(297,1352,qs),
(379,1352,o),
(436,1292,qs),
(489,1239,o),
(489,1165,qs),
(489,1059,o),
(383,995,q),
(530,952,o),
(530,788,q),
(530,788,l)
);
},
{
closed = 1;
nodes = (
(1370,41,o),
(1434,43,qs),
(1442,43,o),
(1444,-4,o),
(1434,-4,qs),
(1385,0,o),
(1194,0,o),
(1141,-4,qs),
(1133,-4,o),
(1133,43,o),
(1141,43,qs),
(1229,43,o),
(1229,96,qs),
(1229,229,l),
(944,229,ls),
(891,229,o),
(891,266,qs),
(891,297,o),
(922,342,q),
(1102,580,ls),
(1219,734,o),
(1249,782,qs),
(1307,877,l),
(1315,887,o),
(1333,887,qs),
(1386,887,o),
(1386,854,qs),
(1386,848,o),
(1384,844,q),
(1001,338,l),
(995,332,o),
(995,324,qs),
(995,312,o),
(1008,311,q),
(1229,311,l),
(1229,578,ls),
(1229,592,o),
(1370,592,o),
(1370,578,qs),
(1370,311,l),
(1446,311,ls),
(1454,311,o),
(1456,229,o),
(1446,229,qs),
(1370,229,l),
(1370,96,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 132 values pushed */
12 1 2 1 30 2 2 3 2 74 1 5 10 64 1 4 5 4 76 98 1 13 73 17 1 16 0 1 0 16 1 128 0 10 3 5 3 10 5 128 0 5 4 3 5 4 126 0 0 0 1 2 0 1 105 0 2 0 3 10 2 3 105 0 4 0 6 8 4 6 105 9 1 8 11 1 7 12 8 7 104 14 1 12 13 13 12 89 14 1 12 12 13 97 15 1 13 12 13 81 104 104 104 107 104 107 106 105 102 100 97 94 92 91 89 87 78 77 69 68 34 20 36 35 38 37 22 42 39 18 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1507;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = uni2155;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1423,190,o),
(1350,104,qs),
(1258,-9,o),
(1104,-10,qs),
(1014,-10,o),
(965,23,qs),
(930,46,o),
(930,80,qs),
(930,113,o),
(952,129,qs),
(970,143,o),
(1001,143,qs),
(1038,143,o),
(1067,111,qs),
(1112,58,o),
(1155,57,qs),
(1221,57,o),
(1266,125,qs),
(1305,180,o),
(1305,246,qs),
(1305,340,o),
(1239,393,qs),
(1188,436,o),
(1110,434,qs),
(1069,434,o),
(1024,424,qs),
(1014,422,o),
(1008,420,q),
(985,420,o),
(987,440,qs),
(1014,612,o),
(1047,782,qs),
(1053,817,o),
(1090,817,qs),
(1401,817,ls),
(1405,817,o),
(1405,793,o),
(1403,770,qs),
(1393,700,o),
(1380,700,qs),
(1122,700,ls),
(1099,700,o),
(1100,692,q),
(1086,635,o),
(1079,573,q),
(1079,563,o),
(1090,565,qs),
(1115,569,o),
(1133,569,qs),
(1276,569,o),
(1356,492,qs),
(1423,422,o),
(1423,311,q),
(1423,311,l)
);
},
{
closed = 1;
nodes = (
(401,620,o),
(446,567,o),
(502,567,qs),
(510,567,o),
(512,520,o),
(502,520,qs),
(453,524,o),
(201,524,o),
(152,520,qs),
(144,520,o),
(141,567,o),
(152,567,qs),
(220,567,o),
(260,627,o),
(260,698,qs),
(260,1198,ls),
(260,1239,o),
(248,1235,qs),
(182,1212,o),
(147,1194,qs),
(135,1188,o),
(123,1229,o),
(133,1233,qs),
(215,1268,o),
(350,1364,qs),
(366,1376,o),
(379,1376,qs),
(406,1376,o),
(406,1343,q),
(402,1300,o),
(401,1245,qs),
(401,700,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
56 1 13 8 69 67 62 3 2 13 6 1 10 0 79 1 3 10 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
56 1 13 8 69 67 62 3 2 13 6 1 10 0 79 1 4 10 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
56 1 13 8 69 67 62 3 2 13 6 1 10 0 79 1 3 10 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
56 1 13 8 69 67 62 3 2 13 6 1 10 0 79 1 4 10 4 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
14 1 13 8 2 8 13 2 128 0 6 3 5 5 6 114 0 2 0 1 0 2 1 103 0 10 3 0 10 89 11 9 2 0 4 1 3 6 0 3 105 0 8 8 74 77 0 5 5 7 98 12 1 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
14 1 13 8 2 8 13 2 128 0 3 4 6 4 3 6 128 0 6 5 5 6 112 0 2 0 1 0 2 1 103 0 10 4 0 10 89 11 9 2 0 0 4 3 0 4 105 0 8 8 74 77 0 5 5 7 98 12 1 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
14 1 13 8 2 8 13 2 128 0 6 3 5 5 6 114 0 2 0 1 0 2 1 103 0 10 3 0 10 89 11 9 2 0 4 1 3 6 0 3 105 0 8 8 74 77 0 5 5 7 98 12 1 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
14 1 13 8 2 8 13 2 128 0 6 3 5 3 6 5 128 0 2 0 1 0 2 1 103 0 10 3 0 10 89 11 9 2 0 4 1 3 6 0 3 105 0 8 8 74 77 0 5 5 7 98 12 1 7 7 69 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
14 1 13 8 2 8 13 2 128 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 2 0 1 0 2 1 103 0 10 4 0 10 89 11 9 2 0 0 4 3 0 4 105 0 8 8 74 77 0 5 5 7 98 12 1 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
14 1 13 8 2 8 13 2 128 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 2 0 1 0 2 1 103 0 10 4 0 10 89 0 4 3 0 4 89 11 9 2 0 0 12 7 0 12 103 0 8 8 74 77 0 5 5 7 98 0 7 7 69 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
86 86 86 89 86 89 88 87 83 81 78 75 73 72 23 38 34 38 35 20 52 24 19 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni2155;
unicode = 8533;
},
{
glyphname = uni2156;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(531,520,o),
(492,520,qs),
(408,524,o),
(340,524,qs),
(289,524,ls),
(189,524,o),
(78,520,qs),
(45,520,o),
(43,549,qs),
(43,561,o),
(57,575,qs),
(155,673,o),
(252,805,qs),
(410,1020,o),
(410,1133,qs),
(408,1260,o),
(303,1260,qs),
(211,1260,o),
(154,1157,q),
(148,1143,o),
(125,1157,qs),
(109,1167,o),
(113,1180,q),
(162,1278,o),
(244,1323,qs),
(295,1352,o),
(352,1352,qs),
(454,1352,o),
(514,1282,qs),
(567,1223,o),
(569,1139,qs),
(569,1020,o),
(397,829,qs),
(360,788,o),
(217,645,q),
(401,645,ls),
(473,645,o),
(500,655,qs),
(531,669,o),
(549,705,qs),
(555,717,o),
(582,709,qs),
(607,701,o),
(602,690,qs),
(541,545,ls)
);
},
{
closed = 1;
nodes = (
(1423,190,o),
(1350,104,qs),
(1258,-9,o),
(1104,-10,qs),
(1014,-10,o),
(965,23,qs),
(930,46,o),
(930,80,qs),
(930,113,o),
(952,129,qs),
(970,143,o),
(1001,143,qs),
(1038,143,o),
(1067,111,qs),
(1112,58,o),
(1155,57,qs),
(1221,57,o),
(1266,125,qs),
(1305,180,o),
(1305,246,qs),
(1305,340,o),
(1239,393,qs),
(1188,436,o),
(1110,434,qs),
(1069,434,o),
(1024,424,qs),
(1014,422,o),
(1008,420,q),
(985,420,o),
(987,440,qs),
(1014,612,o),
(1047,782,qs),
(1053,817,o),
(1090,817,qs),
(1401,817,ls),
(1405,817,o),
(1405,793,o),
(1403,770,qs),
(1393,700,o),
(1380,700,qs),
(1122,700,ls),
(1099,700,o),
(1100,692,q),
(1086,635,o),
(1079,573,q),
(1079,563,o),
(1090,565,qs),
(1115,569,o),
(1133,569,qs),
(1276,569,o),
(1356,492,qs),
(1423,422,o),
(1423,311,q),
(1423,311,l)
);
},
{
closed = 1;
nodes = (
(635,0,l),
(508,0,l),
(963,1300,l),
(1087,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 6 2 51 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
14 1 13 1 2 1 13 2 128 0 10 7 9 9 10 114 0 6 0 5 0 6 5 103 0 0 0 3 7 0 3 103 0 4 8 1 7 10 4 7 105 0 2 2 1 97 0 1 1 68 77 0 9 9 11 98 12 1 11 11 69 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 13 1 2 1 13 2 128 0 7 8 10 8 7 10 128 0 10 9 9 10 112 0 6 0 5 0 6 5 103 0 0 0 3 8 0 3 103 0 4 0 8 7 4 8 105 0 2 2 1 97 0 1 1 68 77 0 9 9 11 98 12 1 11 11 69 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
14 1 13 1 2 1 13 2 128 0 10 7 9 9 10 114 0 6 0 5 0 6 5 103 0 0 0 3 7 0 3 103 0 4 8 1 7 10 4 7 105 0 2 2 1 97 0 1 1 68 77 0 9 9 11 98 12 1 11 11 69 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
14 1 13 1 2 1 13 2 128 0 10 7 9 7 10 9 128 0 6 0 5 0 6 5 103 0 0 0 3 7 0 3 103 0 4 8 1 7 10 4 7 105 0 2 2 1 97 0 1 1 68 77 0 9 9 11 98 12 1 11 11 69 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 13 1 2 1 13 2 128 0 7 8 10 8 7 10 128 0 10 9 8 10 9 126 0 6 0 5 0 6 5 103 0 0 0 3 8 0 3 103 0 4 0 8 7 4 8 105 0 2 2 1 97 0 1 1 68 77 0 9 9 11 98 12 1 11 11 69 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
14 1 13 1 2 1 13 2 128 0 7 8 10 8 7 10 128 0 10 9 8 10 9 126 0 12 9 11 9 12 11 128 0 6 0 5 0 6 5 103 0 0 0 3 8 0 3 103 0 4 0 8 7 4 8 105 0 2 2 1 97 0 1 1 68 77 0 9 9 11 98 0 11 11 69 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
99 99 99 102 99 102 101 100 95 93 87 85 83 81 35 20 52 24 21 120 40 39 39 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni2156;
unicode = 8534;
},
{
glyphname = uni2157;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,679,o),
(485,602,qs),
(397,510,o),
(262,512,qs),
(174,512,o),
(117,541,qs),
(68,568,o),
(68,614,qs),
(68,673,o),
(143,674,q),
(172,672,o),
(201,639,qs),
(231,602,l),
(260,573,o),
(295,573,qs),
(358,573,o),
(389,655,qs),
(409,708,o),
(412,774,qs),
(412,856,o),
(360,903,qs),
(319,942,o),
(258,942,qs),
(221,942,o),
(193,932,q),
(177,932,o),
(174,967,q),
(174,1000,o),
(188,999,qs),
(282,999,o),
(338,1051,qs),
(381,1092,o),
(381,1151,qs),
(381,1212,o),
(346,1247,qs),
(321,1272,o),
(287,1272,qs),
(232,1272,o),
(182,1221,qs),
(164,1201,o),
(147,1176,qs),
(139,1164,o),
(119,1180,qs),
(103,1192,o),
(109,1202,qs),
(168,1288,o),
(221,1323,qs),
(268,1352,o),
(328,1352,qs),
(410,1352,o),
(467,1292,qs),
(520,1239,o),
(520,1165,qs),
(520,1059,o),
(414,995,q),
(561,952,o),
(561,788,q),
(561,788,l)
);
},
{
closed = 1;
nodes = (
(1423,190,o),
(1350,104,qs),
(1258,-9,o),
(1104,-10,qs),
(1014,-10,o),
(965,23,qs),
(930,46,o),
(930,80,qs),
(930,113,o),
(952,129,qs),
(970,143,o),
(1001,143,qs),
(1038,143,o),
(1067,111,qs),
(1112,58,o),
(1155,57,qs),
(1221,57,o),
(1266,125,qs),
(1305,180,o),
(1305,246,qs),
(1305,340,o),
(1239,393,qs),
(1188,436,o),
(1110,434,qs),
(1069,434,o),
(1024,424,qs),
(1014,422,o),
(1008,420,q),
(985,420,o),
(987,440,qs),
(1014,612,o),
(1047,782,qs),
(1053,817,o),
(1090,817,qs),
(1401,817,ls),
(1405,817,o),
(1405,793,o),
(1403,770,qs),
(1393,700,o),
(1380,700,qs),
(1122,700,ls),
(1099,700,o),
(1100,692,q),
(1086,635,o),
(1079,573,q),
(1079,563,o),
(1090,565,qs),
(1115,569,o),
(1133,569,qs),
(1276,569,o),
(1356,492,qs),
(1423,422,o),
(1423,311,q),
(1423,311,l)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
12 1 2 1 30 2 2 3 2 64 1 6 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
17 1 16 0 1 0 16 1 128 0 5 8 4 8 5 4 128 0 13 10 12 12 13 114 0 2 0 3 9 2 3 105 0 9 0 8 5 9 8 103 0 6 10 4 6 89 7 1 4 11 1 10 13 4 10 105 0 1 1 0 97 0 0 0 68 77 0 12 12 14 98 15 1 14 14 69 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
17 1 16 0 1 0 16 1 128 0 5 8 4 8 5 4 128 0 10 11 13 11 10 13 128 0 13 12 12 13 112 0 2 0 3 9 2 3 105 0 9 0 8 5 9 8 103 0 6 11 4 6 89 7 1 4 0 11 10 4 11 105 0 1 1 0 97 0 0 0 68 77 0 12 12 14 98 15 1 14 14 69 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
17 1 16 0 1 0 16 1 128 0 5 8 4 8 5 4 128 0 13 10 12 12 13 114 0 2 0 3 9 2 3 105 0 9 0 8 5 9 8 103 0 6 10 4 6 89 7 1 4 11 1 10 13 4 10 105 0 1 1 0 97 0 0 0 68 77 0 12 12 14 98 15 1 14 14 69 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
17 1 16 0 1 0 16 1 128 0 5 8 4 8 5 4 128 0 13 10 12 10 13 12 128 0 2 0 3 9 2 3 105 0 9 0 8 5 9 8 103 0 6 10 4 6 89 7 1 4 11 1 10 13 4 10 105 0 1 1 0 97 0 0 0 68 77 0 12 12 14 98 15 1 14 14 69 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
17 1 16 0 1 0 16 1 128 0 5 8 4 8 5 4 128 0 10 11 13 11 10 13 128 0 13 12 11 13 12 126 0 2 0 3 9 2 3 105 0 9 0 8 5 9 8 103 0 6 11 4 6 89 7 1 4 0 11 10 4 11 105 0 1 1 0 97 0 0 0 68 77 0 12 12 14 98 15 1 14 14 69 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
17 1 16 0 1 0 16 1 128 0 5 8 4 8 5 4 128 0 10 11 13 11 10 13 128 0 13 12 11 13 12 126 0 15 12 14 12 15 14 128 0 2 0 3 9 2 3 105 0 9 0 8 5 9 8 103 0 6 11 4 6 89 7 1 4 0 11 10 4 11 105 0 1 1 0 97 0 0 0 68 77 0 12 12 14 98 0 14 14 69 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
112 112 112 115 112 115 114 113 108 106 100 98 96 94 88 86 83 82 78 75 24 23 36 35 38 37 22 42 39 18 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni2157;
unicode = 8535;
},
{
glyphname = uni2158;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,568,o),
(567,567,qs),
(575,567,o),
(578,520,o),
(567,520,qs),
(518,524,o),
(438,524,qs),
(327,524,o),
(274,520,qs),
(266,520,o),
(266,567,o),
(274,567,qs),
(362,567,o),
(362,623,qs),
(362,756,l),
(78,756,ls),
(25,756,o),
(25,791,qs),
(25,822,o),
(55,866,q),
(236,1104,ls),
(353,1258,o),
(383,1309,qs),
(440,1401,l),
(448,1411,o),
(469,1411,qs),
(522,1411,o),
(520,1378,qs),
(520,1372,o),
(518,1368,q),
(135,862,l),
(129,856,o),
(129,850,qs),
(129,838,o),
(141,838,qs),
(362,838,l),
(362,1104,ls),
(362,1118,o),
(432,1116,qs),
(504,1116,o),
(504,1104,qs),
(504,838,l),
(580,838,ls),
(588,838,o),
(590,797,qs),
(590,754,o),
(580,756,q),
(504,756,l),
(504,623,ls)
);
},
{
closed = 1;
nodes = (
(1423,190,o),
(1350,104,qs),
(1258,-9,o),
(1104,-10,qs),
(1014,-10,o),
(965,23,qs),
(930,46,o),
(930,80,qs),
(930,113,o),
(952,129,qs),
(970,143,o),
(1001,143,qs),
(1038,143,o),
(1067,111,qs),
(1112,58,o),
(1155,57,qs),
(1221,57,o),
(1266,125,qs),
(1305,180,o),
(1305,246,qs),
(1305,340,o),
(1239,393,qs),
(1188,436,o),
(1110,434,qs),
(1069,434,o),
(1024,424,qs),
(1014,422,o),
(1008,420,q),
(985,420,o),
(987,440,qs),
(1014,612,o),
(1047,782,qs),
(1053,817,o),
(1090,817,qs),
(1401,817,ls),
(1405,817,o),
(1405,793,o),
(1403,770,qs),
(1393,700,o),
(1380,700,qs),
(1122,700,ls),
(1099,700,o),
(1100,692,q),
(1086,635,o),
(1079,573,q),
(1079,563,o),
(1090,565,qs),
(1115,569,o),
(1133,569,qs),
(1276,569,o),
(1356,492,qs),
(1423,422,o),
(1423,311,q),
(1423,311,l)
);
},
{
closed = 1;
nodes = (
(651,0,l),
(524,0,l),
(981,1300,l),
(1106,1300,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
7 1 1 2 3 1 0 11 55 1 7 6 43 1 12 7 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
7 1 1 2 3 1 0 11 55 1 7 6 43 1 13 7 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
7 1 1 2 3 1 0 11 55 1 7 6 43 1 12 7 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
7 1 1 2 3 1 0 11 55 1 7 6 43 1 13 7 4 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
19 1 18 4 2 4 18 2 128 0 2 1 4 2 1 126 0 15 12 14 14 15 114 0 11 0 10 6 11 10 103 0 7 12 6 7 88 9 8 2 6 13 1 12 15 6 12 106 0 4 4 74 77 5 1 0 0 1 97 3 1 1 1 71 77 0 14 14 16 98 17 1 16 16 69 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
19 1 18 4 2 4 18 2 128 0 2 1 4 2 1 126 0 12 13 15 13 12 15 128 0 15 14 14 15 112 0 11 0 10 6 11 10 103 0 7 13 6 7 88 9 8 2 6 0 13 12 6 13 106 0 4 4 74 77 5 1 0 0 1 97 3 1 1 1 71 77 0 14 14 16 98 17 1 16 16 69 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
19 1 18 4 2 4 18 2 128 0 2 1 4 2 1 126 0 15 12 14 14 15 114 0 11 0 10 6 11 10 103 0 7 12 6 7 88 9 8 2 6 13 1 12 15 6 12 106 0 4 4 74 77 5 1 0 0 1 97 3 1 1 1 71 77 0 14 14 16 98 17 1 16 16 69 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
19 1 18 4 2 4 18 2 128 0 2 1 4 2 1 126 0 15 12 14 12 15 14 128 0 11 0 10 6 11 10 103 0 7 12 6 7 88 9 8 2 6 13 1 12 15 6 12 106 0 4 4 74 77 5 1 0 0 1 97 3 1 1 1 71 77 0 14 14 16 98 17 1 16 16 69 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
19 1 18 4 2 4 18 2 128 0 2 1 4 2 1 126 0 15 12 14 12 15 14 128 3 1 1 5 1 0 10 1 0 104 0 11 0 10 6 11 10 103 0 7 12 6 7 88 9 8 2 6 13 1 12 15 6 12 106 0 4 4 74 77 0 14 14 16 98 17 1 16 16 69 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
19 1 18 4 2 4 18 2 128 0 2 1 4 2 1 126 0 12 13 15 13 12 15 128 0 15 14 13 15 14 126 3 1 1 5 1 0 10 1 0 104 0 11 0 10 6 11 10 103 0 7 13 6 7 88 9 8 2 6 0 13 12 6 13 106 0 4 4 74 77 0 14 14 16 98 17 1 16 16 69 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 4 18 4 133 19 1 18 2 18 133 0 2 1 2 133 0 12 13 15 13 12 15 128 0 15 14 13 15 14 126 3 1 1 5 1 0 10 1 0 104 0 11 0 10 6 11 10 103 0 7 13 6 7 88 9 8 2 6 0 13 12 6 13 106 0 14 14 16 98 17 1 16 16 69 16 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 4 18 4 133 19 1 18 2 18 133 0 2 1 2 133 0 12 13 15 13 12 15 128 0 15 14 13 15 14 126 0 17 14 16 14 17 16 128 3 1 1 5 1 0 10 1 0 104 0 11 0 10 6 11 10 103 0 7 13 6 7 88 9 8 2 6 0 13 12 6 13 106 0 14 14 16 98 0 16 16 69 16 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
103 103 103 106 103 106 105 104 99 97 91 89 87 85 79 77 74 73 69 66 62 61 53 52 35 66 18 40 40 18 19 35 16 20 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni2158;
unicode = 8536;
},
{
glyphname = uni2159;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1438,150,o),
(1370,76,qs),
(1292,-10,o),
(1171,-10,qs),
(1032,-10,o),
(965,106,qs),
(920,186,o),
(918,295,qs),
(918,453,o),
(1028,606,qs),
(1155,780,o),
(1352,858,q),
(1356,858,ls),
(1364,858,o),
(1370,844,qs),
(1374,834,o),
(1374,821,o),
(1370,819,qs),
(1220,737,o),
(1141,580,qs),
(1102,506,o),
(1083,426,q),
(1120,471,o),
(1180,489,qs),
(1200,495,o),
(1219,494,qs),
(1319,494,o),
(1384,414,qs),
(1438,344,o),
(1438,252,q),
(1438,252,l)
);
},
{
closed = 1;
nodes = (
(1303,278,o),
(1229,399,o),
(1169,399,qs),
(1114,399,o),
(1071,350,q),
(1067,325,o),
(1067,293,qs),
(1067,53,o),
(1188,55,qs),
(1254,55,o),
(1284,125,qs),
(1303,164,o),
(1303,215,q),
(1303,215,l)
);
},
{
closed = 1;
nodes = (
(401,620,o),
(446,567,o),
(502,567,qs),
(510,567,o),
(512,520,o),
(502,520,qs),
(453,524,o),
(201,524,o),
(152,520,qs),
(144,520,o),
(141,567,o),
(152,567,qs),
(220,567,o),
(260,627,o),
(260,698,qs),
(260,1198,ls),
(260,1239,o),
(248,1235,qs),
(182,1212,o),
(147,1194,qs),
(135,1188,o),
(123,1229,o),
(133,1233,qs),
(215,1268,o),
(350,1364,qs),
(366,1376,o),
(379,1376,qs),
(406,1376,o),
(406,1343,q),
(402,1300,o),
(401,1245,qs),
(401,700,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
47 1 9 4 60 58 53 15 12 5 5 9 70 1 0 6 8 1 3 0 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 4 5 4 9 5 128 7 1 5 0 6 0 5 6 105 0 0 0 3 2 0 3 105 0 4 4 74 77 0 2 2 1 97 8 1 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
10 1 9 4 5 4 9 5 128 0 6 0 5 6 89 0 0 0 3 2 0 3 105 7 1 5 0 8 1 5 8 103 0 4 4 74 77 0 2 2 1 97 0 1 1 69 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
77 77 77 80 77 80 79 78 74 72 69 66 64 63 49 48 42 40 36 34 27 25 35 11 11 23 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni2159;
unicode = 8537;
},
{
glyphname = uni215A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(559,717,o),
(487,629,qs),
(395,516,o),
(240,514,qs),
(150,514,o),
(100,547,qs),
(65,570,o),
(68,604,q),
(68,637,o),
(88,653,qs),
(106,667,o),
(137,668,qs),
(176,668,o),
(205,635,qs),
(250,582,o),
(293,582,qs),
(359,582,o),
(403,649,qs),
(442,704,o),
(442,770,qs),
(442,864,o),
(377,918,qs),
(326,961,o),
(246,961,qs),
(205,961,o),
(162,948,q),
(152,946,o),
(145,944,q),
(122,944,o),
(125,967,qs),
(152,1139,o),
(184,1307,qs),
(190,1342,o),
(227,1341,qs),
(539,1341,ls),
(543,1341,o),
(543,1317,o),
(539,1294,qs),
(529,1224,o),
(516,1227,q),
(258,1227,ls),
(235,1227,o),
(236,1217,q),
(222,1158,o),
(217,1098,qs),
(217,1088,o),
(225,1090,qs),
(250,1094,o),
(270,1094,qs),
(413,1094,o),
(492,1016,qs),
(559,949,o),
(559,838,q),
(559,838,l)
);
},
{
closed = 1;
nodes = (
(1438,150,o),
(1370,76,qs),
(1292,-10,o),
(1171,-10,qs),
(1032,-10,o),
(965,106,qs),
(920,186,o),
(918,295,qs),
(918,453,o),
(1028,606,qs),
(1155,780,o),
(1352,858,q),
(1356,858,ls),
(1364,858,o),
(1370,844,qs),
(1374,834,o),
(1374,821,o),
(1370,819,qs),
(1220,737,o),
(1141,580,qs),
(1102,506,o),
(1083,426,q),
(1120,471,o),
(1180,489,qs),
(1200,495,o),
(1219,494,qs),
(1319,494,o),
(1384,414,qs),
(1438,344,o),
(1438,252,q),
(1438,252,l)
);
},
{
closed = 1;
nodes = (
(1303,278,o),
(1229,399,o),
(1169,399,qs),
(1114,399,o),
(1071,350,q),
(1067,325,o),
(1067,293,qs),
(1067,53,o),
(1188,55,qs),
(1254,55,o),
(1284,125,qs),
(1303,164,o),
(1303,215,q),
(1303,215,l)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
6 1 4 0 69 66 2 6 3 45 1 5 6 62 1 11 8 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 13 2 1 2 13 1 128 0 3 4 6 4 3 6 128 0 6 5 5 6 112 0 0 0 4 3 0 4 105 0 5 0 7 8 5 7 106 0 8 0 11 10 8 11 105 0 1 1 2 95 0 2 2 68 77 0 10 10 9 97 12 1 9 9 69 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 13 2 1 2 13 1 128 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 0 0 4 3 0 4 105 0 5 0 7 8 5 7 106 0 8 0 11 10 8 11 105 0 1 1 2 95 0 2 2 68 77 0 10 10 9 97 12 1 9 9 69 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
14 1 13 2 1 2 13 1 128 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 12 10 9 10 12 9 128 0 0 0 4 3 0 4 105 0 5 0 7 8 5 7 106 0 8 0 11 10 8 11 105 0 1 1 2 95 0 2 2 68 77 0 10 10 9 97 0 9 9 69 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
99 99 99 102 99 102 101 100 96 94 90 88 81 79 39 38 34 38 35 20 52 23 35 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = uni215A;
unicode = 8538;
},
{
glyphname = oneeighth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1430,117,o),
(1356,53,qs),
(1280,-10,o),
(1176,-10,qs),
(1070,-10,o),
(997,45,qs),
(921,104,o),
(922,207,qs),
(922,318,o),
(1079,410,q),
(944,492,o),
(942,612,qs),
(942,702,o),
(1012,766,qs),
(1078,825,o),
(1176,825,qs),
(1289,825,o),
(1352,766,qs),
(1405,715,o),
(1405,631,qs),
(1405,518,o),
(1274,444,q),
(1430,350,o),
(1430,215,q),
(1430,215,l)
);
},
{
closed = 1;
nodes = (
(1272,692,o),
(1229,737,qs),
(1200,766,o),
(1159,764,qs),
(1104,764,o),
(1077,715,qs),
(1061,686,o),
(1063,653,qs),
(1063,569,o),
(1204,483,q),
(1272,522,o),
(1272,606,q),
(1272,606,l)
);
},
{
closed = 1;
nodes = (
(1296,276,o),
(1145,371,q),
(1063,326,o),
(1063,217,qs),
(1063,143,o),
(1102,94,qs),
(1139,47,o),
(1249,47,o),
(1280,102,qs),
(1296,133,o),
(1296,174,q),
(1296,174,l)
);
},
{
closed = 1;
nodes = (
(401,620,o),
(446,567,o),
(502,567,qs),
(510,567,o),
(512,520,o),
(502,520,qs),
(453,524,o),
(201,524,o),
(152,520,qs),
(144,520,o),
(141,567,o),
(152,567,qs),
(220,567,o),
(260,627,o),
(260,698,qs),
(260,1198,ls),
(260,1239,o),
(248,1235,qs),
(182,1212,o),
(147,1194,qs),
(135,1188,o),
(123,1229,o),
(133,1233,qs),
(215,1268,o),
(350,1364,qs),
(366,1376,o),
(379,1376,qs),
(406,1376,o),
(406,1343,q),
(402,1300,o),
(401,1245,qs),
(401,700,ls)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
52 1 9 4 65 63 58 3 0 9 75 47 27 14 2 5 3 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
10 1 9 4 0 4 9 0 128 7 1 5 0 6 3 5 6 105 0 4 4 74 77 0 2 2 0 97 0 0 0 71 77 0 3 3 1 97 8 1 1 1 69 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 4 0 4 9 0 128 0 0 0 2 5 0 2 105 7 1 5 0 6 3 5 6 105 0 4 4 74 77 0 3 3 1 97 8 1 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
10 1 9 4 0 4 9 0 128 0 0 0 2 5 0 2 105 0 6 3 5 6 89 7 1 5 0 8 1 5 8 103 0 4 4 74 77 0 3 3 1 97 0 1 1 69 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
82 82 82 85 82 85 20 35 50 30 27 23 43 42 39 11 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(563,679,o),
(487,602,qs),
(399,510,o),
(262,512,qs),
(174,512,o),
(119,541,qs),
(70,568,o),
(70,614,qs),
(70,673,o),
(145,674,q),
(174,672,o),
(203,639,qs),
(233,602,l),
(262,573,o),
(297,573,qs),
(360,573,o),
(391,655,qs),
(411,708,o),
(412,774,qs),
(412,856,o),
(362,903,qs),
(321,942,o),
(260,942,qs),
(223,942,o),
(195,932,q),
(179,932,o),
(176,967,q),
(176,1000,o),
(190,999,qs),
(284,999,o),
(340,1051,qs),
(383,1092,o),
(383,1151,qs),
(383,1212,o),
(348,1247,qs),
(323,1272,o),
(289,1272,qs),
(234,1272,o),
(184,1221,qs),
(166,1201,o),
(150,1176,qs),
(142,1164,o),
(119,1180,qs),
(103,1192,o),
(109,1202,qs),
(168,1288,o),
(221,1323,qs),
(268,1352,o),
(330,1352,qs),
(412,1352,o),
(469,1292,qs),
(522,1239,o),
(522,1165,qs),
(522,1059,o),
(416,995,q),
(563,952,o),
(563,788,q),
(563,788,l)
);
},
{
closed = 1;
nodes = (
(1430,117,o),
(1356,53,qs),
(1280,-10,o),
(1176,-10,qs),
(1070,-10,o),
(997,45,qs),
(921,104,o),
(922,207,qs),
(922,318,o),
(1079,410,q),
(944,492,o),
(942,612,qs),
(942,702,o),
(1012,766,qs),
(1078,825,o),
(1176,825,qs),
(1289,825,o),
(1352,766,qs),
(1405,715,o),
(1405,631,qs),
(1405,518,o),
(1274,444,q),
(1430,350,o),
(1430,215,q),
(1430,215,l)
);
},
{
closed = 1;
nodes = (
(1272,692,o),
(1229,737,qs),
(1200,766,o),
(1159,764,qs),
(1104,764,o),
(1077,715,qs),
(1061,686,o),
(1063,653,qs),
(1063,569,o),
(1204,483,q),
(1272,522,o),
(1272,606,q),
(1272,606,l)
);
},
{
closed = 1;
nodes = (
(1296,276,o),
(1145,371,q),
(1063,326,o),
(1063,217,qs),
(1063,143,o),
(1102,94,qs),
(1139,47,o),
(1249,47,o),
(1280,102,qs),
(1296,133,o),
(1296,174,q),
(1296,174,l)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
12 1 2 1 30 2 2 3 2 105 85 72 60 4 10 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
13 1 12 0 1 0 12 1 128 0 5 9 4 9 5 4 128 0 2 0 3 7 2 3 105 0 4 0 6 10 4 6 105 0 1 1 0 97 0 0 0 68 77 0 9 9 7 97 0 7 7 71 77 0 10 10 8 97 11 1 8 8 69 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
13 1 12 0 1 0 12 1 128 0 5 9 4 9 5 4 128 0 2 0 3 7 2 3 105 0 7 0 9 5 7 9 105 0 4 0 6 10 4 6 105 0 1 1 0 97 0 0 0 68 77 0 10 10 8 97 11 1 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
13 1 12 0 1 0 12 1 128 0 5 9 4 9 5 4 128 0 11 10 8 10 11 8 128 0 2 0 3 7 2 3 105 0 7 0 9 5 7 9 105 0 4 0 6 10 4 6 105 0 1 1 0 97 0 0 0 68 77 0 10 10 8 97 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
108 108 108 111 108 111 110 109 100 99 92 90 42 43 36 35 38 37 22 42 39 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,717,o),
(483,629,qs),
(391,516,o),
(238,514,qs),
(148,514,o),
(98,547,qs),
(63,570,o),
(63,604,qs),
(63,637,o),
(86,653,qs),
(104,667,o),
(135,668,qs),
(172,668,o),
(201,635,qs),
(246,582,o),
(289,582,qs),
(355,582,o),
(399,649,qs),
(438,704,o),
(438,770,qs),
(438,864,o),
(373,918,qs),
(322,961,o),
(244,961,qs),
(203,961,o),
(158,948,qs),
(148,946,o),
(141,944,q),
(118,944,o),
(123,967,qs),
(150,1139,o),
(180,1307,qs),
(186,1342,o),
(223,1341,qs),
(535,1341,ls),
(539,1341,o),
(539,1317,o),
(537,1294,qs),
(527,1224,o),
(514,1227,q),
(256,1227,ls),
(233,1227,o),
(233,1217,q),
(219,1158,o),
(213,1098,q),
(213,1088,o),
(223,1090,qs),
(248,1094,o),
(266,1094,qs),
(409,1094,o),
(489,1016,qs),
(557,949,o),
(557,838,q),
(557,838,l)
);
},
{
closed = 1;
nodes = (
(1430,117,o),
(1356,53,qs),
(1280,-10,o),
(1176,-10,qs),
(1070,-10,o),
(997,45,qs),
(921,104,o),
(922,207,qs),
(922,318,o),
(1079,410,q),
(944,492,o),
(942,612,qs),
(942,702,o),
(1012,766,qs),
(1078,825,o),
(1176,825,qs),
(1289,825,o),
(1352,766,qs),
(1405,715,o),
(1405,631,qs),
(1405,518,o),
(1274,444,q),
(1430,350,o),
(1430,215,q),
(1430,215,l)
);
},
{
closed = 1;
nodes = (
(1272,692,o),
(1229,737,qs),
(1200,766,o),
(1159,764,qs),
(1104,764,o),
(1077,715,qs),
(1061,686,o),
(1063,653,qs),
(1063,569,o),
(1204,483,q),
(1272,522,o),
(1272,606,q),
(1272,606,l)
);
},
{
closed = 1;
nodes = (
(1296,276,o),
(1145,371,q),
(1063,326,o),
(1063,217,qs),
(1063,143,o),
(1102,94,qs),
(1139,47,o),
(1249,47,o),
(1280,102,qs),
(1296,133,o),
(1296,174,q),
(1296,174,l)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(463,0,l),
(918,1300,l),
(1044,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
6 1 4 0 101 81 68 56 4 11 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
14 1 13 2 1 2 13 1 128 0 3 4 8 4 3 8 128 0 6 10 5 5 6 114 0 0 0 4 3 0 4 105 0 5 0 7 11 5 7 106 0 1 1 2 95 0 2 2 68 77 0 10 10 8 97 0 8 8 71 77 0 11 11 9 97 12 1 9 9 69 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 13 2 1 2 13 1 128 0 3 4 8 4 3 8 128 0 6 10 5 5 6 114 0 0 0 4 3 0 4 105 0 8 0 10 6 8 10 105 0 5 0 7 11 5 7 106 0 1 1 2 95 0 2 2 68 77 0 11 11 9 97 12 1 9 9 69 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
14 1 13 2 1 2 13 1 128 0 3 4 8 4 3 8 128 0 6 10 5 10 6 5 128 0 0 0 4 3 0 4 105 0 8 0 10 6 8 10 105 0 5 0 7 11 5 7 106 0 1 1 2 95 0 2 2 68 77 0 11 11 9 97 12 1 9 9 69 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
14 1 13 2 1 2 13 1 128 0 3 4 8 4 3 8 128 0 6 10 5 10 6 5 128 0 12 11 9 11 12 9 128 0 0 0 4 3 0 4 105 0 8 0 10 6 8 10 105 0 5 0 7 11 5 7 106 0 1 1 2 95 0 2 2 68 77 0 11 11 9 97 0 9 9 69 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
104 104 104 107 104 107 106 105 96 95 88 86 75 73 43 38 34 38 35 20 52 24 19 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,510,o),
(221,512,qs),
(166,512,o),
(137,526,q),
(135,528,o),
(135,537,q),
(475,1233,l),
(291,1233,ls),
(219,1233,o),
(184,1214,qs),
(143,1191,o),
(127,1151,qs),
(123,1141,o),
(100,1143,qs),
(67,1143,o),
(70,1155,qs),
(102,1307,ls),
(106,1332,o),
(113,1335,q),
(119,1341,o),
(135,1341,qs),
(559,1341,ls),
(594,1341,o),
(594,1321,qs),
(594,1315,o),
(592,1309,qs),
(279,524,ls)
);
},
{
closed = 1;
nodes = (
(1430,117,o),
(1356,53,qs),
(1280,-10,o),
(1176,-10,qs),
(1070,-10,o),
(997,45,qs),
(921,104,o),
(922,207,qs),
(922,318,o),
(1079,410,q),
(944,492,o),
(942,612,qs),
(942,702,o),
(1012,766,qs),
(1078,825,o),
(1176,825,qs),
(1289,825,o),
(1352,766,qs),
(1405,715,o),
(1405,631,qs),
(1405,518,o),
(1274,444,q),
(1430,350,o),
(1430,215,q),
(1430,215,l)
);
},
{
closed = 1;
nodes = (
(1272,692,o),
(1229,737,qs),
(1200,766,o),
(1159,764,qs),
(1104,764,o),
(1077,715,qs),
(1061,686,o),
(1063,653,qs),
(1063,569,o),
(1204,483,q),
(1272,522,o),
(1272,606,q),
(1272,606,l)
);
},
{
closed = 1;
nodes = (
(1296,276,o),
(1145,371,q),
(1063,326,o),
(1063,217,qs),
(1063,143,o),
(1102,94,qs),
(1139,47,o),
(1249,47,o),
(1280,102,qs),
(1296,133,o),
(1296,174,q),
(1296,174,l)
);
},
{
closed = 1;
nodes = (
(504,0,l),
(379,0,l),
(831,1300,l),
(958,1300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
0 1 8 0 10 1 3 1 74 54 41 29 4 6 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 8 0 1 0 8 1 128 0 2 5 6 5 2 6 128 0 1 1 0 95 0 0 0 68 77 0 5 5 3 97 0 3 3 71 77 0 6 6 4 97 7 1 4 4 69 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
9 1 8 0 1 0 8 1 128 0 2 5 6 5 2 6 128 0 3 0 5 2 3 5 105 0 1 1 0 95 0 0 0 68 77 0 6 6 4 97 7 1 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
9 1 8 0 1 0 8 1 128 0 2 5 6 5 2 6 128 0 7 6 4 6 7 4 128 0 3 0 5 2 3 5 105 0 1 1 0 95 0 0 0 68 77 0 6 6 4 97 0 4 4 69 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
77 77 77 80 77 80 25 23 43 42 41 36 44 35 10 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1507;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = uni2160;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
}
);
width = 733;
}
);
note = uni2160;
unicode = 8544;
},
{
glyphname = uni2161;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,86,o),
(639,86,qs),
(770,86,ls),
(932,86,o),
(932,203,qs),
(932,1153,ls),
(932,1270,o),
(770,1270,qs),
(643,1270,ls),
(479,1270,o),
(481,1153,qs),
(481,203,ls)
);
},
{
closed = 1;
nodes = (
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(61,1364,o),
(76,1364,qs),
(215,1360,o),
(354,1358,qs),
(1051,1358,ls),
(1256,1358,o),
(1339,1364,qs),
(1353,1364,o),
(1354,1270,o),
(1339,1270,qs),
(1175,1270,o),
(1176,1153,qs),
(1176,203,ls),
(1176,86,o),
(1335,86,qs),
(1349,86,o),
(1350,-6,o),
(1335,-6,qs),
(1202,-6,o),
(1057,0,q),
(360,0,l),
(153,-6,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
7 5 2 0 0 6 95 0 6 6 68 77 4 2 2 1 1 3 95 0 3 3 69 3 78 34 98 19 34 98 19 51 49 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1427;
}
);
note = uni2161;
unicode = 8545;
},
{
glyphname = uni2162;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,86,o),
(639,86,qs),
(768,86,ls),
(930,86,o),
(932,203,qs),
(932,1153,ls),
(932,1270,o),
(770,1270,qs),
(643,1270,ls),
(479,1270,o),
(481,1153,qs),
(481,203,ls)
);
},
{
closed = 1;
nodes = (
(1176,86,o),
(1333,86,qs),
(1462,86,ls),
(1624,86,o),
(1624,203,qs),
(1624,1153,ls),
(1624,1270,o),
(1464,1270,qs),
(1337,1270,ls),
(1173,1270,o),
(1176,1153,qs),
(1176,203,ls)
);
},
{
closed = 1;
nodes = (
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(61,1364,o),
(76,1364,qs),
(215,1360,o),
(354,1358,qs),
(1743,1358,ls),
(1970,1358,o),
(2032,1364,q),
(2046,1364,o),
(2046,1270,o),
(2032,1270,qs),
(1868,1270,o),
(1870,1153,qs),
(1870,203,ls),
(1870,86,o),
(2028,86,qs),
(2042,86,o),
(2042,-6,o),
(2028,-6,qs),
(1895,0,o),
(1749,0,qs),
(360,0,l),
(153,-6,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
9 7 2 3 0 0 8 95 0 8 8 68 77 6 4 3 3 1 1 5 95 0 5 5 69 5 78 54 52 68 19 34 98 19 51 51 51 49 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2160;
}
);
note = uni2162;
unicode = 8546;
},
{
glyphname = uni2163;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(61,1364,o),
(76,1364,qs),
(201,1360,o),
(354,1358,qs),
(936,1358,ls),
(1145,1358,o),
(1192,1364,q),
(1204,1364,o),
(1204,1270,o),
(1192,1270,qs),
(1067,1270,o),
(1067,1206,qs),
(1067,1183,o),
(1079,1153,qs),
(1362,379,l),
(1368,359,o),
(1403,358,o),
(1411,383,q),
(1706,1147,ls),
(1718,1180,o),
(1716,1198,qs),
(1712,1270,o),
(1618,1270,qs),
(1604,1270,o),
(1604,1364,o),
(1618,1364,qs),
(1665,1360,o),
(1991,1358,o),
(2038,1364,q),
(2052,1364,o),
(2052,1270,o),
(2038,1270,qs),
(1891,1270,o),
(1855,1186,qs),
(1372,6,ls),
(1354,-39,o),
(1286,-39,o),
(1270,6,qs),
(848,1153,ls),
(805,1270,o),
(705,1270,qs),
(643,1270,ls),
(479,1270,o),
(481,1153,qs),
(481,203,ls),
(479,86,o),
(639,86,qs),
(653,86,o),
(653,41,qs),
(651,-6,o),
(639,-6,qs),
(506,0,o),
(201,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
38 1 8 3 10 1 1 0 2 76 0 8 3 0 3 8 0 128 11 9 7 5 4 3 3 6 97 10 1 6 6 68 77 2 1 0 0 1 95 0 1 1 69 77 0 4 4 75 4 78 61 59 57 53 49 48 21 35 20 19 19 51 35 66 17 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2031;
}
);
note = uni2163;
unicode = 8547;
},
{
glyphname = uni2164;
layers = (
{
layerId = m01;
shapes = (
{
ref = V;
}
);
width = 1357;
}
);
note = uni2164;
unicode = 8548;
},
{
glyphname = uni2165;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,1153,ls),
(129,1270,o),
(31,1270,qs),
(17,1270,o),
(16,1364,o),
(31,1364,qs),
(90,1360,o),
(457,1358,o),
(518,1364,q),
(530,1364,o),
(530,1270,o),
(518,1270,qs),
(393,1270,o),
(393,1206,qs),
(393,1183,o),
(406,1153,q),
(686,379,ls),
(692,359,o),
(729,358,o),
(737,383,q),
(1032,1147,ls),
(1044,1180,o),
(1042,1198,qs),
(1038,1270,o),
(944,1270,qs),
(930,1270,o),
(930,1364,o),
(944,1364,qs),
(1007,1360,o),
(1151,1358,qs),
(1653,1358,ls),
(1880,1358,o),
(1942,1364,q),
(1956,1364,o),
(1956,1270,o),
(1942,1270,qs),
(1778,1270,o),
(1780,1153,qs),
(1780,203,ls),
(1780,86,o),
(1937,86,qs),
(1951,86,o),
(1952,-6,o),
(1937,-6,qs),
(1822,0,o),
(1460,0,o),
(1372,-6,qs),
(1358,-6,o),
(1358,86,o),
(1372,86,qs),
(1534,86,o),
(1536,203,qs),
(1536,1153,ls),
(1536,1270,o),
(1374,1270,qs),
(1364,1270,ls),
(1217,1270,o),
(1182,1186,qs),
(698,6,ls),
(680,-39,o),
(612,-39,o),
(596,6,q),
(596,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
39 1 8 1 1 76 0 8 1 2 1 8 2 128 11 9 7 5 4 1 1 6 97 10 1 6 6 68 77 4 1 2 2 3 95 0 3 3 69 77 0 0 0 75 0 78 60 58 56 54 50 49 21 34 68 19 34 66 19 51 17 12 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2031;
}
);
note = uni2165;
unicode = 8549;
},
{
glyphname = uni2166;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1780,86,o),
(1937,86,qs),
(2066,86,ls),
(2228,86,o),
(2228,203,qs),
(2228,1153,ls),
(2228,1270,o),
(2068,1270,qs),
(1942,1270,ls),
(1778,1270,o),
(1780,1153,qs),
(1780,203,ls)
);
},
{
closed = 1;
nodes = (
(172,1153,ls),
(129,1270,o),
(31,1270,qs),
(17,1270,o),
(16,1364,o),
(31,1364,qs),
(90,1360,o),
(457,1358,o),
(518,1364,q),
(530,1364,o),
(530,1270,o),
(518,1270,qs),
(393,1270,o),
(393,1206,qs),
(393,1183,o),
(406,1153,q),
(686,379,ls),
(692,359,o),
(729,358,o),
(737,383,q),
(1032,1147,ls),
(1044,1180,o),
(1042,1198,qs),
(1038,1270,o),
(944,1270,qs),
(930,1270,o),
(930,1364,o),
(944,1364,qs),
(1007,1360,o),
(1151,1358,qs),
(2347,1358,ls),
(2589,1358,o),
(2636,1364,q),
(2650,1364,o),
(2650,1270,o),
(2636,1270,qs),
(2472,1270,o),
(2474,1153,qs),
(2474,203,ls),
(2474,86,o),
(2632,86,qs),
(2646,86,o),
(2646,-6,o),
(2632,-6,qs),
(2542,0,o),
(2353,0,qs),
(1642,0,ls),
(1497,0,o),
(1372,-6,qs),
(1358,-6,o),
(1358,86,o),
(1372,86,qs),
(1534,86,o),
(1536,203,qs),
(1536,1153,ls),
(1536,1270,o),
(1374,1270,qs),
(1364,1270,ls),
(1217,1270,o),
(1182,1186,qs),
(698,6,ls),
(680,-39,o),
(612,-39,o),
(596,6,q),
(596,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
53 1 10 0 1 76 0 10 0 1 0 10 1 128 13 11 9 7 3 5 0 0 8 97 12 1 8 8 68 77 6 4 2 1 1 5 95 0 5 5 69 77 0 2 2 75 2 78 74 72 70 68 64 63 58 57 52 50 68 19 34 98 19 51 19 51 49 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2725;
}
);
note = uni2166;
unicode = 8550;
},
{
glyphname = uni2167;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2472,86,o),
(2630,86,qs),
(2759,86,ls),
(2921,86,o),
(2920,203,qs),
(2920,1153,ls),
(2920,1270,o),
(2761,1270,qs),
(2634,1270,ls),
(2470,1270,o),
(2472,1153,qs),
(2472,203,ls)
);
},
{
closed = 1;
nodes = (
(172,1153,ls),
(129,1270,o),
(31,1270,qs),
(17,1270,o),
(16,1364,o),
(31,1364,qs),
(90,1360,o),
(457,1358,o),
(518,1364,q),
(530,1364,o),
(530,1270,o),
(518,1270,qs),
(393,1270,o),
(393,1206,qs),
(393,1183,o),
(406,1153,q),
(686,379,ls),
(692,359,o),
(729,358,o),
(737,383,q),
(1032,1147,ls),
(1044,1180,o),
(1042,1198,qs),
(1038,1270,o),
(944,1270,qs),
(930,1270,o),
(930,1364,o),
(944,1364,qs),
(1007,1360,o),
(1151,1358,qs),
(3039,1358,ls),
(3244,1358,o),
(3328,1364,qs),
(3342,1364,o),
(3342,1270,o),
(3328,1270,qs),
(3164,1270,o),
(3164,1153,qs),
(3164,203,ls),
(3164,86,o),
(3324,86,qs),
(3338,86,o),
(3338,-6,o),
(3324,-6,qs),
(3191,-6,o),
(3045,0,q),
(1640,0,ls),
(1458,0,o),
(1370,-6,qs),
(1356,-6,o),
(1356,86,o),
(1370,86,qs),
(1532,86,o),
(1534,203,qs),
(1534,1153,ls),
(1534,1270,o),
(1372,1270,qs),
(1364,1270,ls),
(1217,1270,o),
(1182,1186,qs),
(698,6,ls),
(680,-39,o),
(612,-39,o),
(596,6,q),
(596,6,l)
);
},
{
closed = 1;
nodes = (
(1778,86,o),
(1935,86,qs),
(2064,86,ls),
(2226,86,o),
(2226,203,qs),
(2226,1153,ls),
(2226,1270,o),
(2066,1270,qs),
(1939,1270,ls),
(1775,1270,o),
(1778,1153,qs),
(1778,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
53 1 10 0 1 76 0 10 0 1 0 10 1 128 14 13 11 9 7 3 6 0 0 8 97 12 1 8 8 68 77 15 6 4 3 1 1 5 95 0 5 5 69 77 0 2 2 75 2 78 87 84 81 78 74 72 70 68 64 63 58 57 52 50 98 19 34 98 19 51 19 51 49 16 11 31 
CALL[ ]	/* CallFunction */";
};
width = 3418;
}
);
note = uni2167;
unicode = 8551;
},
{
glyphname = uni2168;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,86,o),
(639,86,qs),
(795,86,o),
(862,172,qs),
(1229,631,ls),
(1241,647,o),
(1241,678,o),
(1229,694,qs),
(872,1194,ls),
(819,1270,o),
(694,1270,qs),
(643,1270,ls),
(479,1270,o),
(481,1153,qs),
(481,203,ls)
);
},
{
closed = 1;
nodes = (
(238,1153,ls),
(238,1270,o),
(76,1270,qs),
(62,1270,o),
(61,1364,o),
(76,1364,qs),
(123,1360,o),
(354,1358,qs),
(985,1358,ls),
(1227,1358,o),
(1276,1364,q),
(1290,1364,o),
(1290,1270,o),
(1276,1270,qs),
(1151,1270,o),
(1151,1214,qs),
(1151,1189,o),
(1180,1153,q),
(1376,879,ls),
(1386,865,o),
(1409,864,o),
(1419,879,q),
(1634,1147,ls),
(1669,1190,o),
(1669,1217,qs),
(1669,1270,o),
(1587,1270,qs),
(1573,1270,o),
(1573,1364,o),
(1587,1364,qs),
(1634,1360,o),
(1982,1358,o),
(2030,1364,q),
(2044,1364,o),
(2046,1270,o),
(2030,1270,qs),
(1913,1270,o),
(1821,1186,qs),
(1788,1157,o),
(1737,1092,qs),
(1485,782,ls),
(1469,762,o),
(1466,729,o),
(1479,713,q),
(1827,203,ls),
(1907,86,o),
(2044,86,qs),
(2058,86,o),
(2058,-6,o),
(2044,-6,qs),
(1964,0,o),
(1593,0,o),
(1499,-6,qs),
(1485,-6,o),
(1485,86,o),
(1499,86,qs),
(1608,86,o),
(1608,133,qs),
(1608,162,o),
(1573,209,qs),
(1329,526,ls),
(1319,540,o),
(1292,543,o),
(1280,526,qs),
(1110,299,ls),
(1044,211,o),
(1042,156,qs),
(1040,86,o),
(1143,86,qs),
(1157,86,o),
(1155,-6,o),
(1143,-6,qs),
(1065,0,o),
(911,0,qs),
(360,0,ls),
(200,0,o),
(76,-6,qs),
(62,-6,o),
(59,86,o),
(76,86,qs),
(238,86,o),
(238,203,q),
(238,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
47 25 2 3 73 14 12 10 8 4 0 0 9 97 13 1 9 9 68 77 0 11 11 71 77 7 5 4 2 4 1 1 3 97 6 1 3 3 69 3 78 95 93 90 87 83 82 77 76 71 69 66 65 25 35 50 27 35 82 19 39 49 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2115;
}
);
note = uni2168;
unicode = 8552;
},
{
glyphname = uni2169;
layers = (
{
layerId = m01;
shapes = (
{
ref = X;
}
);
width = 1380;
}
);
note = uni2169;
unicode = 8553;
},
{
glyphname = uni216A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1231,86,o),
(1368,86,qs),
(1395,86,ls),
(1557,86,o),
(1556,203,qs),
(1556,1153,ls),
(1556,1270,o),
(1397,1270,qs),
(1356,1270,ls),
(1239,1270,o),
(1147,1186,qs),
(1114,1157,o),
(1063,1092,qs),
(811,782,ls),
(795,762,o),
(793,729,o),
(805,713,qs),
(1151,203,ls)
);
},
{
closed = 1;
nodes = (
(555,631,ls),
(567,647,o),
(567,678,o),
(555,694,qs),
(199,1194,ls),
(146,1270,o),
(20,1270,qs),
(6,1270,o),
(6,1364,o),
(20,1364,qs),
(67,1360,o),
(555,1358,o),
(602,1364,q),
(616,1364,o),
(616,1270,o),
(602,1270,qs),
(477,1270,o),
(477,1214,qs),
(477,1189,o),
(506,1153,q),
(702,879,ls),
(712,865,o),
(733,864,o),
(745,879,qs),
(961,1147,ls),
(996,1190,o),
(995,1217,qs),
(995,1270,o),
(913,1270,qs),
(899,1270,o),
(899,1364,o),
(913,1364,qs),
(960,1360,o),
(1135,1358,qs),
(1675,1358,ls),
(1917,1358,o),
(1964,1364,q),
(1978,1364,o),
(1978,1270,o),
(1964,1270,qs),
(1800,1270,o),
(1800,1153,qs),
(1800,203,ls),
(1800,86,o),
(1960,86,qs),
(1974,86,o),
(1974,-6,o),
(1960,-6,qs),
(1827,0,o),
(1681,0,qs),
(1096,0,ls),
(922,0,o),
(825,-6,qs),
(811,-6,o),
(811,86,o),
(825,86,qs),
(934,86,o),
(934,133,qs),
(934,162,o),
(897,209,qs),
(655,526,ls),
(645,540,o),
(618,543,o),
(606,526,qs),
(436,299,ls),
(370,211,o),
(369,156,qs),
(367,86,o),
(469,86,qs),
(483,86,o),
(481,-6,o),
(469,-6,qs),
(391,0,o),
(8,0,o),
(-33,-6,q),
(-45,-6,o),
(-45,86,o),
(-33,86,qs),
(120,86,o),
(188,172,q),
(188,172,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
26 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
14 12 10 8 4 0 0 9 97 13 1 9 9 68 77 0 11 11 71 77 7 5 4 2 4 1 1 3 97 6 1 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 5 4 2 4 1 6 1 3 1 3 101 14 12 10 8 4 0 0 9 97 13 1 9 9 68 77 0 11 11 71 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
92 90 87 86 82 81 76 75 70 68 65 62 19 34 98 27 35 20 19 51 55 15 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2054;
}
);
note = uni216A;
unicode = 8554;
},
{
glyphname = uni216B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1802,86,o),
(1962,86,qs),
(2089,86,ls),
(2251,86,o),
(2251,203,qs),
(2251,1153,ls),
(2251,1270,o),
(2091,1270,qs),
(1966,1270,ls),
(1802,1270,o),
(1802,1153,qs),
(1802,203,ls)
);
},
{
closed = 1;
nodes = (
(1231,86,o),
(1368,86,qs),
(1397,86,ls),
(1559,86,o),
(1559,203,qs),
(1559,1153,ls),
(1559,1270,o),
(1399,1270,qs),
(1356,1270,ls),
(1239,1270,o),
(1147,1186,qs),
(1114,1157,o),
(1063,1092,qs),
(811,782,ls),
(795,762,o),
(793,729,o),
(805,713,qs),
(1151,203,ls)
);
},
{
closed = 1;
nodes = (
(555,631,ls),
(567,647,o),
(567,664,qs),
(567,676,o),
(555,694,qs),
(199,1194,ls),
(146,1270,o),
(20,1270,qs),
(6,1270,o),
(6,1364,o),
(20,1364,qs),
(67,1360,o),
(555,1358,o),
(602,1364,q),
(616,1364,o),
(616,1270,o),
(602,1270,qs),
(477,1270,o),
(477,1214,qs),
(477,1189,o),
(506,1153,q),
(702,879,ls),
(712,865,o),
(723,864,qs),
(735,864,o),
(745,879,q),
(961,1147,ls),
(996,1190,o),
(995,1217,qs),
(995,1270,o),
(913,1270,qs),
(899,1270,o),
(899,1364,o),
(913,1364,qs),
(960,1360,o),
(1135,1358,qs),
(2370,1358,ls),
(2612,1358,o),
(2658,1364,q),
(2672,1364,o),
(2673,1270,o),
(2658,1270,qs),
(2494,1270,o),
(2494,1153,qs),
(2494,203,ls),
(2494,86,o),
(2654,86,qs),
(2668,86,o),
(2669,-6,o),
(2654,-6,qs),
(2521,0,o),
(2376,0,qs),
(1096,0,ls),
(922,0,o),
(825,-6,qs),
(811,-6,o),
(811,86,o),
(825,86,qs),
(934,86,o),
(934,133,qs),
(934,162,o),
(897,209,qs),
(655,526,ls),
(645,540,o),
(633,543,q),
(619,543,o),
(606,526,qs),
(436,299,ls),
(370,211,o),
(369,156,qs),
(367,86,o),
(469,86,qs),
(483,86,o),
(481,-6,o),
(469,-6,qs),
(391,0,o),
(8,0,o),
(-33,-6,q),
(-45,-6,o),
(-45,86,o),
(-33,86,qs),
(120,86,o),
(188,172,q),
(188,172,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
38 1 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
16 14 12 10 2 5 0 0 11 97 15 1 11 11 68 77 0 13 13 71 77 9 7 6 4 3 5 1 1 5 97 8 1 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 7 6 4 3 5 1 8 1 5 1 5 101 16 14 12 10 2 5 0 0 11 97 15 1 11 11 68 77 0 13 13 71 13 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
106 104 101 100 96 95 90 88 83 81 78 75 71 70 67 65 98 28 35 20 19 51 57 51 49 17 11 31 
CALL[ ]	/* CallFunction */";
};
width = 2748;
}
);
note = uni216B;
unicode = 8555;
},
{
glyphname = uni216C;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
}
);
width = 1357;
}
);
note = uni216C;
unicode = 8556;
},
{
glyphname = uni216D;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
}
);
width = 1347;
}
);
note = uni216D;
unicode = 8557;
},
{
glyphname = uni216E;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
}
);
width = 1566;
}
);
note = uni216E;
unicode = 8558;
},
{
glyphname = uni216F;
layers = (
{
layerId = m01;
shapes = (
{
ref = M;
}
);
width = 1814;
}
);
note = uni216F;
unicode = 8559;
},
{
glyphname = uni2170;
layers = (
{
layerId = m01;
shapes = (
{
ref = i;
}
);
width = 522;
}
);
note = uni2170;
unicode = 8560;
},
{
glyphname = uni2171;
layers = (
{
layerId = m01;
shapes = (
{
pos = (524,0);
ref = i;
},
{
ref = i;
}
);
width = 1046;
}
);
note = uni2171;
unicode = 8561;
},
{
glyphname = uni2172;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1049,0);
ref = i;
},
{
pos = (524,0);
ref = i;
},
{
ref = i;
}
);
width = 1570;
}
);
note = uni2172;
unicode = 8562;
},
{
glyphname = uni2173;
layers = (
{
layerId = m01;
shapes = (
{
pos = (524,0);
ref = v;
},
{
ref = i;
}
);
width = 1447;
}
);
note = uni2173;
unicode = 8563;
},
{
glyphname = uni2174;
layers = (
{
layerId = m01;
shapes = (
{
ref = v;
}
);
width = 923;
}
);
note = uni2174;
unicode = 8564;
},
{
glyphname = uni2175;
layers = (
{
layerId = m01;
shapes = (
{
pos = (926,0);
ref = i;
},
{
ref = v;
}
);
width = 1447;
}
);
note = uni2175;
unicode = 8565;
},
{
glyphname = uni2176;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1450,0);
ref = i;
},
{
pos = (926,0);
ref = i;
},
{
ref = v;
}
);
width = 1972;
}
);
note = uni2176;
unicode = 8566;
},
{
glyphname = uni2177;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1972,0);
ref = i;
},
{
pos = (1450,0);
ref = i;
},
{
pos = (926,0);
ref = i;
},
{
ref = v;
}
);
width = 2496;
}
);
note = uni2177;
unicode = 8567;
},
{
glyphname = uni2178;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1398,68,o),
(1470,68,qs),
(1486,68,o),
(1487,-8,o),
(1470,-8,q),
(1390,0,o),
(1251,0,qs),
(1101,0,o),
(1022,-8,q),
(1006,-8,o),
(1006,68,o),
(1022,68,qs),
(1104,68,o),
(1104,92,qs),
(1104,102,o),
(1073,147,qs),
(969,299,ls),
(963,307,o),
(950,307,qs),
(942,307,o),
(934,297,qs),
(823,164,ls),
(776,109,o),
(776,90,qs),
(776,65,o),
(836,68,qs),
(852,68,o),
(852,-8,o),
(836,-8,q),
(756,0,o),
(672,0,qs),
(590,0,o),
(510,-8,q),
(496,-8,l),
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,557,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,719,qs),
(55,758,o),
(72,756,q),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(373,883,qs),
(402,883,o),
(399,856,qs),
(393,768,o),
(393,682,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,ls),
(610,68,o),
(666,135,qs),
(870,385,ls),
(880,397,o),
(881,412,qs),
(881,422,o),
(874,434,q),
(653,715,ls),
(600,785,o),
(541,784,qs),
(527,784,o),
(524,856,o),
(541,856,q),
(604,850,o),
(754,850,qs),
(908,850,o),
(967,856,q),
(983,856,o),
(981,784,o),
(967,784,qs),
(906,784,o),
(905,756,qs),
(905,738,o),
(930,702,qs),
(1006,596,l),
(1012,586,o),
(1024,586,qs),
(1034,586,o),
(1042,596,qs),
(1114,686,ls),
(1147,729,o),
(1147,752,qs),
(1147,785,o),
(1075,784,qs),
(1059,784,o),
(1059,856,o),
(1075,856,q),
(1134,850,o),
(1241,850,qs),
(1345,850,o),
(1409,856,q),
(1423,856,o),
(1423,784,o),
(1409,784,qs),
(1346,784,o),
(1288,719,q),
(1108,502,ls),
(1098,490,o),
(1098,477,qs),
(1098,467,o),
(1108,455,qs),
(1335,154,ls)
);
},
{
closed = 1;
nodes = (
(401,1114,o),
(342,1073,qs),
(303,1046,o),
(256,1049,q),
(180,1049,o),
(139,1106,qs),
(112,1143,o),
(113,1186,qs),
(113,1256,o),
(170,1296,qs),
(209,1325,o),
(256,1323,qs),
(334,1323,o),
(375,1266,qs),
(401,1227,o),
(401,1186,q),
(401,1186,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
57 38 14 3 1 7 67 1 9 8 96 91 46 24 4 6 9 3 76 110 86 81 3 11 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 0 9 6 8 9 105 0 18 18 17 97 0 17 17 68 77 0 7 7 71 77 5 3 2 3 0 0 1 97 4 1 1 1 71 77 16 14 13 10 4 6 6 11 97 15 12 2 11 11 69 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 17 0 18 7 17 18 105 0 8 0 9 6 8 9 105 0 7 7 71 77 5 3 2 3 0 0 1 97 4 1 1 1 71 77 16 14 13 10 4 6 6 11 97 15 12 2 11 11 69 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 17 0 18 7 17 18 105 0 8 0 9 6 8 9 105 16 14 13 10 4 6 15 12 2 11 6 11 101 0 7 7 71 77 5 3 2 3 0 0 1 97 4 1 1 1 71 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
129 127 121 119 114 112 109 107 103 102 90 88 85 83 80 78 74 73 70 68 20 37 56 35 36 28 35 36 22 19 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1472;
}
);
note = uni2178;
unicode = 8568;
},
{
glyphname = uni2179;
layers = (
{
layerId = m01;
shapes = (
{
ref = x;
}
);
width = 948;
}
);
note = uni2179;
unicode = 8569;
},
{
glyphname = uni217A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (950,0);
ref = i;
},
{
ref = x;
}
);
width = 1472;
}
);
note = uni217A;
unicode = 8570;
},
{
glyphname = uni217B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1475,0);
ref = i;
},
{
pos = (950,0);
ref = i;
},
{
ref = x;
}
);
width = 1996;
}
);
note = uni217B;
unicode = 8571;
},
{
glyphname = uni217C;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
}
);
width = 522;
}
);
note = uni217C;
unicode = 8572;
},
{
glyphname = uni217D;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
}
);
width = 878;
}
);
note = uni217D;
unicode = 8573;
},
{
glyphname = uni217E;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
}
);
width = 1034;
}
);
note = uni217E;
unicode = 8574;
},
{
glyphname = uni217F;
layers = (
{
layerId = m01;
shapes = (
{
ref = m;
}
);
width = 1628;
}
);
note = uni217F;
unicode = 8575;
},
{
glyphname = period;
kernLeft = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(418,54,o),
(328,-27,o),
(199,-25,o),
(104,61,o),
(104,188,o),
(186,279,o),
(340,279,o),
(418,181,o),
(418,109,q),
(418,109,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 97 0 1 1 75 1 78 19 18 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
kernLeft = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453,-84,o),
(264,-315,o),
(145,-373,qs),
(122,-383,o),
(96,-344,o),
(109,-330,qs),
(246,-168,o),
(246,-63,qs),
(246,-43,o),
(180,-20,o),
(92,72,o),
(92,193,o),
(188,268,o),
(324,268,o),
(453,145,o),
(453,49,q),
(453,49,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 18 1 11 23 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,636,o),
(397,563,o),
(272,563,o),
(186,645,o),
(186,764,o),
(264,852,o),
(408,852,o),
(483,759,o),
(483,702,q),
(483,702,l)
);
},
{
closed = 1;
nodes = (
(483,47,o),
(397,-27,o),
(272,-27,o),
(186,55,o),
(186,174,o),
(264,262,o),
(408,262,o),
(483,170,o),
(483,113,q),
(483,113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 0 97 0 0 0 71 77 0 2 2 3 97 0 3 3 75 3 78 19 21 19 18 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,-88,o),
(338,-317,o),
(219,-373,qs),
(196,-383,o),
(170,-344,o),
(182,-330,qs),
(319,-168,o),
(319,-63,qs),
(319,-43,o),
(254,-20,o),
(166,72,o),
(166,193,o),
(262,268,o),
(397,268,o),
(526,145,o),
(526,49,q),
(526,49,l)
);
},
{
closed = 1;
nodes = (
(455,646,o),
(371,563,o),
(246,563,o),
(156,645,o),
(156,770,o),
(240,856,o),
(377,856,o),
(455,768,o),
(455,707,q),
(455,707,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
0 0 2 0 134 0 2 2 1 97 0 1 1 71 2 78 24 23 20 19 18 3 11 23 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1866,37,o),
(1798,-2,qs),
(1761,-25,o),
(1714,-25,qs),
(1642,-25,o),
(1595,20,qs),
(1552,63,o),
(1552,133,qs),
(1552,188,o),
(1591,231,qs),
(1634,278,o),
(1714,279,qs),
(1788,279,o),
(1833,221,qs),
(1866,180,o),
(1866,121,q),
(1866,121,l)
);
},
{
closed = 1;
nodes = (
(500,37,o),
(432,-2,qs),
(395,-25,o),
(348,-25,qs),
(276,-25,o),
(229,20,qs),
(186,63,o),
(186,133,qs),
(186,188,o),
(225,231,qs),
(268,278,o),
(348,279,qs),
(422,279,o),
(467,221,qs),
(500,180,o),
(500,121,q),
(500,121,l)
);
},
{
closed = 1;
nodes = (
(1182,37,o),
(1114,-2,qs),
(1077,-25,o),
(1030,-25,qs),
(958,-25,o),
(911,20,qs),
(868,63,o),
(868,133,qs),
(868,188,o),
(907,231,qs),
(950,278,o),
(1030,279,qs),
(1104,279,o),
(1149,221,qs),
(1182,180,o),
(1182,121,q),
(1182,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
4 2 2 0 0 1 97 5 3 2 1 1 69 1 78 38 39 38 39 38 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 2048;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
kernLeft = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(418,56,o),
(330,-25,o),
(195,-25,o),
(104,61,o),
(104,184,o),
(186,279,o),
(340,279,o),
(418,185,o),
(418,117,q),
(418,117,l)
);
},
{
closed = 1;
nodes = (
(401,1161,o),
(332,686,qs),
(320,596,o),
(311,440,qs),
(311,420,o),
(211,420,o),
(209,440,q),
(207,542,o),
(129,1214,o),
(129,1247,qs),
(129,1319,o),
(213,1399,o),
(264,1399,qs),
(332,1399,o),
(401,1329,o),
(401,1280,q),
(401,1280,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
19 1 3 2 1 76 0 3 2 0 2 3 0 128 0 2 2 74 77 0 0 0 1 97 0 1 1 69 1 78 22 37 19 18 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,786,o),
(209,866,o),
(342,866,o),
(432,780,o),
(432,655,o),
(350,561,o),
(199,561,o),
(119,657,o),
(119,725,q),
(119,725,l)
);
},
{
closed = 1;
nodes = (
(135,-319,o),
(205,156,qs),
(219,246,o),
(225,401,qs),
(225,421,o),
(326,422,o),
(328,401,q),
(330,299,o),
(408,-375,o),
(408,-406,qs),
(408,-478,o),
(324,-557,o),
(272,-557,qs),
(204,-557,o),
(135,-487,o),
(135,-438,q),
(135,-438,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
19 1 2 3 1 76 0 3 0 2 0 3 2 128 0 0 0 1 97 0 1 1 71 77 0 2 2 73 2 78 22 37 19 18 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
kernLeft = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,758,o),
(592,707,qs),
(426,625,ls),
(354,588,o),
(354,567,qs),
(352,514,o),
(371,440,q),
(369,415,o),
(317,416,qs),
(301,416,o),
(297,422,qs),
(217,569,o),
(217,649,qs),
(217,686,o),
(246,752,o),
(297,795,o),
(334,813,qs),
(438,866,ls),
(563,929,o),
(563,979,qs),
(563,1036,o),
(477,1116,o),
(358,1126,qs),
(279,1133,ls),
(248,1135,o),
(174,1202,o),
(174,1260,qs),
(174,1303,o),
(246,1362,o),
(295,1362,qs),
(389,1362,o),
(563,1241,o),
(694,1045,o),
(694,936,q),
(694,936,l)
);
},
{
closed = 1;
nodes = (
(492,56,o),
(403,-25,o),
(268,-25,o),
(178,61,o),
(178,184,o),
(260,279,o),
(414,279,o),
(492,185,o),
(492,117,q),
(492,117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 1 3 1 2 3 128 0 1 1 0 97 0 0 0 68 77 0 3 3 4 97 0 4 4 69 4 78 19 27 31 20 35 5 11 27 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,65,o),
(276,119,qs),
(442,201,ls),
(514,238,o),
(514,258,qs),
(516,311,o),
(496,385,q),
(500,412,o),
(551,410,qs),
(567,410,o),
(569,401,q),
(649,254,o),
(649,174,qs),
(649,137,o),
(623,72,o),
(571,31,o),
(535,12,qs),
(430,-43,ls),
(303,-106,o),
(303,-154,qs),
(303,-211,o),
(389,-293,o),
(510,-301,qs),
(588,-307,ls),
(619,-309,o),
(694,-379,o),
(694,-434,qs),
(694,-477,o),
(623,-539,o),
(571,-539,qs),
(477,-539,o),
(303,-416,o),
(174,-222,o),
(174,-113,q),
(174,-113,l)
);
},
{
closed = 1;
nodes = (
(377,770,o),
(465,850,o),
(598,850,o),
(690,762,o),
(690,639,o),
(608,547,o),
(455,547,o),
(377,641,o),
(377,709,q),
(377,709,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 1 3 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 4 1 4 3 1 128 0 4 4 5 97 0 5 5 71 77 2 1 1 1 0 97 0 0 0 73 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 2 4 3 2 128 0 2 1 1 2 112 0 4 4 5 97 0 5 5 71 77 0 1 1 0 98 0 0 0 73 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
19 27 29 17 20 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,434,o),
(428,391,qs),
(389,364,o),
(342,365,qs),
(270,365,o),
(221,410,qs),
(176,453,o),
(176,522,qs),
(176,577,o),
(215,623,qs),
(260,672,o),
(342,672,qs),
(434,672,o),
(475,588,qs),
(492,553,o),
(492,512,q),
(492,512,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 38 35 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,1008,o),
(629,915,qs),
(723,821,o),
(723,688,qs),
(723,553,o),
(629,459,qs),
(537,369,o),
(270,367,o),
(178,461,qs),
(86,553,o),
(86,823,o),
(178,915,qs),
(272,1008,o),
(403,1008,q),
(403,1008,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 6 0 14 1 13 3 11 22 
CALL[ ]	/* CallFunction */";
};
width = 806;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(356,915,l),
(121,778,l),
(66,874,l),
(301,1012,l),
(66,1147,l),
(121,1243,l),
(356,1108,l),
(356,1380,l),
(467,1380,l),
(467,1108,l),
(702,1243,l),
(758,1147,l),
(522,1012,l),
(758,874,l),
(702,778,l),
(467,915,l),
(467,641,l),
(356,641,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
16 15 14 13 12 11 10 7 6 5 4 3 2 1 14 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 95 0 0 0 68 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 17 0 17 24 3 11 23 
CALL[ ]	/* CallFunction */";
};
width = 827;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(993,803,l),
(780,803,l),
(702,514,l),
(883,514,l),
(883,381,l),
(668,381,l),
(569,10,l),
(434,10,l),
(532,381,l),
(352,381,l),
(254,10,l),
(119,10,l),
(219,381,l),
(25,381,l),
(25,514,l),
(254,514,l),
(330,803,l),
(135,803,l),
(135,934,l),
(365,934,l),
(449,1249,l),
(584,1249,l),
(500,934,l),
(680,934,l),
(764,1249,l),
(899,1249,l),
(815,934,l),
(993,934,l)
);
},
{
closed = 1;
nodes = (
(465,803,l),
(389,514,l),
(569,514,l),
(645,803,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 1 0 1 0 133 16 13 3 3 1 15 12 2 4 5 1 4 104 14 11 2 5 10 8 2 6 7 5 6 103 9 1 7 7 69 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 1 0 133 9 1 7 6 7 134 16 13 3 3 1 15 12 2 4 5 1 4 104 14 11 2 5 6 6 5 87 14 11 2 5 5 6 95 10 8 2 6 5 6 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,-18,ls),
(117,-26,o),
(100,-27,qs),
(59,-27,o),
(12,2,qs),
(-17,18,o),
(-14,33,q),
(-14,39,l),
(596,1479,ls),
(598,1485,o),
(614,1487,q),
(657,1487,o),
(705,1458,qs),
(732,1444,o),
(733,1432,qs),
(733,1423,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
15 1 1 0 1 76 0 0 0 70 77 0 1 1 75 1 78 23 19 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(741,6,o),
(664,-18,qs),
(637,-26,o),
(616,-29,q),
(598,-29,o),
(594,-18,qs),
(-14,1425,ls),
(-26,1454,o),
(43,1483,qs),
(74,1495,o),
(96,1493,qs),
(121,1493,o),
(125,1481,q),
(731,31,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 3 1 50 
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = uni2016;
layers = (
{
layerId = m01;
shapes = (
{
pos = (385,0);
ref = bar;
},
{
ref = bar;
}
);
width = 944;
}
);
note = uni2016;
unicode = 8214;
},
{
glyphname = uni2038;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-1524);
ref = circumflex;
}
);
width = 776;
}
);
note = uni2038;
unicode = 8248;
},
{
glyphname = uni2041;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,-485,ls),
(146,-493,o),
(129,-496,q),
(88,-496,o),
(43,-467,qs),
(8,-447,o),
(14,-428,q),
(467,616,ls),
(469,622,o),
(485,623,qs),
(522,623,o),
(575,596,qs),
(610,580,o),
(604,559,q),
(371,23,l),
(608,-426,ls),
(612,-434,o),
(602,-449,q),
(577,-480,o),
(524,-496,qs),
(508,-502,o),
(483,-502,o),
(477,-494,q),
(297,-150,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
23 8 2 1 0 1 76 0 0 1 0 133 0 1 1 118 22 28 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 626;
}
);
note = uni2041;
unicode = 8257;
},
{
glyphname = uni204A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(782,-387,o),
(705,-471,qs),
(627,-557,o),
(481,-557,qs),
(395,-557,o),
(266,-528,qs),
(248,-524,o),
(256,-477,qs),
(264,-434,o),
(285,-436,qs),
(357,-446,o),
(393,-446,qs),
(555,-446,o),
(555,-272,qs),
(555,709,ls),
(555,750,o),
(510,750,qs),
(156,750,ls),
(127,750,o),
(104,700,q),
(94,682,o),
(59,694,qs),
(12,712,o),
(18,729,qs),
(61,846,o),
(90,948,qs),
(92,958,o),
(113,958,qs),
(146,958,o),
(166,940,q),
(172,936,o),
(172,926,qs),
(170,903,o),
(170,895,qs),
(170,852,o),
(209,850,q),
(580,850,o),
(666,864,qs),
(715,874,o),
(743,874,qs),
(790,874,o),
(791,813,q),
(783,668,o),
(782,618,qs),
(782,-231,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 0 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 1 2 112 0 0 0 71 77 0 3 3 1 97 0 1 1 71 77 0 4 4 5 97 0 5 5 73 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 0 0 0 71 77 0 3 3 1 97 0 1 1 71 77 0 4 4 5 97 0 5 5 73 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 35 56 38 34 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 925;
}
);
note = uni204A;
unicode = 8266;
},
{
glyphname = uni2E0C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,725,l),
(0,1403,l),
(127,1468,l),
(471,791,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
2 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = uni2E0C;
unicode = 11788;
},
{
glyphname = uni2E0D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,725,l),
(55,791,l),
(399,1468,l),
(526,1403,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
2 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni2E0D;
unicode = 11789;
},
{
glyphname = uniFE5F;
layers = (
{
layerId = m01;
shapes = (
{
ref = numbersign.sc;
}
);
width = 729;
}
);
note = uniFE5F;
unicode = 65119;
},
{
glyphname = uniFE6A;
layers = (
{
layerId = m01;
shapes = (
{
ref = percent.sc;
}
);
width = 1431;
}
);
note = uniFE6A;
unicode = 65130;
},
{
glyphname = colon.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(602,636,o),
(518,563,o),
(393,563,o),
(305,645,o),
(305,764,o),
(385,852,o),
(528,852,o),
(602,759,o),
(602,702,q),
(602,702,l)
);
},
{
closed = 1;
nodes = (
(602,47,o),
(518,-27,o),
(393,-27,o),
(305,55,o),
(305,174,o),
(385,262,o),
(526,262,o),
(602,170,o),
(602,113,q),
(602,113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 1 0 0 1 0 101 0 2 2 3 97 0 3 3 33 2 78 19 21 19 18 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 712;
}
);
note = colon.alt;
},
{
glyphname = semicolon.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(647,-88,o),
(457,-317,o),
(340,-373,qs),
(317,-383,o),
(291,-344,o),
(303,-330,qs),
(440,-168,o),
(440,-63,qs),
(440,-43,o),
(375,-20,o),
(287,72,o),
(287,193,o),
(383,268,o),
(516,268,o),
(647,145,o),
(647,49,q),
(647,49,l)
);
},
{
closed = 1;
nodes = (
(575,646,o),
(489,563,o),
(367,563,o),
(276,645,o),
(276,770,o),
(358,856,o),
(496,856,o),
(575,768,o),
(575,707,q),
(575,707,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 136 0 2 1 1 2 93 0 2 2 1 97 0 1 2 1 81 24 23 20 19 18 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 712;
}
);
note = semicolon.alt;
},
{
glyphname = exclam.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,56,o),
(449,-25,o),
(315,-25,o),
(223,61,o),
(223,184,o),
(305,279,o),
(459,279,o),
(539,185,o),
(539,117,q),
(539,117,l)
);
},
{
closed = 1;
nodes = (
(520,1161,o),
(453,686,qs),
(441,596,o),
(430,440,q),
(430,420,o),
(330,420,o),
(330,440,qs),
(328,542,o),
(250,1214,o),
(250,1247,qs),
(250,1319,o),
(291,1360,q),
(336,1399,o),
(385,1399,qs),
(453,1399,o),
(520,1329,o),
(520,1280,q),
(520,1280,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 3 2 101 0 0 0 1 97 0 1 1 33 0 78 23 37 19 18 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 638;
}
);
note = exclam.alt;
},
{
glyphname = question.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(813,758,o),
(713,707,qs),
(547,625,ls),
(475,588,o),
(473,567,qs),
(471,514,o),
(492,440,q),
(490,415,o),
(438,416,qs),
(422,416,o),
(418,422,qs),
(338,569,o),
(338,649,qs),
(338,686,o),
(365,752,o),
(416,795,o),
(455,813,qs),
(557,866,ls),
(682,929,o),
(682,979,qs),
(682,1036,o),
(598,1116,o),
(477,1126,qs),
(399,1133,ls),
(368,1135,o),
(295,1202,o),
(295,1260,qs),
(295,1303,o),
(367,1362,o),
(416,1362,qs),
(510,1362,o),
(684,1241,o),
(813,1045,o),
(813,936,q),
(813,936,l)
);
},
{
closed = 1;
nodes = (
(612,56,o),
(522,-25,o),
(389,-25,o),
(299,61,o),
(299,184,o),
(381,279,o),
(532,279,o),
(612,185,o),
(612,117,q),
(612,117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
29 1 0 73 0 2 3 1 3 2 1 131 0 1 0 0 1 0 102 0 3 3 4 97 0 4 4 33 3 78 19 27 31 20 35 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 870;
}
);
note = question.alt;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(653,1458,o),
(627,1427,qs),
(623,1423,ls),
(338,1136,o),
(338,588,qs),
(338,29,o),
(623,-250,qs),
(650,-277,o),
(649,-309,qs),
(649,-354,o),
(606,-354,qs),
(571,-354,o),
(543,-330,qs),
(422,-217,o),
(362,-143,qs),
(122,156,o),
(123,588,qs),
(123,846,o),
(264,1141,qs),
(356,1340,o),
(543,1505,qs),
(570,1530,o),
(606,1530,qs),
(653,1530,o),
(653,1483,q),
(653,1483,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 134 0 0 0 70 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 133 0 1 1 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
42 33 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
kernLeft = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,332,o),
(412,35,qs),
(320,-162,o),
(133,-330,qs),
(106,-355,o),
(70,-354,qs),
(27,-354,o),
(27,-313,qs),
(27,-282,o),
(53,-256,qs),
(225,-82,o),
(299,223,qs),
(340,395,o),
(338,588,qs),
(338,959,o),
(197,1229,qs),
(136,1346,o),
(53,1425,q),
(28,1452,o),
(29,1485,qs),
(29,1530,o),
(70,1530,qs),
(107,1530,o),
(133,1505,qs),
(250,1396,o),
(305,1329,qs),
(553,1026,o),
(553,588,q),
(553,588,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 134 0 0 0 70 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 133 0 1 1 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
46 37 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,-319,o),
(475,-309,qs),
(336,-284,o),
(287,-184,qs),
(250,-112,o),
(250,6,qs),
(250,430,ls),
(250,545,o),
(174,573,qs),
(143,585,o),
(96,586,qs),
(82,586,o),
(82,647,o),
(96,647,qs),
(213,647,o),
(240,725,qs),
(250,754,o),
(250,797,qs),
(250,1122,ls),
(250,1341,o),
(332,1419,qs),
(393,1478,o),
(537,1489,qs),
(590,1493,o),
(713,1493,qs),
(727,1493,o),
(727,1417,o),
(715,1417,qs),
(582,1417,o),
(530,1380,qs),
(460,1333,o),
(461,1184,qs),
(461,950,ls),
(461,807,o),
(444,750,qs),
(419,666,o),
(334,616,q),
(424,561,o),
(449,463,qs),
(461,408,o),
(461,305,qs),
(461,39,ls),
(461,-125,o),
(504,-182,qs),
(547,-243,o),
(713,-244,qs),
(729,-244,o),
(729,-319,o),
(715,-319,q),
(715,-319,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
12 1 4 3 1 76 0 3 0 4 0 3 4 105 0 0 0 5 0 5 101 0 1 1 2 97 0 2 2 70 1 78 49 48 39 37 35 34 25 23 21 20 34 6 11 23 
CALL[ ]	/* CallFunction */";
};
width = 782;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,-319,o),
(63,-244,o),
(80,-244,qs),
(215,-244,o),
(264,-209,qs),
(332,-160,o),
(332,39,qs),
(332,305,ls),
(332,452,o),
(365,518,qs),
(394,577,o),
(461,616,q),
(371,669,o),
(346,766,qs),
(334,819,o),
(334,950,qs),
(334,1184,ls),
(334,1336,o),
(258,1384,qs),
(207,1417,o),
(80,1417,qs),
(64,1417,o),
(63,1493,o),
(80,1493,qs),
(275,1493,o),
(346,1477,qs),
(463,1450,o),
(504,1360,qs),
(543,1272,o),
(543,1122,qs),
(543,797,ls),
(543,684,o),
(621,657,qs),
(652,647,o),
(696,647,qs),
(712,647,o),
(713,586,o),
(698,586,qs),
(585,586,o),
(557,512,qs),
(545,479,o),
(545,430,qs),
(545,6,ls),
(545,-197,o),
(426,-272,qs),
(352,-319,o),
(80,-319,q),
(80,-319,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
35 1 1 2 1 76 0 2 0 1 5 2 1 105 0 5 6 1 0 5 0 101 0 4 4 3 97 0 3 3 70 4 78 1 0 44 43 27 25 23 22 13 11 9 8 0 47 1 46 7 11 22 
CALL[ ]	/* CallFunction */";
};
width = 782;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
kernRight = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,-354,ls),
(294,-354,o),
(295,-332,qs),
(295,1511,ls),
(295,1529,o),
(315,1530,qs),
(754,1530,ls),
(774,1530,o),
(774,1434,o),
(754,1434,qs),
(528,1434,ls),
(508,1434,o),
(508,1411,qs),
(508,-229,ls),
(508,-258,o),
(522,-258,qs),
(754,-258,ls),
(774,-258,o),
(774,-354,o),
(754,-354,q),
(754,-354,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
6 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 4 1 0 1 0 99 0 2 2 3 95 0 3 3 70 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 1 3 2 103 0 1 0 0 1 87 0 1 1 0 95 4 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 15 12 11 8 4 2 0 20 1 18 5 11 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
kernLeft = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,-355,o),
(481,-354,qs),
(47,-354,ls),
(27,-354,o),
(27,-258,o),
(47,-258,qs),
(279,-258,ls),
(293,-258,o),
(293,-233,qs),
(293,1411,ls),
(293,1434,o),
(274,1434,qs),
(47,1434,ls),
(27,1434,o),
(27,1530,o),
(47,1530,qs),
(483,1530,ls),
(503,1530,o),
(504,1511,qs),
(504,-332,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
9 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 70 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
49 52 33 49 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = angleleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,-377,l),
(72,522,l),
(512,1421,l),
(657,1421,l),
(217,522,l),
(657,-377,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 1 118 18 17 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = angleleft;
unicode = 9001;
},
{
glyphname = angleright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,-377,l),
(25,-377,l),
(463,522,l),
(25,1421,l),
(170,1421,l),
(608,522,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
5 2 2 1 0 1 76 0 0 1 0 133 0 1 1 118 18 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = angleright;
unicode = 9002;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(718,610,o),
(719,479,o),
(696,479,qs),
(125,479,ls),
(107,479,o),
(106,610,o),
(125,610,qs),
(698,610,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 7 0 6 50 3 11 23 
CALL[ ]	/* CallFunction */";
};
width = 825;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,463,ls),
(17,463,o),
(16,596,o),
(31,596,qs),
(993,596,ls),
(1007,596,o),
(1007,463,o),
(993,463,q),
(993,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 34 34 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,463,ls),
(17,463,o),
(16,596,o),
(31,596,qs),
(2017,596,ls),
(2031,596,o),
(2031,463,o),
(2017,463,q),
(2017,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 34 34 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 2048;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = uni2015;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,463,ls),
(66,463,o),
(66,596,o),
(80,596,qs),
(2308,596,ls),
(2322,596,o),
(2322,463,o),
(2308,463,q),
(2308,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 34 34 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 2383;
}
);
note = uni2015;
unicode = 8213;
},
{
glyphname = figuredash;
layers = (
{
layerId = m01;
shapes = (
{
ref = endash;
}
);
width = 1024;
}
);
note = figuredash;
unicode = 8210;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,-266,l),
(0,-145,l),
(1024,-145,l),
(1024,-266,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1024;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = underscoredbl;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-225);
ref = underscore;
},
{
ref = underscore;
}
);
width = 1024;
}
);
note = underscoredbl;
unicode = 8215;
},
{
glyphname = uni2010;
layers = (
{
layerId = m01;
shapes = (
{
ref = hyphen;
}
);
width = 825;
}
);
note = uni2010;
unicode = 8208;
},
{
glyphname = uni2011;
layers = (
{
layerId = m01;
shapes = (
{
ref = hyphen;
}
);
width = 825;
}
);
note = uni2011;
unicode = 8209;
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,-101,o),
(227,-225,qs),
(166,-274,o),
(109,-297,q),
(98,-299,l),
(82,-295,o),
(76,-274,qs),
(74,-264,ls),
(74,-262,o),
(76,-262,q),
(148,-203,o),
(178,-113,qs),
(194,-68,o),
(195,-25,qs),
(195,2,o),
(180,6,q),
(135,26,o),
(117,43,qs),
(74,82,o),
(74,145,qs),
(74,206,o),
(133,238,qs),
(170,256,o),
(217,256,qs),
(280,256,o),
(332,199,qs),
(383,139,o),
(383,53,q),
(383,53,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
23 18 14 3 0 73 0 0 0 118 35 1 11 23 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(813,-101,o),
(657,-225,qs),
(596,-274,o),
(539,-297,q),
(528,-299,l),
(522,-297,o),
(516,-293,qs),
(502,-281,o),
(504,-268,qs),
(504,-264,o),
(506,-262,qs),
(578,-203,o),
(608,-113,qs),
(624,-68,o),
(625,-25,qs),
(625,2,o),
(610,6,q),
(565,26,o),
(547,43,qs),
(504,82,o),
(504,145,qs),
(504,206,o),
(563,238,qs),
(600,256,o),
(647,256,qs),
(710,256,o),
(762,199,qs),
(813,139,o),
(813,53,q),
(813,53,l)
);
},
{
closed = 1;
nodes = (
(424,-101,o),
(268,-225,qs),
(207,-274,o),
(150,-297,q),
(139,-299,l),
(123,-295,o),
(117,-276,qs),
(115,-266,ls),
(115,-264,o),
(117,-262,qs),
(189,-203,o),
(219,-113,qs),
(235,-68,o),
(236,-25,qs),
(236,2,o),
(221,6,q),
(176,26,o),
(158,43,qs),
(115,82,o),
(115,145,qs),
(115,206,o),
(174,238,qs),
(211,256,o),
(258,256,qs),
(321,256,o),
(373,199,qs),
(424,139,o),
(424,53,q),
(424,53,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
53 48 44 25 14 5 0 73 1 1 0 0 118 35 33 35 2 11 23 
CALL[ ]	/* CallFunction */";
};
width = 882;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
kernRight = quotedblleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,989,o),
(293,930,o),
(236,930,qs),
(170,930,o),
(68,1049,o),
(68,1133,qs),
(68,1244,o),
(231,1434,o),
(342,1483,q),
(344,1483,o),
(352,1485,q),
(362,1485,o),
(377,1462,o),
(377,1454,qs),
(377,1452,o),
(375,1450,qs),
(309,1391,o),
(258,1260,o),
(258,1210,qs),
(258,1183,o),
(270,1180,q),
(315,1164,o),
(379,1095,o),
(379,1040,q),
(379,1040,l)
);
},
{
closed = 1;
nodes = (
(788,989,o),
(700,930,o),
(645,930,qs),
(579,930,o),
(477,1049,o),
(477,1133,qs),
(477,1244,o),
(639,1434,o),
(752,1483,q),
(754,1483,o),
(762,1485,q),
(772,1485,o),
(786,1462,o),
(786,1454,qs),
(786,1452,o),
(784,1450,qs),
(718,1391,o),
(668,1260,o),
(668,1210,qs),
(668,1183,o),
(680,1180,q),
(725,1164,o),
(788,1095,o),
(788,1040,q),
(788,1040,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
33 30 8 5 4 0 74 1 1 0 0 118 47 45 22 20 2 11 22 
CALL[ ]	/* CallFunction */";
};
width = 882;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quotedblright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,1413,o),
(586,1473,o),
(641,1473,qs),
(707,1473,o),
(811,1356,o),
(811,1270,qs),
(811,1159,o),
(647,971,o),
(537,920,q),
(524,920,ls),
(514,920,o),
(502,940,o),
(502,948,qs),
(502,950,o),
(504,954,q),
(570,1013,o),
(621,1143,o),
(621,1192,qs),
(621,1219,o),
(606,1223,qs),
(561,1239,o),
(500,1307,o),
(500,1362,q),
(500,1362,l)
);
},
{
closed = 1;
nodes = (
(90,1413,o),
(176,1473,o),
(233,1473,qs),
(299,1473,o),
(401,1356,o),
(401,1270,qs),
(401,1159,o),
(238,971,o),
(127,920,q),
(117,920,ls),
(107,920,o),
(92,940,o),
(92,948,qs),
(92,950,o),
(94,954,q),
(160,1013,o),
(211,1143,o),
(211,1192,qs),
(211,1219,o),
(199,1223,qs),
(154,1239,o),
(90,1307,o),
(90,1362,q),
(90,1362,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
32 29 8 5 4 0 1 1 76 2 1 0 1 0 134 3 1 1 1 70 1 78 37 47 37 44 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 882;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
kernRight = quotedblleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,989,o),
(252,930,o),
(195,930,qs),
(129,930,o),
(27,1049,o),
(27,1133,qs),
(27,1244,o),
(190,1434,o),
(301,1483,q),
(303,1483,o),
(311,1485,q),
(321,1485,o),
(336,1462,o),
(336,1454,qs),
(336,1452,o),
(334,1450,qs),
(268,1391,o),
(217,1260,o),
(217,1210,qs),
(217,1183,o),
(229,1180,q),
(274,1164,o),
(338,1095,o),
(338,1040,q),
(338,1040,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
8 5 2 0 74 0 0 0 118 22 20 1 11 22 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quotedblright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,1159,o),
(223,971,o),
(113,920,q),
(102,920,ls),
(92,920,o),
(78,940,o),
(78,948,qs),
(78,950,o),
(80,954,q),
(146,1013,o),
(197,1143,o),
(197,1192,qs),
(197,1219,o),
(184,1223,qs),
(139,1239,o),
(76,1307,o),
(76,1362,qs),
(76,1413,o),
(164,1473,o),
(219,1473,qs),
(285,1473,o),
(387,1356,o),
(387,1270,q),
(387,1270,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
14 11 2 1 0 1 76 0 1 0 1 134 0 0 0 70 0 78 46 34 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,417,o),
(76,455,o),
(92,473,qs),
(410,834,ls),
(422,848,o),
(461,813,o),
(455,803,q),
(289,469,ls),
(281,451,o),
(281,426,o),
(287,416,q),
(455,68,ls),
(461,54,o),
(420,23,o),
(410,37,q),
(92,399,ls)
);
},
{
closed = 1;
nodes = (
(430,417,o),
(430,455,o),
(446,473,qs),
(764,834,ls),
(776,848,o),
(815,813,o),
(811,803,q),
(643,469,ls),
(635,451,o),
(635,426,o),
(639,416,q),
(811,68,ls),
(817,54,o),
(774,23,o),
(764,37,q),
(446,399,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 17 10 1 2 50 
CALL[ ]	/* CallFunction */";
};
width = 866;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(809,451,o),
(811,414,o),
(793,395,qs),
(475,37,ls),
(463,23,o),
(424,55,o),
(430,68,qs),
(596,401,ls),
(604,419,o),
(606,442,o),
(600,455,qs),
(430,803,ls),
(424,817,o),
(465,846,o),
(475,834,qs),
(793,469,ls)
);
},
{
closed = 1;
nodes = (
(454,451,o),
(455,414,o),
(438,395,qs),
(121,37,ls),
(109,23,o),
(70,55,o),
(76,68,qs),
(242,401,ls),
(250,419,o),
(250,442,o),
(244,455,qs),
(76,803,ls),
(70,817,o),
(111,846,o),
(121,834,qs),
(438,469,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 17 10 1 2 50 
CALL[ ]	/* CallFunction */";
};
width = 866;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,417,o),
(76,455,o),
(92,473,qs),
(410,834,ls),
(422,848,o),
(461,813,o),
(455,803,q),
(289,469,ls),
(281,451,o),
(281,426,o),
(287,416,q),
(455,68,ls),
(461,54,o),
(420,23,o),
(410,37,q),
(92,399,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,37,ls),
(111,25,o),
(68,51,o),
(76,68,qs),
(244,416,ls),
(250,428,o),
(250,451,o),
(242,469,qs),
(76,803,l),
(70,813,o),
(109,848,o),
(121,834,qs),
(438,473,ls),
(454,455,o),
(454,417,o),
(438,399,q),
(438,399,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
kernLeft = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = quotesingle;
},
{
pos = (332,0);
ref = quotesingle;
}
);
width = 755;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
kernLeft = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,1358,o),
(305,1151,qs),
(272,979,o),
(272,944,qs),
(272,930,o),
(213,930,qs),
(152,930,o),
(152,944,qs),
(152,1005,o),
(100,1253,qs),
(80,1345,o),
(80,1372,qs),
(80,1481,o),
(213,1481,qs),
(344,1480,o),
(344,1374,q),
(344,1374,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
8 1 1 0 1 76 0 1 1 0 97 0 0 0 70 1 78 23 33 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = quotedblleft.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,989,o),
(293,930,o),
(236,930,qs),
(170,930,o),
(68,1049,o),
(68,1133,qs),
(68,1244,o),
(231,1434,o),
(342,1483,q),
(344,1483,o),
(352,1485,q),
(362,1485,o),
(377,1462,o),
(377,1454,qs),
(377,1452,o),
(375,1450,qs),
(309,1391,o),
(258,1260,o),
(258,1210,qs),
(258,1183,o),
(270,1180,q),
(315,1164,o),
(379,1095,o),
(379,1040,q),
(379,1040,l)
);
},
{
closed = 1;
nodes = (
(788,989,o),
(700,930,o),
(645,930,qs),
(579,930,o),
(477,1049,o),
(477,1133,qs),
(477,1244,o),
(639,1434,o),
(752,1483,q),
(754,1483,o),
(762,1485,q),
(772,1485,o),
(786,1462,o),
(786,1454,qs),
(786,1452,o),
(784,1450,qs),
(718,1391,o),
(668,1260,o),
(668,1210,qs),
(668,1183,o),
(680,1180,q),
(725,1164,o),
(788,1095,o),
(788,1040,q),
(788,1040,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
33 30 8 5 4 0 74 1 1 0 0 118 47 45 22 20 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1042;
}
);
note = quotedblleft.alt;
},
{
glyphname = quotedblright.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(641,1413,o),
(729,1473,o),
(784,1473,qs),
(850,1473,o),
(952,1356,o),
(952,1270,qs),
(952,1159,o),
(791,971,o),
(680,920,q),
(668,920,ls),
(658,920,o),
(643,940,o),
(643,948,qs),
(643,950,o),
(645,954,q),
(711,1013,o),
(764,1143,o),
(764,1192,qs),
(764,1219,o),
(750,1223,qs),
(705,1239,o),
(641,1307,o),
(641,1362,q),
(641,1362,l)
);
},
{
closed = 1;
nodes = (
(233,1413,o),
(319,1473,o),
(377,1473,qs),
(443,1473,o),
(545,1356,o),
(545,1270,qs),
(545,1159,o),
(381,971,o),
(270,920,q),
(258,920,ls),
(248,920,o),
(236,940,o),
(236,948,qs),
(236,950,o),
(238,954,q),
(304,1013,o),
(354,1143,o),
(354,1192,qs),
(354,1219,o),
(342,1223,qs),
(297,1239,o),
(233,1307,o),
(233,1362,q),
(233,1362,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
32 29 8 5 4 1 73 2 1 0 1 0 136 3 1 1 1 118 37 47 37 44 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1042;
}
);
note = quotedblright.alt;
},
{
glyphname = quoteleft.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,989,o),
(252,930,o),
(195,930,qs),
(129,930,o),
(27,1049,o),
(27,1133,qs),
(27,1244,o),
(190,1434,o),
(301,1483,q),
(303,1483,o),
(311,1485,q),
(321,1485,o),
(336,1462,o),
(336,1454,qs),
(336,1452,o),
(334,1450,qs),
(268,1391,o),
(217,1260,o),
(217,1210,qs),
(217,1183,o),
(229,1180,q),
(274,1164,o),
(338,1095,o),
(338,1040,q),
(338,1040,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
8 5 2 0 74 0 0 0 118 22 20 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 589;
}
);
note = quoteleft.alt;
},
{
glyphname = quoteright.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(545,1159,o),
(383,971,o),
(270,920,q),
(260,920,ls),
(250,920,o),
(236,940,o),
(236,948,qs),
(236,950,o),
(238,954,q),
(304,1013,o),
(354,1143,o),
(354,1192,qs),
(354,1219,o),
(342,1223,qs),
(297,1239,o),
(233,1307,o),
(233,1362,qs),
(233,1413,o),
(319,1473,o),
(377,1473,qs),
(443,1473,o),
(545,1356,o),
(545,1270,q),
(545,1270,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
14 11 2 0 73 0 1 0 1 136 0 0 0 118 46 34 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 589;
}
);
note = quoteright.alt;
},
{
glyphname = parenleft.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,1030,o),
(512,1004,q),
(338,793,o),
(338,477,qs),
(338,88,o),
(512,-49,qs),
(539,-69,o),
(539,-88,qs),
(539,-117,o),
(496,-117,qs),
(457,-117,o),
(432,-100,q),
(260,0,o),
(123,299,o),
(123,477,qs),
(123,645,o),
(272,934,o),
(432,1055,qs),
(455,1071,o),
(496,1071,qs),
(537,1071,o),
(537,1040,q),
(537,1040,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
14 1 1 0 1 76 0 0 1 0 133 0 1 1 118 40 33 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = parenleft.sc;
},
{
glyphname = parenright.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,297,o),
(330,0,o),
(156,-100,qs),
(131,-114,o),
(92,-117,q),
(49,-117,o),
(49,-88,qs),
(49,-72,o),
(76,-49,qs),
(250,88,o),
(252,477,qs),
(252,792,o),
(76,1004,q),
(51,1031,o),
(51,1040,qs),
(51,1071,o),
(92,1071,qs),
(133,1071,o),
(156,1055,qs),
(318,932,o),
(467,645,o),
(467,477,q),
(467,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
7 1 1 0 1 76 0 0 1 0 133 0 1 1 118 26 36 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = parenright.sc;
},
{
glyphname = exclam.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,159,o),
(231,238,o),
(340,238,o),
(416,162,o),
(416,53,o),
(340,-25,o),
(231,-25,o),
(154,53,o),
(154,106,q),
(154,106,l)
);
},
{
closed = 1;
nodes = (
(432,842,o),
(381,643,o),
(330,358,o),
(330,317,qs),
(330,305,o),
(236,307,o),
(236,317,qs),
(234,387,o),
(152,827,o),
(152,850,qs),
(152,883,o),
(231,965,o),
(289,965,qs),
(352,965,o),
(432,893,o),
(432,850,q),
(432,850,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
19 1 1 2 1 76 0 2 2 50 77 0 1 1 0 97 0 0 0 49 0 78 37 19 18 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = exclam.sc;
},
{
glyphname = exclamdown.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,748,o),
(352,670,o),
(244,670,o),
(168,748,o),
(168,854,o),
(244,932,o),
(352,932,o),
(428,854,o),
(428,801,q),
(428,801,l)
);
},
{
closed = 1;
nodes = (
(152,65,o),
(203,264,o),
(256,551,o),
(256,592,qs),
(256,604,o),
(346,600,o),
(346,592,qs),
(348,522,o),
(432,82,o),
(432,57,qs),
(432,24,o),
(352,-57,o),
(295,-57,qs),
(232,-57,o),
(152,14,o),
(152,57,q),
(152,57,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 97 0 0 0 48 77 0 2 2 49 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 1 2 134 0 1 1 0 97 0 0 0 48 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
37 19 18 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = exclamdown.sc;
},
{
glyphname = question.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,231,o),
(358,154,o),
(358,45,o),
(283,-31,o),
(174,-31,o),
(98,45,o),
(98,154,o),
(174,231,o)
);
},
{
closed = 1;
nodes = (
(328,637,ls),
(387,664,o),
(385,700,qs),
(385,784,o),
(166,784,qs),
(137,784,o),
(94,831,o),
(94,872,qs),
(94,905,o),
(143,954,o),
(182,954,qs),
(295,954,o),
(494,762,o),
(494,647,qs),
(494,538,o),
(391,489,qs),
(283,436,ls),
(232,411,o),
(231,383,qs),
(231,367,o),
(248,317,qs),
(252,305,o),
(182,279,o),
(178,285,qs),
(106,379,o),
(106,453,qs),
(107,537,o),
(211,584,q),
(211,584,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
12 1 1 3 1 76 0 3 3 2 97 0 2 2 50 77 0 1 1 0 97 0 0 0 49 0 78 32 30 26 24 19 18 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 585;
}
);
note = question.sc;
},
{
glyphname = questiondown.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,653,o),
(219,729,o),
(219,838,o),
(297,913,o),
(403,913,o),
(481,838,o),
(481,729,o),
(403,653,o)
);
},
{
closed = 1;
nodes = (
(252,248,ls),
(193,221,o),
(193,182,qs),
(193,98,o),
(414,100,qs),
(443,100,o),
(485,51,o),
(485,12,qs),
(485,-21,o),
(434,-70,o),
(395,-70,qs),
(282,-70,o),
(86,123,o),
(86,238,qs),
(86,347,o),
(186,393,qs),
(297,446,ls),
(348,471,o),
(346,500,qs),
(346,516,o),
(332,565,qs),
(328,577,o),
(397,604,o),
(401,600,q),
(473,506,o),
(473,432,qs),
(473,346,o),
(369,299,q),
(369,299,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
12 1 3 1 1 76 0 3 0 2 3 2 101 0 1 1 0 97 0 0 0 48 1 78 32 30 26 24 19 18 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 585;
}
);
note = questiondown.sc;
},
{
glyphname = quotedblleft.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,467,o),
(293,408,o),
(236,408,qs),
(170,408,o),
(68,524,o),
(68,610,qs),
(68,721,o),
(231,909,o),
(342,961,q),
(352,961,ls),
(362,961,o),
(377,940,o),
(377,932,qs),
(377,930,o),
(375,926,q),
(309,867,o),
(258,737,o),
(258,688,qs),
(258,661,o),
(270,657,qs),
(315,641,o),
(379,573,o),
(379,518,q),
(379,518,l)
);
},
{
closed = 1;
nodes = (
(788,467,o),
(700,408,o),
(645,408,qs),
(579,408,o),
(477,524,o),
(477,610,qs),
(477,721,o),
(639,909,o),
(752,961,q),
(762,961,ls),
(772,961,o),
(786,940,o),
(786,932,qs),
(786,930,o),
(784,926,q),
(718,867,o),
(668,737,o),
(668,688,qs),
(668,661,o),
(680,657,qs),
(725,641,o),
(788,573,o),
(788,518,q),
(788,518,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
32 29 8 5 4 1 0 1 76 2 1 0 1 0 133 3 1 1 1 118 37 47 37 44 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 882;
}
);
note = quotedblleft.sc;
},
{
glyphname = quotedblright.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,891,o),
(586,950,o),
(641,950,qs),
(707,950,o),
(811,831,o),
(811,748,qs),
(811,637,o),
(647,446,o),
(537,397,q),
(535,397,o),
(524,395,q),
(514,395,o),
(502,418,o),
(502,426,qs),
(502,428,o),
(504,430,qs),
(570,489,o),
(621,621,o),
(621,670,qs),
(621,697,o),
(606,700,q),
(561,716,o),
(500,785,o),
(500,840,q),
(500,840,l)
);
},
{
closed = 1;
nodes = (
(90,891,o),
(176,950,o),
(233,950,qs),
(299,950,o),
(401,831,o),
(401,748,qs),
(401,637,o),
(238,446,o),
(127,397,q),
(125,397,o),
(117,395,q),
(107,395,o),
(92,418,o),
(92,426,qs),
(92,428,o),
(94,430,qs),
(160,489,o),
(211,621,o),
(211,670,qs),
(211,697,o),
(199,700,q),
(154,716,o),
(90,785,o),
(90,840,q),
(90,840,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
33 30 8 5 4 0 73 1 1 0 0 50 0 78 47 45 22 20 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 882;
}
);
note = quotedblright.sc;
},
{
glyphname = quoteleft.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,467,o),
(252,408,o),
(195,408,qs),
(129,408,o),
(27,524,o),
(27,610,qs),
(27,721,o),
(190,909,o),
(301,961,q),
(311,961,ls),
(321,961,o),
(336,940,o),
(336,932,qs),
(336,930,o),
(334,926,q),
(268,867,o),
(217,737,o),
(217,688,qs),
(217,661,o),
(229,657,qs),
(274,641,o),
(338,573,o),
(338,518,q),
(338,518,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
8 5 2 1 0 1 76 0 1 0 1 134 0 0 0 50 0 78 37 44 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = quoteleft.sc;
},
{
glyphname = quoteright.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,637,o),
(223,446,o),
(113,397,q),
(111,397,o),
(102,395,q),
(92,395,o),
(78,418,o),
(78,426,qs),
(78,428,o),
(80,430,qs),
(146,489,o),
(197,621,o),
(197,670,qs),
(197,697,o),
(184,700,q),
(139,716,o),
(76,784,o),
(76,840,qs),
(76,891,o),
(164,950,o),
(219,950,qs),
(285,950,o),
(387,834,o),
(387,748,q),
(387,748,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
14 11 2 0 73 0 0 0 50 0 78 34 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = quoteright.sc;
},
{
glyphname = numbersign.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(821,578,l),
(674,578,l),
(614,362,l),
(735,362,l),
(735,246,l),
(584,246,l),
(518,6,l),
(379,6,l),
(442,246,l),
(283,246,l),
(217,6,l),
(80,6,l),
(143,246,l),
(6,246,l),
(6,362,l),
(174,362,l),
(233,578,l),
(92,578,l),
(92,694,l),
(264,694,l),
(319,893,l),
(457,893,l),
(403,694,l),
(563,694,l),
(618,893,l),
(760,893,l),
(705,694,l),
(821,694,l)
);
},
{
closed = 1;
nodes = (
(373,578,l),
(313,362,l),
(473,362,l),
(532,578,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
16 13 3 3 1 15 12 2 4 5 1 4 104 14 11 2 5 10 8 2 6 7 5 6 103 2 1 0 0 48 77 9 1 7 7 49 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 1 0 1 0 133 16 13 3 3 1 15 12 2 4 5 1 4 104 14 11 2 5 10 8 2 6 7 5 6 103 9 1 7 7 49 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 1 0 133 9 1 7 6 7 134 16 13 3 3 1 15 12 2 4 5 1 4 104 14 11 2 5 6 6 5 87 14 11 2 5 5 6 95 10 8 2 6 5 6 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 9 31 
CALL[ ]	/* CallFunction */";
};
width = 729;
}
);
note = numbersign.sc;
},
{
glyphname = uni00A0;
layers = (
{
layerId = m01;
width = 557;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = uni2000;
layers = (
{
layerId = m01;
width = 1024;
}
);
note = uni2000;
unicode = 8192;
},
{
glyphname = uni2001;
layers = (
{
layerId = m01;
width = 2048;
}
);
note = uni2001;
unicode = 8193;
},
{
glyphname = uni2002;
layers = (
{
layerId = m01;
width = 1024;
}
);
note = uni2002;
unicode = 8194;
},
{
glyphname = uni2003;
layers = (
{
layerId = m01;
width = 2048;
}
);
note = uni2003;
unicode = 8195;
},
{
glyphname = uni2004;
layers = (
{
layerId = m01;
width = 681;
}
);
note = uni2004;
unicode = 8196;
},
{
glyphname = uni2005;
layers = (
{
layerId = m01;
width = 512;
}
);
note = uni2005;
unicode = 8197;
},
{
glyphname = uni2006;
layers = (
{
layerId = m01;
width = 339;
}
);
note = uni2006;
unicode = 8198;
},
{
glyphname = uni2007;
layers = (
{
layerId = m01;
width = 954;
}
);
note = uni2007;
unicode = 8199;
},
{
glyphname = uni2008;
layers = (
{
layerId = m01;
width = 518;
}
);
note = uni2008;
unicode = 8200;
},
{
glyphname = uni2009;
layers = (
{
layerId = m01;
width = 202;
}
);
note = uni2009;
unicode = 8201;
},
{
glyphname = uni200A;
layers = (
{
layerId = m01;
width = 18;
}
);
note = uni200A;
unicode = 8202;
},
{
glyphname = uni200B;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni200B;
unicode = 8203;
},
{
glyphname = uni200D;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni200D;
unicode = 8205;
},
{
glyphname = uni200C;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni200C;
unicode = 8204;
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 557;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = Euro;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1006,55,o),
(805,-27,o),
(692,-27,qs),
(465,-27,o),
(117,254,o),
(72,485,q),
(-25,485,ls),
(-43,485,o),
(-43,616,o),
(-25,616,qs),
(55,616,l),
(55,668,ls),
(55,703,o),
(57,733,q),
(-25,733,ls),
(-43,733,o),
(-43,864,o),
(-25,864,qs),
(78,864,l),
(129,1073,o),
(461,1384,o),
(696,1384,qs),
(831,1384,o),
(1059,1300,o),
(1151,1196,o),
(1151,1157,qs),
(1151,1126,o),
(1090,1081,o),
(1053,1081,qs),
(1000,1081,o),
(961,1128,qs),
(903,1196,ls),
(860,1247,o),
(752,1296,o),
(690,1296,qs),
(557,1296,o),
(367,1034,o),
(340,864,q),
(907,864,ls),
(927,864,o),
(928,733,o),
(905,733,qs),
(328,733,l),
(328,713,ls),
(328,666,o),
(336,616,q),
(907,616,ls),
(927,616,o),
(928,485,o),
(905,485,qs),
(365,485,l),
(414,325,o),
(582,106,o),
(727,106,qs),
(848,106,o),
(1024,182,o),
(1112,242,o),
(1114,242,qs),
(1124,242,o),
(1151,193,o),
(1151,174,o),
(1143,168,q),
(1143,168,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 6 5 4 5 6 4 128 10 1 2 11 1 1 0 2 1 105 0 5 5 7 97 0 7 7 74 77 9 1 3 3 4 95 8 1 4 4 71 77 0 0 0 12 97 0 12 12 75 12 78 60 58 56 54 52 51 48 46 18 37 36 34 33 35 33 34 39 13 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1259;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(824,348,o),
(805,338,q),
(723,285,l),
(606,219,o),
(457,219,qs),
(436,219,l),
(403,29,l),
(403,21,o),
(381,20,qs),
(367,20,o),
(346,25,q),
(293,33,o),
(295,45,qs),
(328,244,l),
(197,293,o),
(125,416,qs),
(66,514,o),
(66,633,qs),
(66,805,o),
(170,942,qs),
(293,1102,o),
(479,1118,q),
(514,1311,l),
(514,1317,o),
(535,1319,qs),
(560,1319,o),
(625,1298,o),
(625,1290,q),
(594,1116,l),
(737,1106,o),
(799,1030,q),
(805,1014,o),
(805,989,qs),
(805,934,o),
(774,905,qs),
(739,870,o),
(717,870,qs),
(674,870,o),
(653,899,qs),
(647,907,o),
(614,967,qs),
(604,985,o),
(575,1004,q),
(465,379,l),
(512,359,o),
(543,358,qs),
(670,358,o),
(750,422,q),
(772,434,o),
(797,393,q),
(797,393,l)
);
},
{
closed = 1;
nodes = (
(385,993,o),
(338,889,qs),
(295,799,o),
(295,682,qs),
(295,561,o),
(367,467,q),
(463,1018,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
22 1 2 3 57 7 2 1 2 6 1 0 1 36 1 5 0 37 1 4 5 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 1 0 2 1 105 0 0 0 5 4 0 5 105 0 3 3 68 77 0 4 4 69 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 5 4 134 0 2 0 1 0 2 1 105 0 0 0 5 4 0 5 105 0 3 3 68 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 2 3 133 0 4 5 4 134 0 2 0 1 0 2 1 105 0 0 5 5 0 89 0 0 0 5 97 0 5 0 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 47 19 22 39 35 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = cent;
unicode = 162;
},
{
glyphname = currency;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,523,o),
(858,406,q),
(936,328,l),
(938,322,l),
(934,299,o),
(893,264,q),
(868,246,l),
(856,242,l),
(854,242,o),
(852,244,qs),
(774,322,l),
(655,234,o),
(514,233,qs),
(369,233,o),
(252,324,q),
(172,244,l),
(166,242,l),
(146,246,o),
(109,287,qs),
(89,312,o),
(86,324,q),
(86,326,o),
(88,328,qs),
(168,408,l),
(80,523,o),
(80,813,o),
(168,928,q),
(88,1008,l),
(86,1016,l),
(90,1036,o),
(131,1071,qs),
(156,1091,o),
(168,1094,q),
(170,1094,o),
(172,1092,qs),
(252,1012,l),
(371,1102,o),
(512,1102,qs),
(655,1102,o),
(774,1014,q),
(852,1092,l),
(858,1094,l),
(878,1090,o),
(915,1049,q),
(934,1024,l),
(938,1012,l),
(936,1008,l),
(858,930,l),
(946,811,o),
(946,668,q),
(946,668,l)
);
},
{
closed = 1;
nodes = (
(643,979,o),
(512,979,qs),
(383,979,o),
(291,887,q),
(262,854,l),
(201,770,o),
(201,668,qs),
(201,539,o),
(293,446,qs),
(383,356,o),
(512,356,qs),
(643,356,o),
(733,449,qs),
(825,539,o),
(825,797,o),
(733,889,q),
(733,889,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
21 15 14 10 8 3 6 3 0 48 26 23 2 4 2 3 46 40 39 35 33 27 6 1 2 3 76 0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 66 64 57 55 38 36 43 4 11 23 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = currency;
unicode = 164;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(936,218,o),
(727,-4,o),
(563,-16,q),
(563,-150,ls),
(563,-166,o),
(438,-164,o),
(438,-150,qs),
(438,-14,l),
(286,6,o),
(158,76,q),
(105,223,o),
(104,358,qs),
(104,368,o),
(106,375,q),
(108,400,o),
(197,401,o),
(199,381,qs),
(207,272,o),
(348,115,o),
(438,88,q),
(438,580,l),
(260,646,o),
(98,823,o),
(98,995,qs),
(98,1099,o),
(276,1309,o),
(438,1329,q),
(438,1466,ls),
(438,1482,o),
(563,1481,o),
(563,1466,qs),
(563,1329,l),
(655,1325,o),
(756,1300,o),
(784,1300,o),
(799,1303,q),
(844,1172,o),
(844,1032,qs),
(844,1020,o),
(760,1008,o),
(756,1022,qs),
(731,1133,o),
(616,1231,o),
(563,1241,q),
(563,797,l),
(813,721,o),
(936,517,o),
(936,408,q),
(936,408,l)
);
},
{
closed = 1;
nodes = (
(438,1245,l),
(297,1196,o),
(297,1044,qs),
(297,895,o),
(438,840,q),
(438,840,l)
);
},
{
closed = 1;
nodes = (
(737,461,o),
(563,532,q),
(563,74,l),
(737,117,o),
(737,301,q),
(737,301,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
53 4 2 0 1 58 54 27 3 4 3 0 2 76 21 17 2 2 74 57 45 41 40 34 28 6 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 3 134 0 1 0 0 3 1 0 105 0 2 2 68 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 1 2 133 0 3 0 3 134 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
33 32 17 35 39 4 11 25 
CALL[ ]	/* CallFunction */";
};
width = 1028;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-47,o),
(356,-289,o),
(236,-479,o),
(72,-555,o),
(-2,-555,qs),
(-68,-555,o),
(-166,-477,o),
(-166,-426,qs),
(-166,-377,o),
(-98,-324,o),
(-57,-324,qs),
(-10,-324,o),
(66,-449,o),
(102,-449,qs),
(143,-449,o),
(164,-313,o),
(164,-229,qs),
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(121,819,o),
(164,891,o),
(164,932,qs),
(164,1059,o),
(260,1288,o),
(510,1487,o),
(674,1487,qs),
(783,1487,o),
(897,1405,o),
(897,1343,qs),
(897,1300,o),
(825,1223,o),
(784,1223,qs),
(682,1223,o),
(606,1374,o),
(559,1374,qs),
(502,1374,o),
(463,1321,qs),
(393,1225,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(594,850,ls),
(608,850,o),
(608,745,o),
(594,745,qs),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,139,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 2 1 2 3 114 0 7 8 9 8 7 9 128 0 5 0 0 5 89 0 2 2 4 97 0 4 4 70 77 6 1 0 0 1 95 0 1 1 71 77 0 8 8 9 97 0 9 9 73 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 3 2 1 2 3 1 128 0 7 8 9 8 7 9 128 0 5 0 0 5 89 0 2 2 4 97 0 4 4 70 77 6 1 0 0 1 95 0 1 1 71 77 0 8 8 9 97 0 9 9 73 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
50 48 33 36 50 21 36 33 37 50 33 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = florin;
unicode = 402;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(688,327,o),
(614,182,q),
(731,141,o),
(854,141,qs),
(969,141,o),
(1073,211,qs),
(1136,254,o),
(1151,254,qs),
(1190,254,o),
(1190,223,qs),
(1190,209,o),
(1180,188,q),
(1127,53,o),
(1012,-6,qs),
(944,-41,o),
(866,-41,qs),
(731,-41,o),
(551,88,q),
(434,-41,o),
(268,-41,qs),
(151,-41,o),
(96,33,qs),
(67,70,o),
(68,113,qs),
(68,187,o),
(137,229,qs),
(194,266,o),
(281,266,qs),
(367,262,o),
(487,221,q),
(501,274,o),
(502,346,qs),
(502,473,o),
(442,641,q),
(203,641,ls),
(187,641,o),
(186,688,qs),
(186,737,o),
(203,739,q),
(406,739,l),
(357,862,o),
(356,993,qs),
(356,1153,o),
(479,1262,qs),
(600,1371,o),
(780,1370,qs),
(846,1370,o),
(952,1335,qs),
(1106,1288,o),
(1108,1229,qs),
(1108,1143,o),
(1092,1040,qs),
(1082,974,o),
(1044,975,qs),
(1001,975,o),
(971,1090,qs),
(959,1137,o),
(958,1139,q),
(911,1299,o),
(770,1298,qs),
(569,1298,o),
(569,1079,qs),
(569,991,o),
(653,739,q),
(942,739,ls),
(958,739,o),
(958,641,o),
(942,641,qs),
(674,641,l),
(688,567,o),
(688,489,q),
(688,489,l)
);
},
{
closed = 1;
nodes = (
(369,194,o),
(283,195,qs),
(201,195,o),
(170,147,qs),
(160,131,o),
(160,115,qs),
(160,70,o),
(207,47,qs),
(234,35,o),
(268,35,qs),
(389,34,o),
(457,145,q),
(457,145,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
34 1 0 1 41 1 13 7 69 1 11 13 78 53 2 12 11 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
34 1 0 1 41 1 13 10 69 1 11 13 78 53 2 12 11 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 10 1 7 0 13 11 7 13 105 0 2 2 4 97 0 4 4 68 77 0 11 11 8 97 9 1 8 8 75 77 0 12 12 8 97 9 1 8 8 75 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 1 2 3 1 128 0 10 7 13 7 10 13 128 5 1 1 6 1 0 7 1 0 103 0 7 0 13 11 7 13 105 0 2 2 4 97 0 4 4 68 77 0 11 11 8 97 9 1 8 8 75 77 0 12 12 8 97 9 1 8 8 75 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
83 81 75 73 68 66 63 62 56 54 38 37 35 21 38 36 35 34 18 14 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1261;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,821,ls),
(162,821,o),
(162,963,o),
(176,963,qs),
(336,963,l),
(162,1237,ls),
(107,1323,o),
(55,1348,qs),
(24,1362,o),
(-14,1362,qs),
(-28,1362,o),
(-31,1411,q),
(-27,1444,l),
(-23,1462,o),
(-14,1462,q),
(45,1456,o),
(487,1456,o),
(551,1462,q),
(565,1462,o),
(565,1411,qs),
(563,1378,l),
(559,1362,o),
(551,1362,qs),
(438,1362,o),
(432,1305,q),
(434,1282,l),
(446,1253,l),
(455,1237,l),
(727,803,ls),
(737,787,o),
(760,786,o),
(772,805,qs),
(1059,1229,ls),
(1084,1266,o),
(1083,1294,qs),
(1083,1306,o),
(1079,1317,qs),
(1059,1362,o),
(971,1362,qs),
(957,1362,o),
(954,1411,q),
(958,1444,l),
(962,1462,o),
(971,1462,q),
(1030,1456,o),
(1208,1456,qs),
(1398,1456,o),
(1458,1462,q),
(1472,1462,o),
(1475,1413,q),
(1470,1380,l),
(1464,1366,ls),
(1462,1362,o),
(1458,1362,qs),
(1343,1362,o),
(1268,1290,qs),
(1229,1253,o),
(1151,1143,q),
(1133,1114,l),
(1028,963,l),
(1210,963,ls),
(1224,963,o),
(1227,893,q),
(1223,848,l),
(1217,825,l),
(1215,821,o),
(1210,821,qs),
(930,821,l),
(870,735,ls),
(833,682,o),
(823,655,q),
(1210,655,ls),
(1224,655,o),
(1227,588,q),
(1223,541,l),
(1217,518,l),
(1215,514,o),
(1210,514,qs),
(813,514,l),
(813,217,ls),
(813,131,o),
(872,106,qs),
(907,92,o),
(971,92,qs),
(985,92,o),
(985,-8,o),
(971,-8,q),
(887,0,o),
(686,0,qs),
(477,0,o),
(393,-8,q),
(379,-8,o),
(379,92,o),
(393,92,qs),
(495,92,o),
(526,125,qs),
(551,152,o),
(551,217,qs),
(551,514,l),
(176,514,ls),
(162,514,o),
(162,584,qs),
(162,633,o),
(170,649,qs),
(172,653,o),
(176,655,q),
(528,655,l),
(512,688,o),
(481,733,qs),
(426,821,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
97 88 68 59 4 9 10 74 1 8 9 46 1 7 8 35 1 1 0 4 76 94 65 2 10 74 22 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 12 7 0 7 12 0 128 16 1 8 17 1 7 12 8 7 103 6 1 0 5 1 1 2 0 1 103 15 13 11 3 9 9 10 97 14 1 10 10 70 77 4 1 2 2 3 98 0 3 3 69 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 12 7 0 7 12 0 128 14 1 10 15 13 11 3 9 8 10 9 105 16 1 8 17 1 7 12 8 7 103 6 1 0 5 1 1 2 0 1 103 4 1 2 2 3 98 0 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 12 7 0 7 12 0 128 14 1 10 15 13 11 3 9 8 10 9 105 16 1 8 17 1 7 12 8 7 103 6 1 0 5 1 1 2 0 1 103 4 1 2 3 3 2 89 4 1 2 2 3 98 0 3 2 3 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
109 107 105 104 100 98 93 92 86 85 79 78 71 69 64 62 55 54 37 19 37 20 35 36 20 37 18 18 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1419;
}
);
note = yen;
unicode = 165;
},
{
glyphname = cent.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(672,629,o),
(653,657,q),
(616,727,o),
(604,737,q),
(500,143,l),
(531,135,o),
(563,133,q),
(672,133,o),
(750,188,qs),
(766,200,o),
(821,117,o),
(805,104,qs),
(727,47,o),
(571,-12,o),
(473,-14,q),
(451,-152,l),
(449,-158,o),
(428,-160,qs),
(410,-160,o),
(379,-154,qs),
(309,-142,o),
(311,-129,qs),
(336,6,l),
(205,61,o),
(66,266,o),
(66,395,qs),
(66,571,o),
(180,715,qs),
(299,858,o),
(487,879,q),
(508,1004,l),
(510,1010,o),
(547,1010,o),
(580,1004,qs),
(650,992,o),
(645,979,q),
(627,870,l),
(695,860,o),
(784,813,o),
(799,788,q),
(805,772,o),
(805,750,qs),
(805,695,o),
(740,629,o),
(709,629,q),
(709,629,l)
);
},
{
closed = 1;
nodes = (
(395,758,o),
(295,565,o),
(295,444,qs),
(295,319,o),
(375,227,q),
(469,778,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
51 41 40 23 22 9 8 7 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 2 136 5 1 0 4 1 4 0 1 131 0 4 4 3 97 0 3 3 33 77 0 1 1 34 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 136 5 1 0 4 1 4 0 1 131 0 1 1 132 0 4 4 3 97 0 3 3 33 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 39 37 31 30 28 26 13 12 0 45 1 44 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = cent.oldstyle;
},
{
glyphname = dollar.oldstyle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,74,o),
(498,150,o),
(498,197,qs),
(498,265,o),
(430,307,q),
(375,68,l)
);
},
{
closed = 1;
nodes = (
(625,842,o),
(680,819,q),
(698,747,o),
(698,684,qs),
(698,659,o),
(694,635,qs),
(692,617,o),
(631,616,o),
(629,627,qs),
(621,662,o),
(559,745,o),
(532,758,q),
(479,520,l),
(594,487,o),
(700,383,o),
(700,299,qs),
(700,172,o),
(506,-2,o),
(356,-10,q),
(324,-158,l),
(322,-164,o),
(307,-162,q),
(289,-162,o),
(252,-154,qs),
(184,-138,o),
(186,-125,q),
(215,-4,l),
(137,10,o),
(84,47,q),
(74,80,o),
(74,135,qs),
(74,188,o),
(82,260,qs),
(84,278,o),
(119,279,qs),
(158,279,o),
(160,262,q),
(158,225,o),
(209,133,o),
(240,106,q),
(297,354,l),
(195,389,o),
(109,504,o),
(109,569,qs),
(109,688,o),
(293,838,o),
(412,852,q),
(442,987,ls),
(444,993,o),
(459,993,qs),
(477,993,o),
(514,985,qs),
(582,969,o),
(580,956,q),
(555,850,l)
);
},
{
closed = 1;
nodes = (
(360,754,o),
(307,692,o),
(307,651,qs),
(307,606,o),
(348,573,q),
(391,766,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
66 60 48 47 34 33 23 20 19 5 10 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 3 2 136 0 1 3 0 3 1 0 131 0 3 3 33 77 0 0 0 34 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 3 2 136 0 1 3 0 3 1 0 131 0 0 0 3 97 0 3 3 33 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 43 30 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 819;
}
);
note = dollar.oldstyle;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,362,l),
(625,0,l),
(444,0,l),
(444,362,l),
(123,362,l),
(123,510,l),
(444,510,l),
(444,836,l),
(625,836,l),
(625,510,l),
(944,510,l),
(944,362,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 5 1 3 4 0 3 103 0 1 1 71 77 0 4 4 69 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 5 1 3 4 0 3 103 0 1 1 4 95 0 4 4 69 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 4 1 87 2 1 0 5 1 3 4 0 3 103 0 1 1 4 95 0 4 1 4 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 17 16 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1062;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,463,ls),
(11,463,o),
(8,518,q),
(10,557,l),
(16,596,o),
(31,596,qs),
(993,596,ls),
(1013,596,o),
(1016,541,q),
(1014,502,l),
(1007,463,o),
(993,463,q),
(993,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 36 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(641,-39,l),
(397,203,l),
(156,-39,l),
(18,98,l),
(260,342,l),
(18,584,l),
(156,721,l),
(397,479,l),
(641,721,l),
(778,584,l),
(535,342,l),
(778,98,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(659,714,o),
(598,682,qs),
(567,666,o),
(530,664,qs),
(464,664,o),
(426,707,qs),
(391,742,o),
(391,799,qs),
(391,848,o),
(465,922,o),
(596,922,o),
(633,870,qs),
(659,833,o),
(659,786,q),
(659,786,l)
);
},
{
closed = 1;
nodes = (
(659,51,o),
(598,18,q),
(569,6,l),
(551,2,o),
(530,2,qs),
(467,2,o),
(426,43,qs),
(391,80,o),
(391,137,qs),
(391,186,o),
(465,260,o),
(596,260,o),
(635,209,q),
(659,172,o),
(659,125,q),
(659,125,l)
);
},
{
closed = 1;
nodes = (
(82,383,l),
(82,541,l),
(971,541,l),
(971,383,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 1 4 0 1 105 0 4 0 5 2 4 5 103 0 2 2 3 97 0 3 3 69 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 1 4 0 1 105 0 4 0 5 2 4 5 103 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 21 37 23 37 19 6 11 28 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,575,l),
(68,717,l),
(897,717,l),
(897,575,l)
);
},
{
closed = 1;
nodes = (
(68,268,l),
(68,410,l),
(897,410,l),
(897,268,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 997;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,-23,l),
(76,162,l),
(680,422,l),
(76,682,l),
(76,866,l),
(946,485,l),
(946,356,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(948,162,l),
(948,-23,l),
(78,356,l),
(78,485,l),
(948,866,l),
(948,682,l),
(344,422,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = less;
unicode = 60;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,629,l),
(625,287,l),
(444,287,l),
(444,629,l),
(143,629,l),
(143,776,l),
(444,776,l),
(444,1081,l),
(625,1081,l),
(625,776,l),
(924,776,l),
(924,629,l)
);
},
{
closed = 1;
nodes = (
(143,-6,l),
(143,141,l),
(924,141,l),
(924,-6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
2 1 0 5 1 3 4 0 3 103 0 1 0 4 6 1 4 103 0 6 6 7 95 0 7 7 69 7 78 17 17 17 17 17 17 17 16 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1062;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(657,430,l),
(573,344,o),
(481,346,qs),
(430,346,o),
(336,389,qs),
(248,432,o),
(207,436,qs),
(197,436,o),
(188,438,q),
(143,438,o),
(76,383,qs),
(59,369,l),
(59,367,l),
(55,363,o),
(47,362,q),
(35,367,ls),
(12,377,o),
(4,399,q),
(2,412,ls),
(2,414,o),
(6,416,q),
(70,487,ls),
(154,573,o),
(260,573,qs),
(311,573,o),
(408,528,qs),
(494,487,o),
(530,483,q),
(541,483,ls),
(586,483,o),
(637,524,qs),
(672,555,o),
(680,561,q),
(690,563,l),
(713,561,o),
(731,539,q),
(737,526,l),
(735,518,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 42 values pushed */
37 3 2 0 1 16 1 3 2 2 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 37 29 36 23 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 741;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1180,483,l),
(0,483,l),
(0,657,l),
(1366,657,l),
(1366,0,l),
(1180,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 2 0 1 103 3 1 2 2 69 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 1 2 134 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 5 0 5 17 17 4 11 24 
CALL[ ]	/* CallFunction */";
};
width = 1363;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(825,535,l),
(549,1112,l),
(270,535,l),
(49,535,l),
(471,1372,l),
(625,1372,l),
(1044,535,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1093;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = emptyset;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1546,379,o),
(1120,-47,o),
(819,-47,qs),
(561,-47,o),
(365,113,q),
(164,-86,l),
(55,23,l),
(256,221,l),
(94,420,o),
(94,678,qs),
(94,977,o),
(518,1405,o),
(819,1403,qs),
(1077,1403,o),
(1276,1241,q),
(1477,1444,l),
(1585,1335,l),
(1382,1135,l),
(1546,936,o),
(1546,678,q),
(1546,678,l)
);
},
{
closed = 1;
nodes = (
(1015,1250,o),
(819,1249,qs),
(583,1249,o),
(246,913,o),
(248,678,qs),
(248,481,o),
(365,332,q),
(1165,1133,l)
);
},
{
closed = 1;
nodes = (
(1393,875,o),
(1274,1024,q),
(473,223,l),
(625,104,o),
(819,104,qs),
(1055,104,o),
(1393,442,o),
(1393,678,q),
(1393,678,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
3 1 2 0 35 34 28 15 12 5 2 7 3 2 13 1 1 3 3 76 4 1 0 74 14 1 1 73 0 0 0 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 36 39 40 38 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1636;
}
);
note = emptyset;
unicode = 8709;
},
{
glyphname = uni00B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1039,25,o),
(926,2,qs),
(899,-4,ls),
(797,-31,o),
(768,-35,q),
(756,-35,l),
(746,-31,o),
(745,10,qs),
(745,57,ls),
(745,80,o),
(733,80,q),
(721,76,ls),
(715,74,o),
(707,66,qs),
(623,-10,o),
(508,-20,qs),
(481,-22,o),
(453,-23,qs),
(398,-23,o),
(340,0,q),
(334,-76,l),
(342,-360,l),
(342,-362,ls),
(342,-421,o),
(291,-461,qs),
(250,-492,o),
(201,-492,qs),
(125,-492,o),
(92,-430,qs),
(78,-403,o),
(78,-377,qs),
(78,-340,o),
(102,-137,qs),
(110,-65,o),
(113,-25,qs),
(127,168,o),
(127,279,qs),
(127,299,l),
(127,655,ls),
(127,747,o),
(61,758,q),
(43,758,ls),
(29,758,o),
(29,795,q),
(31,817,l),
(35,829,o),
(43,831,q),
(141,831,o),
(266,850,qs),
(297,854,o),
(317,854,qs),
(362,854,o),
(362,811,qs),
(362,795,l),
(356,717,o),
(356,649,qs),
(356,307,ls),
(356,207,o),
(401,143,qs),
(438,92,o),
(498,92,qs),
(594,92,o),
(659,152,qs),
(706,195,o),
(707,240,qs),
(707,655,ls),
(707,737,o),
(649,754,q),
(625,758,l),
(623,758,ls),
(609,758,o),
(606,795,q),
(610,817,l),
(614,829,o),
(623,831,q),
(734,831,o),
(852,850,qs),
(877,854,o),
(891,854,qs),
(938,854,o),
(944,817,q),
(944,788,l),
(936,702,o),
(936,662,qs),
(936,256,ls),
(936,166,o),
(946,139,qs),
(960,98,o),
(999,98,qs),
(1011,98,o),
(1032,104,q),
(1040,102,l),
(1056,94,o),
(1061,57,q),
(1061,39,l),
(1059,31,o),
(1055,31,q),
(1055,31,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
53 43 25 16 15 5 6 2 5 1 0 6 77 3 2 8 0 76 1 7 8 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 8 7 134 4 1 1 1 71 77 0 6 6 2 97 5 1 2 2 71 77 3 1 0 0 8 97 0 8 8 69 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 7 8 7 134 5 1 2 0 6 0 2 6 105 4 1 1 1 71 77 3 1 0 0 8 97 0 8 8 69 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
39 45 36 18 40 45 19 24 39 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1071;
}
);
note = uni00B5;
unicode = 181;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(791,811,o),
(713,692,qs),
(617,547,o),
(442,547,qs),
(282,547,o),
(180,692,qs),
(98,811,o),
(98,973,qs),
(98,1125,o),
(170,1243,qs),
(266,1399,o),
(618,1399,o),
(717,1243,qs),
(791,1125,o),
(791,973,q),
(791,973,l)
);
},
{
closed = 1;
nodes = (
(584,1311,o),
(442,1311,qs),
(305,1311,o),
(305,975,qs),
(305,635,o),
(442,635,qs),
(584,635,o),
(584,975,q),
(584,975,l)
);
},
{
closed = 1;
nodes = (
(557,-82,ls),
(549,-94,o),
(496,-61,qs),
(453,-32,o),
(459,-20,q),
(1331,1427,l),
(1337,1439,o),
(1393,1409,qs),
(1440,1382,o),
(1432,1370,q),
(1432,1370,l)
);
},
{
closed = 1;
nodes = (
(1800,244,o),
(1722,125,qs),
(1626,-20,o),
(1452,-20,qs),
(1292,-20,o),
(1190,125,qs),
(1108,244,o),
(1108,406,qs),
(1108,558,o),
(1182,676,qs),
(1278,832,o),
(1452,831,qs),
(1630,831,o),
(1726,676,qs),
(1800,558,o),
(1800,406,q),
(1800,406,l)
);
},
{
closed = 1;
nodes = (
(1593,744,o),
(1452,743,qs),
(1315,743,o),
(1315,408,qs),
(1315,68,o),
(1452,68,qs),
(1593,68,o),
(1593,408,q),
(1593,408,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 1 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 1 6 2 1 105 0 3 3 0 97 0 0 0 74 77 0 7 7 4 97 0 4 4 71 77 0 6 6 5 97 0 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 0 7 2 4 7 105 0 2 0 1 6 2 1 105 0 3 3 0 97 0 0 0 74 77 0 6 6 5 97 0 5 5 69 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
60 58 56 54 49 47 41 39 34 37 38 19 8 11 26 
CALL[ ]	/* CallFunction */";
};
width = 1820;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,-82,l),
(555,-84,o),
(551,-86,q),
(530,-82,l),
(487,-66,o),
(465,-37,qs),
(459,-29,o),
(459,-25,qs),
(459,-20,l),
(1331,1427,l),
(1333,1429,o),
(1339,1430,q),
(1349,1430,o),
(1372,1419,qs),
(1419,1399,o),
(1432,1378,q),
(1432,1370,l)
);
},
{
closed = 1;
nodes = (
(791,811,o),
(713,692,qs),
(617,547,o),
(442,547,qs),
(278,547,o),
(180,692,qs),
(102,809,o),
(98,958,qs),
(98,973,ls),
(98,1125,o),
(170,1243,qs),
(266,1399,o),
(618,1399,o),
(717,1243,qs),
(791,1125,o),
(791,973,q),
(791,973,l)
);
},
{
closed = 1;
nodes = (
(584,1163,o),
(547,1239,qs),
(522,1288,o),
(481,1305,qs),
(463,1311,o),
(442,1311,qs),
(346,1311,o),
(315,1112,qs),
(305,1044,o),
(305,975,qs),
(305,750,o),
(371,670,qs),
(402,635,o),
(442,635,qs),
(584,635,o),
(584,975,q),
(584,975,l)
);
},
{
closed = 1;
nodes = (
(2660,242,o),
(2583,125,qs),
(2489,-20,o),
(2314,-20,qs),
(2148,-20,o),
(2050,127,qs),
(1972,244,o),
(1968,393,qs),
(1968,406,ls),
(1968,558,o),
(2042,676,qs),
(2138,832,o),
(2490,831,o),
(2587,676,qs),
(2660,558,o),
(2660,406,q),
(2660,406,l)
);
},
{
closed = 1;
nodes = (
(2456,617,o),
(2404,692,qs),
(2369,743,o),
(2314,743,qs),
(2212,743,o),
(2183,530,qs),
(2177,471,o),
(2177,408,qs),
(2177,162,o),
(2253,92,qs),
(2280,67,o),
(2314,68,qs),
(2443,68,o),
(2456,352,q),
(2456,408,ls)
);
},
{
closed = 1;
nodes = (
(1800,242,o),
(1722,125,qs),
(1681,64,o),
(1624,27,qs),
(1550,-20,o),
(1454,-20,qs),
(1288,-20,o),
(1190,127,qs),
(1112,244,o),
(1108,393,qs),
(1108,406,ls),
(1108,558,o),
(1182,676,qs),
(1278,832,o),
(1630,831,o),
(1726,676,qs),
(1800,558,o),
(1800,406,q),
(1800,406,l)
);
},
{
closed = 1;
nodes = (
(1595,619,o),
(1544,692,q),
(1530,715,o),
(1509,727,qs),
(1484,743,o),
(1454,743,qs),
(1352,743,o),
(1323,530,qs),
(1317,471,o),
(1317,408,qs),
(1317,162,o),
(1393,92,qs),
(1420,67,o),
(1454,68,qs),
(1595,68,o),
(1595,408,q),
(1595,408,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
16 1 3 0 1 76 7 1 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 1 6 2 1 105 0 3 3 0 97 0 0 0 74 77 11 1 7 7 4 97 8 1 4 4 71 77 10 1 6 6 5 97 9 1 5 5 69 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 4 11 1 7 2 4 7 105 0 2 0 1 6 2 1 105 0 3 3 0 97 0 0 0 74 77 10 1 6 6 5 97 9 1 5 5 69 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
113 111 105 103 96 94 87 86 79 77 71 69 64 62 55 54 45 43 37 35 30 28 21 20 12 11 22 
CALL[ ]	/* CallFunction */";
};
width = 2699;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = arrowup;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,-428,o),
(412,-428,o),
(412,-395,qs),
(412,1122,l),
(109,883,l),
(91,883,o),
(90,1004,o),
(109,1026,qs),
(424,1407,ls),
(467,1460,o),
(518,1460,qs),
(567,1460,o),
(610,1407,qs),
(915,1026,l),
(931,1003,o),
(934,887,o),
(915,887,q),
(612,1122,l),
(612,-395,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
14 1 0 3 1 0 1 76 0 0 1 0 133 0 1 1 118 24 38 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = arrowup;
unicode = 8593;
},
{
glyphname = arrowright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1968,561,o),
(1968,463,o),
(1915,420,qs),
(1534,113,l),
(1511,97,o),
(1452,94,qs),
(1393,94,o),
(1393,113,q),
(1628,416,l),
(111,416,ls),
(78,416,o),
(80,616,o),
(111,616,qs),
(1628,616,l),
(1391,920,l),
(1391,938,o),
(1511,938,o),
(1534,920,qs),
(1915,604,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
10 1 3 2 1 76 0 0 1 0 133 0 3 2 3 134 0 1 2 2 1 87 0 1 1 2 96 0 2 1 2 80 19 33 34 17 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 2048;
}
);
note = arrowright;
unicode = 8594;
},
{
glyphname = arrowdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,-88,l),
(915,150,l),
(933,150,o),
(934,29,o),
(915,6,qs),
(600,-375,ls),
(557,-428,o),
(506,-428,qs),
(457,-428,o),
(414,-375,qs),
(109,6,l),
(93,29,o),
(90,147,o),
(109,147,q),
(412,-88,l),
(412,1430,ls),
(412,1463,o),
(612,1463,o),
(612,1430,q),
(612,1430,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
18 5 4 3 1 0 1 76 0 0 1 0 133 0 1 1 118 40 17 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = arrowdown;
unicode = 8595;
},
{
glyphname = arrowleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1968,616,o),
(1968,416,o),
(1935,416,qs),
(418,416,l),
(657,113,l),
(657,95,o),
(537,94,o),
(514,113,qs),
(133,428,ls),
(80,471,o),
(80,522,qs),
(80,571,o),
(133,614,qs),
(512,920,l),
(535,936,o),
(653,938,o),
(653,920,q),
(418,616,l),
(1935,616,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
1 1 2 74 0 0 1 0 134 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 0 0 0 18 0 17 34 27 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 2048;
}
);
note = arrowleft;
unicode = 8592;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1210,86,o),
(1194,76,qs),
(1018,-33,o),
(782,-33,qs),
(542,-33,o),
(356,82,qs),
(71,256,o),
(72,602,qs),
(72,899,o),
(260,1110,qs),
(506,1384,o),
(901,1384,qs),
(1182,1384,o),
(1356,1229,qs),
(1526,1075,o),
(1526,848,qs),
(1526,674,o),
(1411,539,qs),
(1253,353,o),
(975,352,qs),
(873,352,o),
(846,389,qs),
(832,407,o),
(831,436,qs),
(831,463,o),
(850,518,q),
(840,524,l),
(688,358,o),
(590,358,qs),
(477,358,o),
(477,494,qs),
(477,611,o),
(555,752,qs),
(641,908,o),
(762,975,qs),
(832,1014,o),
(899,1014,qs),
(960,1014,o),
(991,983,q),
(1012,1034,ls),
(1024,1067,o),
(1085,1049,qs),
(1134,1035,o),
(1128,1010,qs),
(987,532,ls),
(979,501,o),
(979,471,qs),
(979,430,o),
(1001,430,qs),
(1163,430,o),
(1274,539,qs),
(1397,662,o),
(1397,840,qs),
(1397,1026,o),
(1268,1153,qs),
(1121,1298,o),
(883,1298,qs),
(631,1298,o),
(459,1124,qs),
(254,919,o),
(254,604,qs),
(254,424,o),
(350,283,qs),
(506,56,o),
(844,55,qs),
(1002,55,o),
(1167,127,qs),
(1186,134,o),
(1198,109,q),
(1198,109,l)
);
},
{
closed = 1;
nodes = (
(947,967,o),
(883,967,qs),
(803,967,o),
(725,821,qs),
(631,649,o),
(629,518,qs),
(629,448,o),
(659,449,qs),
(712,449,o),
(825,580,qs),
(886,652,o),
(924,772,qs),
(967,920,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
30 1 9 3 82 42 2 8 9 2 76 0 3 0 9 8 3 9 105 0 8 2 4 8 89 0 2 5 1 4 0 2 4 105 0 1 1 6 97 0 6 6 74 77 0 0 0 7 97 0 7 7 75 7 78 81 79 39 38 38 39 38 42 38 38 35 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1595;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1710,177,o),
(1708,164,q),
(1708,158,o),
(1706,154,q),
(1610,27,o),
(1444,-14,qs),
(1385,-28,o),
(1323,-29,qs),
(1120,-29,o),
(958,199,q),
(733,-26,o),
(496,-29,qs),
(250,-29,o),
(129,123,qs),
(39,238,o),
(39,373,qs),
(41,615,o),
(385,793,q),
(221,912,o),
(221,1063,qs),
(221,1198,o),
(326,1286,qs),
(428,1372,o),
(557,1372,qs),
(725,1372,o),
(821,1249,qs),
(868,1190,o),
(870,1096,qs),
(870,957,o),
(690,850,q),
(887,711,o),
(1051,477,q),
(1219,715,o),
(1219,760,qs),
(1219,819,o),
(1094,819,qs),
(1078,819,o),
(1077,920,o),
(1094,920,qs),
(1178,914,o),
(1366,911,qs),
(1554,911,o),
(1608,920,q),
(1622,920,o),
(1622,819,o),
(1608,819,qs),
(1469,819,o),
(1395,760,q),
(1336,705,o),
(1272,606,qs),
(1196,491,o),
(1112,383,q),
(1278,135,o),
(1460,135,qs),
(1591,135,o),
(1657,201,qs),
(1661,205,o),
(1667,205,qs),
(1680,205,o),
(1694,193,q),
(1694,193,l)
);
},
{
closed = 1;
nodes = (
(676,1274,o),
(551,1274,qs),
(432,1274,o),
(432,1110,qs),
(432,1010,o),
(596,907,q),
(676,985,o),
(676,1102,q),
(676,1102,l)
);
},
{
closed = 1;
nodes = (
(706,576,o),
(471,735,q),
(258,608,o),
(258,414,qs),
(258,277,o),
(344,184,qs),
(434,90,o),
(580,90,qs),
(733,91,o),
(903,279,q),
(903,279,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
21 1 2 7 63 30 2 1 2 78 50 42 28 8 5 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 7 4 97 0 4 4 68 77 3 1 1 1 2 97 0 2 2 71 77 0 0 0 5 97 6 1 5 5 75 77 0 8 8 5 97 6 1 5 5 75 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 7 4 97 0 4 4 74 77 3 1 1 1 2 97 0 2 2 71 77 0 0 0 5 97 6 1 5 5 75 77 0 8 8 5 97 6 1 5 5 75 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 3 1 1 0 2 1 105 0 7 7 4 97 0 4 4 74 77 0 0 0 5 97 6 1 5 5 75 77 0 8 8 5 97 6 1 5 5 75 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
35 45 34 42 42 35 36 22 37 9 11 31 
CALL[ ]	/* CallFunction */";
};
width = 1701;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,557,ls),
(487,580,o),
(463,580,qs),
(250,580,o),
(16,799,o),
(16,965,qs),
(16,1145,o),
(274,1358,o),
(463,1358,qs),
(549,1358,o),
(750,1352,o),
(1032,1352,o),
(1081,1358,q),
(1097,1358,o),
(1098,1282,o),
(1081,1282,qs),
(962,1282,o),
(963,1208,qs),
(963,145,ls),
(963,67,o),
(1081,68,qs),
(1097,68,o),
(1098,-8,o),
(1081,-8,q),
(1001,0,o),
(887,0,qs),
(580,0,ls),
(451,0,o),
(371,-8,q),
(355,-8,o),
(354,68,o),
(371,68,qs),
(487,67,o),
(487,143,q),
(487,143,l)
);
},
{
closed = 1;
nodes = (
(653,67,o),
(723,68,qs),
(797,68,o),
(797,143,qs),
(797,1208,ls),
(797,1282,o),
(731,1282,qs),
(653,1282,o),
(653,1208,qs),
(653,145,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 1 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 3 0 3 5 0 128 6 1 3 3 4 97 0 4 4 68 77 7 2 2 0 0 1 95 0 1 1 69 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 3 0 3 5 0 128 7 2 2 0 0 1 0 1 99 6 1 3 3 4 97 0 4 4 68 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 36 36 68 19 35 52 17 8 11 30 
CALL[ ]	/* CallFunction */";
};
width = 1116;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(915,309,o),
(737,211,q),
(864,88,o),
(864,-37,qs),
(864,-187,o),
(748,-293,qs),
(625,-404,o),
(455,-403,qs),
(371,-403,o),
(258,-360,qs),
(82,-297,o),
(82,-203,qs),
(82,-160,o),
(137,-121,qs),
(176,-92,o),
(238,-92,o),
(276,-152,qs),
(334,-236,ls),
(391,-320,o),
(471,-319,qs),
(561,-319,o),
(618,-242,qs),
(659,-185,o),
(659,-111,qs),
(659,-21,o),
(537,68,qs),
(486,103,o),
(348,178,qs),
(188,268,o),
(127,346,qs),
(57,430,o),
(57,528,qs),
(57,651,o),
(156,750,qs),
(193,787,o),
(238,811,q),
(134,917,o),
(133,1038,qs),
(133,1185,o),
(246,1284,qs),
(357,1380,o),
(510,1380,qs),
(594,1380,o),
(682,1343,qs),
(817,1284,o),
(825,1212,q),
(825,1167,o),
(778,1128,qs),
(745,1101,o),
(711,1102,qs),
(682,1102,o),
(653,1151,qs),
(610,1223,ls),
(567,1297,o),
(485,1296,qs),
(409,1296,o),
(358,1231,qs),
(321,1182,o),
(322,1122,qs),
(322,1034,o),
(440,952,qs),
(471,932,o),
(606,856,qs),
(764,770,o),
(829,694,qs),
(915,600,o),
(915,481,q),
(915,481,l)
);
},
{
closed = 1;
nodes = (
(727,522,o),
(512,637,qs),
(420,688,o),
(315,758,q),
(241,690,o),
(242,598,qs),
(242,518,o),
(403,422,qs),
(536,346,o),
(664,262,q),
(727,320,o),
(727,426,q),
(727,426,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
21 1 1 0 76 70 65 31 4 4 1 2 76 0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 3 0 5 3 5 101 0 0 0 2 97 0 2 2 74 0 78 60 58 52 51 48 46 38 35 43 6 11 25 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1532,504,o),
(1384,309,qs),
(1325,233,o),
(1249,176,qs),
(1054,26,o),
(567,27,o),
(375,174,qs),
(197,311,o),
(125,524,qs),
(90,633,o),
(90,748,qs),
(90,992,o),
(238,1186,qs),
(375,1364,o),
(588,1434,qs),
(697,1469,o),
(811,1468,qs),
(1055,1468,o),
(1247,1321,qs),
(1425,1184,o),
(1497,971,qs),
(1532,863,o),
(1532,748,q),
(1532,748,l)
);
},
{
closed = 1;
nodes = (
(1430,965,o),
(1292,1137,qs),
(1165,1295,o),
(969,1346,qs),
(891,1366,o),
(811,1366,qs),
(592,1366,o),
(424,1229,qs),
(373,1188,o),
(330,1137,qs),
(193,967,o),
(193,748,qs),
(193,531,o),
(330,360,qs),
(457,200,o),
(653,150,qs),
(731,130,o),
(811,129,qs),
(1028,129,o),
(1198,266,qs),
(1358,393,o),
(1409,590,qs),
(1430,666,o),
(1430,748,q),
(1430,748,l)
);
},
{
closed = 1;
nodes = (
(1106,524,o),
(1073,453,qs),
(1057,414,l),
(1053,410,l),
(1020,404,o),
(1006,399,qs),
(916,374,o),
(815,375,qs),
(651,375,o),
(541,479,qs),
(435,579,o),
(430,725,qs),
(430,737,ls),
(430,907,o),
(539,1020,qs),
(650,1135,o),
(825,1133,qs),
(891,1133,o),
(1018,1108,q),
(1022,1106,l),
(1032,1104,o),
(1065,1104,q),
(1081,1067,o),
(1087,942,qs),
(1087,928,ls),
(1087,918,o),
(1059,915,q),
(1040,920,l),
(1036,922,o),
(1036,924,qs),
(1022,1078,o),
(840,1085,qs),
(823,1085,ls),
(696,1085,o),
(629,973,qs),
(576,887,o),
(575,768,qs),
(575,573,o),
(688,477,qs),
(751,426,o),
(821,426,qs),
(1007,426,o),
(1057,575,qs),
(1059,581,o),
(1069,582,qs),
(1092,582,o),
(1106,567,q),
(1108,561,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 76 values pushed */
96 1 5 4 1 76 0 7 8 6 8 7 6 128 0 4 6 5 6 4 5 128 0 0 0 3 8 0 3 105 0 8 0 6 4 8 6 105 0 5 0 9 2 5 9 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 89 87 35 25 54 35 23 42 43 26 37 10 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1609;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1532,504,o),
(1384,309,qs),
(1325,233,o),
(1249,176,qs),
(1054,26,o),
(567,27,o),
(375,174,qs),
(197,311,o),
(125,524,qs),
(90,633,o),
(90,748,qs),
(90,992,o),
(238,1186,qs),
(375,1364,o),
(588,1434,qs),
(697,1469,o),
(811,1468,qs),
(1055,1468,o),
(1247,1321,qs),
(1425,1184,o),
(1497,971,qs),
(1532,863,o),
(1532,748,q),
(1532,748,l)
);
},
{
closed = 1;
nodes = (
(1430,965,o),
(1292,1137,qs),
(1165,1295,o),
(969,1346,qs),
(891,1366,o),
(811,1366,qs),
(592,1366,o),
(424,1229,qs),
(373,1188,o),
(330,1137,qs),
(193,967,o),
(193,748,qs),
(193,531,o),
(330,360,qs),
(457,200,o),
(653,150,qs),
(731,130,o),
(811,129,qs),
(1028,129,o),
(1198,266,qs),
(1358,393,o),
(1409,590,qs),
(1430,666,o),
(1430,748,q),
(1430,748,l)
);
},
{
closed = 1;
nodes = (
(1092,801,o),
(940,741,qs),
(928,737,o),
(930,729,qs),
(934,719,l),
(952,651,o),
(1110,489,qs),
(1165,432,o),
(1206,426,qs),
(1220,424,o),
(1221,408,qs),
(1221,390,o),
(1206,389,qs),
(1143,389,ls),
(1084,389,o),
(1032,418,qs),
(958,461,o),
(879,575,qs),
(863,600,o),
(821,657,qs),
(778,714,o),
(754,715,qs),
(745,715,ls),
(743,715,o),
(713,717,qs),
(699,717,o),
(698,705,q),
(698,510,ls),
(698,461,o),
(739,453,qs),
(755,451,o),
(780,449,qs),
(790,449,o),
(791,422,qs),
(791,397,o),
(782,397,q),
(747,401,o),
(520,401,o),
(481,397,qs),
(473,397,o),
(471,422,qs),
(471,447,o),
(479,446,q),
(567,446,o),
(567,510,qs),
(567,1020,ls),
(567,1073,o),
(502,1077,qs),
(490,1077,o),
(475,1079,qs),
(469,1079,o),
(469,1128,o),
(475,1128,qs),
(604,1124,o),
(631,1124,qs),
(654,1124,o),
(715,1126,qs),
(770,1128,o),
(793,1130,q),
(971,1130,o),
(1047,1044,qs),
(1092,994,o),
(1092,922,q),
(1092,922,l)
);
},
{
closed = 1;
nodes = (
(954,996,o),
(893,1042,qs),
(838,1085,o),
(743,1087,qs),
(706,1087,o),
(700,1079,q),
(698,1071,o),
(698,1067,qs),
(698,784,ls),
(698,766,o),
(711,764,qs),
(736,758,o),
(758,758,qs),
(928,758,o),
(950,885,qs),
(954,902,o),
(954,922,q),
(954,922,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
122 121 2 12 6 85 1 7 10 78 71 2 8 7 76 1 2 8 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
122 121 2 12 6 85 1 7 10 78 71 2 8 7 76 1 11 8 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 0 3 4 0 3 105 5 1 4 13 1 6 12 4 6 105 0 12 0 10 7 12 10 105 9 1 7 11 1 8 2 7 8 105 0 2 1 1 2 89 0 2 2 1 98 0 1 2 1 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 11 8 2 8 11 2 128 0 0 0 3 4 0 3 105 5 1 4 13 1 6 12 4 6 105 0 12 0 10 7 12 10 105 9 1 7 0 8 11 7 8 105 0 2 1 1 2 89 0 2 2 1 98 0 1 2 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 13 4 6 6 13 114 0 11 8 2 8 11 2 128 0 0 0 3 4 0 3 105 5 1 4 0 6 12 4 6 105 0 12 0 10 7 12 10 105 9 1 7 0 8 11 7 8 105 0 2 1 1 2 89 0 2 2 1 98 0 1 2 1 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
127 125 118 116 99 97 91 87 81 79 21 19 36 81 25 42 43 26 37 14 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1609;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1819,680,o),
(1706,680,qs),
(1602,680,o),
(1561,676,qs),
(1553,676,o),
(1550,700,q),
(1554,719,ls),
(1556,725,o),
(1561,725,qs),
(1643,725,o),
(1642,791,qs),
(1640,1149,ls),
(1640,1159,o),
(1636,1159,q),
(1632,1157,l),
(1628,1151,l),
(1384,680,l),
(1376,668,o),
(1358,668,qs),
(1338,668,o),
(1331,682,qs),
(1087,1198,ls),
(1083,1208,o),
(1077,1208,q),
(1075,1206,l),
(1073,1202,o),
(1073,1194,qs),
(1044,791,l),
(1047,768,l),
(1061,725,o),
(1137,725,qs),
(1145,725,o),
(1147,700,q),
(1143,682,ls),
(1141,676,o),
(1137,676,qs),
(1094,680,o),
(1014,680,qs),
(948,680,o),
(907,676,qs),
(899,676,o),
(897,700,q),
(901,719,ls),
(903,725,o),
(907,725,qs),
(979,725,o),
(987,778,q),
(989,784,o),
(989,793,qs),
(1022,1278,l),
(1022,1309,l),
(1016,1350,o),
(965,1356,qs),
(930,1358,ls),
(922,1358,o),
(922,1382,qs),
(924,1403,l),
(926,1409,o),
(930,1409,qs),
(971,1405,o),
(1022,1405,qs),
(1088,1405,o),
(1096,1403,qs),
(1137,1397,o),
(1155,1360,qs),
(1395,879,l),
(1399,869,o),
(1403,866,q),
(1407,870,ls),
(1409,872,o),
(1413,879,qs),
(1661,1364,ls),
(1681,1403,o),
(1714,1405,qs),
(1759,1405,ls),
(1812,1405,o),
(1853,1409,qs),
(1861,1409,o),
(1864,1384,q),
(1860,1366,l),
(1858,1362,o),
(1853,1360,q),
(1790,1360,o),
(1776,1325,q),
(1769,1298,l),
(1769,1282,l),
(1774,791,ls),
(1774,748,o),
(1804,733,qs),
(1824,725,o),
(1862,725,qs),
(1870,725,o),
(1872,700,q),
(1868,682,ls),
(1866,676,o),
(1862,676,q),
(1862,676,l)
);
},
{
closed = 1;
nodes = (
(885,1213,o),
(858,1210,q),
(836,1214,l),
(829,1219,l),
(829,1221,ls),
(829,1299,o),
(754,1337,qs),
(729,1349,o),
(705,1352,q),
(553,1358,ls),
(539,1358,o),
(535,1341,q),
(535,788,ls),
(535,725,o),
(627,725,qs),
(635,725,o),
(637,700,q),
(633,682,ls),
(631,676,o),
(627,676,qs),
(584,680,o),
(471,680,qs),
(348,680,o),
(307,676,qs),
(299,676,o),
(299,700,q),
(301,719,l),
(303,725,o),
(307,725,qs),
(403,725,o),
(403,788,qs),
(403,1341,ls),
(403,1355,o),
(389,1358,q),
(229,1350,ls),
(192,1348,o),
(154,1315,qs),
(111,1276,o),
(111,1221,qs),
(111,1211,o),
(84,1210,qs),
(66,1210,o),
(57,1217,qs),
(55,1219,o),
(55,1221,qs),
(55,1380,ls),
(55,1398,o),
(76,1407,o),
(115,1407,qs),
(455,1403,l),
(469,1403,l),
(827,1407,l),
(829,1407,ls),
(876,1407,o),
(883,1397,q),
(885,1380,l),
(885,1221,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
97 40 17 3 1 2 148 141 121 108 45 10 6 12 1 68 47 28 3 0 12 136 127 90 63 54 3 6 6 0 133 60 2 8 6 5 76 151 1 12 1 75 37 1 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 12 1 0 1 12 114 0 8 6 8 134 11 3 2 2 17 13 4 3 1 12 2 1 105 16 14 9 7 5 5 0 6 6 0 89 16 14 9 7 5 5 0 0 6 97 15 10 2 6 0 6 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 12 1 0 1 12 0 128 0 8 6 8 134 11 3 2 2 17 13 4 3 1 12 2 1 105 16 14 9 7 5 5 0 6 6 0 89 16 14 9 7 5 5 0 0 6 97 15 10 2 6 0 6 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
144 142 139 137 132 130 124 123 119 117 113 111 105 99 95 93 87 86 26 37 38 23 37 58 54 23 36 18 6 31 
CALL[ ]	/* CallFunction */";
};
width = 1900;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(631,910,o),
(528,836,qs),
(454,783,o),
(356,782,qs),
(229,782,o),
(152,864,qs),
(82,936,o),
(82,1047,qs),
(82,1174,o),
(176,1249,qs),
(252,1310,o),
(356,1311,qs),
(479,1311,o),
(557,1231,qs),
(631,1156,o),
(631,1047,q),
(631,1047,l)
);
},
{
closed = 1;
nodes = (
(485,1143,o),
(422,1186,qs),
(391,1206,o),
(356,1206,qs),
(288,1206,o),
(252,1145,qs),
(227,1104,o),
(227,1047,qs),
(227,951,o),
(291,907,qs),
(322,887,o),
(356,887,qs),
(426,887,o),
(461,948,qs),
(485,990,o),
(485,1047,q),
(485,1047,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 38 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 710;
}
);
note = degree;
unicode = 176;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,1434,l),
(391,1434,l),
(391,-334,l),
(197,-334,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 0 133 2 1 1 1 118 0 0 0 3 0 3 17 3 11 23 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,795,l),
(197,1372,l),
(391,1372,l),
(391,795,l)
);
},
{
closed = 1;
nodes = (
(197,109,l),
(197,688,l),
(391,688,l),
(391,109,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 68 1 78 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(958,803,o),
(879,762,qs),
(836,742,o),
(807,737,q),
(768,737,o),
(688,770,qs),
(600,809,o),
(545,809,q),
(545,686,o),
(596,559,qs),
(618,508,l),
(634,477,o),
(653,459,q),
(561,322,o),
(549,100,qs),
(547,51,o),
(545,-123,qs),
(545,-387,l),
(412,-387,l),
(412,-123,ls),
(412,80,o),
(406,143,qs),
(388,346,o),
(299,459,q),
(362,518,o),
(395,668,qs),
(411,744,o),
(412,809,q),
(355,809,o),
(264,770,qs),
(188,737,o),
(150,737,qs),
(117,737,o),
(66,768,qs),
(-2,809,o),
(-2,858,qs),
(-2,917,o),
(68,958,qs),
(109,983,o),
(141,983,qs),
(188,983,o),
(268,948,qs),
(352,911,o),
(401,909,qs),
(412,909,l),
(412,958,o),
(377,1069,qs),
(348,1155,o),
(348,1196,qs),
(348,1245,o),
(385,1313,qs),
(428,1393,o),
(477,1391,qs),
(530,1391,o),
(575,1303,qs),
(600,1256,o),
(604,1212,qs),
(606,1196,l),
(606,1153,o),
(573,1051,q),
(553,975,l),
(547,926,l),
(547,918,o),
(545,909,q),
(602,909,o),
(686,946,qs),
(772,981,o),
(815,983,qs),
(860,983,o),
(907,944,qs),
(958,905,o),
(958,858,q),
(958,858,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
14 1 0 2 59 48 2 7 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 5 7 134 4 1 0 9 1 5 7 0 5 105 0 2 2 74 77 8 1 6 6 1 97 3 1 1 1 71 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 7 5 7 134 3 1 1 8 1 6 5 1 6 105 4 1 0 9 1 5 7 0 5 105 0 2 2 74 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
68 67 26 25 18 38 34 39 42 18 35 10 11 31 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(958,86,o),
(891,45,qs),
(850,20,o),
(815,20,qs),
(772,20,o),
(690,55,qs),
(594,92,o),
(541,94,q),
(541,28,o),
(575,-70,qs),
(606,-152,o),
(606,-193,qs),
(606,-242,o),
(569,-309,qs),
(526,-387,o),
(428,-387,o),
(383,-301,qs),
(348,-235,o),
(348,-193,qs),
(348,-152,o),
(381,-74,qs),
(422,28,o),
(422,94,q),
(365,94,o),
(270,55,qs),
(182,20,o),
(141,20,qs),
(96,20,o),
(47,57,qs),
(-2,96,o),
(-2,145,qs),
(-2,202,o),
(78,244,qs),
(121,267,o),
(150,266,qs),
(189,266,o),
(270,229,qs),
(360,186,o),
(412,184,qs),
(422,184,l),
(422,317,o),
(365,424,qs),
(353,449,o),
(303,522,q),
(369,604,l),
(418,676,o),
(422,786,qs),
(422,811,l),
(359,811,o),
(266,770,qs),
(188,737,o),
(150,737,qs),
(117,737,o),
(66,768,qs),
(-2,809,o),
(-2,858,qs),
(-2,917,o),
(66,958,qs),
(107,983,o),
(141,983,qs),
(188,983,o),
(279,944,qs),
(375,905,o),
(422,905,q),
(422,960,o),
(383,1067,qs),
(348,1157,o),
(348,1196,qs),
(348,1245,o),
(385,1313,qs),
(428,1393,o),
(477,1391,qs),
(530,1391,o),
(575,1305,qs),
(604,1244,o),
(606,1196,qs),
(606,1153,o),
(571,1051,qs),
(540,957,o),
(541,905,q),
(596,905,o),
(682,944,qs),
(762,981,o),
(803,983,qs),
(815,983,ls),
(860,983,o),
(907,944,qs),
(956,905,o),
(958,858,qs),
(958,803,o),
(879,762,qs),
(836,742,o),
(807,737,q),
(766,737,o),
(690,770,qs),
(596,809,o),
(541,811,q),
(541,686,o),
(588,610,qs),
(594,600,o),
(649,524,q),
(583,420,o),
(541,272,o),
(541,184,q),
(602,184,o),
(684,225,qs),
(756,262,o),
(788,264,qs),
(796,264,o),
(807,266,q),
(844,266,o),
(895,233,qs),
(958,194,o),
(958,145,q),
(958,145,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
70 13 2 0 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 16 14 16 134 9 1 5 10 1 4 0 5 4 105 12 1 2 17 1 15 14 2 15 105 0 7 7 74 77 11 1 3 3 6 97 8 1 6 6 71 77 13 1 2 0 0 14 97 18 1 14 14 69 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 16 14 16 134 9 1 5 10 1 4 0 5 4 105 12 1 2 17 1 15 14 2 15 105 13 1 2 0 18 1 14 16 0 14 105 0 7 7 74 77 11 1 3 3 6 97 8 1 6 6 71 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 16 14 16 134 8 1 6 11 1 3 4 6 3 105 9 1 5 10 1 4 0 5 4 105 12 1 2 17 1 15 14 2 15 105 13 1 2 0 18 1 14 16 0 14 105 0 7 7 74 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
111 109 107 106 99 98 91 90 88 86 80 78 76 74 66 65 63 61 55 53 23 39 18 55 18 23 18 18 19 19 11 31 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = uni02C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,625,l),
(557,512,l),
(37,739,l),
(37,817,l),
(557,1047,l),
(557,936,l),
(195,780,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni02C2;
unicode = 706;
},
{
glyphname = uni02C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,739,l),
(37,512,l),
(37,625,l),
(397,780,l),
(37,936,l),
(37,1047,l),
(557,817,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni02C3;
unicode = 707;
},
{
glyphname = uni02C4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,524,l),
(31,524,l),
(256,1047,l),
(336,1047,l),
(563,524,l),
(453,524,l),
(297,887,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
6 1 0 1 1 76 0 1 0 1 133 2 1 0 0 118 17 17 16 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 602;
}
);
note = uni02C4;
unicode = 708;
},
{
glyphname = uni02C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,524,l),
(256,524,l),
(31,1047,l),
(141,1047,l),
(297,684,l),
(453,1047,l),
(563,1047,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
1 1 1 0 1 76 3 2 2 0 1 0 133 0 1 1 118 0 0 0 6 0 6 17 18 4 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 602;
}
);
note = uni02C5;
unicode = 709;
},
{
glyphname = uni02D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,707,l),
(363,699,o),
(362,158,o),
(84,147,q),
(84,246,l),
(256,256,o),
(256,426,qs),
(256,604,o),
(84,608,q),
(84,608,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 0 1 3 0 105 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 1 0 8 7 6 5 4 3 0 9 1 9 5 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 423;
}
);
note = uni02D2;
unicode = 722;
},
{
glyphname = uni02D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,604,o),
(190,426,qs),
(190,256,o),
(362,246,q),
(362,147,l),
(83,155,o),
(84,696,o),
(362,707,q),
(362,608,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 18 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 423;
}
);
note = uni02D3;
unicode = 723;
},
{
glyphname = uni02D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,334,l),
(119,481,l),
(438,481,l),
(438,807,l),
(588,807,l),
(588,481,l),
(907,481,l),
(907,334,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 133 2 1 0 3 3 0 87 2 1 0 0 3 96 0 3 0 3 80 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1024;
}
);
note = uni02D4;
unicode = 724;
},
{
glyphname = uni02D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(907,496,l),
(907,348,l),
(588,348,l),
(588,23,l),
(438,23,l),
(438,348,l),
(119,348,l),
(119,496,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 134 0 3 0 0 3 87 0 3 3 0 95 2 1 0 3 0 79 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1024;
}
);
note = uni02D5;
unicode = 725;
},
{
glyphname = uni02D6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,362,l),
(625,0,l),
(444,0,l),
(444,362,l),
(123,362,l),
(123,510,l),
(444,510,l),
(444,836,l),
(625,836,l),
(625,510,l),
(944,510,l),
(944,362,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 4 1 87 2 1 0 5 1 3 4 0 3 103 0 1 1 4 95 0 4 1 4 79 17 17 17 17 17 16 6 11 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1062;
}
);
note = uni02D6;
unicode = 726;
},
{
glyphname = uni02D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(731,672,o),
(731,401,o),
(739,317,q),
(739,303,o),
(664,303,o),
(664,317,qs),
(664,421,o),
(590,424,q),
(236,422,ls),
(160,422,o),
(162,317,qs),
(162,303,o),
(86,303,o),
(86,317,q),
(94,401,o),
(92,672,o),
(86,756,qs),
(86,770,o),
(162,770,o),
(162,756,qs),
(162,652,o),
(236,649,q),
(590,651,ls),
(666,651,o),
(664,756,qs),
(664,770,o),
(739,770,o),
(739,756,q),
(739,756,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
8 1 0 74 22 14 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 59 52 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 825;
}
);
note = uni02D7;
unicode = 727;
},
{
glyphname = uni02DE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,549,o),
(219,549,qs),
(248,549,o),
(276,578,q),
(283,580,l),
(306,572,o),
(303,535,qs),
(303,528,l),
(268,481,o),
(188,481,qs),
(102,481,o),
(66,573,qs),
(43,626,o),
(43,672,q),
(-84,637,l),
(-176,750,l),
(90,809,l),
(104,809,ls),
(116,809,o),
(119,795,qs),
(123,774,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
12 1 0 1 1 76 15 6 5 4 2 5 1 74 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 38 41 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 387;
}
);
note = uni02DE;
unicode = 734;
},
{
glyphname = uni02DF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453,967,l),
(324,1096,l),
(193,963,l),
(115,1040,l),
(248,1171,l),
(119,1298,l),
(193,1372,l),
(319,1241,l),
(446,1372,l),
(524,1296,l),
(393,1165,l),
(522,1038,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 622;
}
);
note = uni02DF;
unicode = 735;
},
{
glyphname = uni02E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(854,-133,l),
(686,-133,l),
(686,1180,l),
(59,1180,l),
(59,1327,l),
(854,1327,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 1 134 3 1 2 0 0 2 87 3 1 2 2 0 95 0 0 2 0 79 0 0 0 5 0 5 17 17 4 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 927;
}
);
note = uni02E5;
unicode = 741;
},
{
glyphname = uni02E6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(856,1327,l),
(856,-133,l),
(688,-133,l),
(688,950,l),
(61,950,l),
(61,1098,l),
(688,1098,l),
(688,1327,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 0 2 1 2 134 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 935;
}
);
note = uni02E6;
unicode = 742;
},
{
glyphname = uni02E7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(866,1327,l),
(866,-133,l),
(698,-133,l),
(698,547,l),
(72,547,l),
(72,694,l),
(698,694,l),
(698,1327,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 0 2 1 2 134 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 972;
}
);
note = uni02E7;
unicode = 743;
},
{
glyphname = uni02E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(856,1327,l),
(856,-133,l),
(688,-133,l),
(688,96,l),
(61,96,l),
(61,244,l),
(688,244,l),
(688,1327,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 0 2 1 2 134 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 927;
}
);
note = uni02E8;
unicode = 744;
},
{
glyphname = uni02E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(856,1327,l),
(856,-133,l),
(61,-133,l),
(61,14,l),
(688,14,l),
(688,1327,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 2 133 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 16 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 935;
}
);
note = uni02E9;
unicode = 745;
},
{
glyphname = uni02EA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,700,l),
(209,700,l),
(209,182,l),
(659,182,l),
(659,35,l),
(59,35,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 133 0 0 2 2 0 87 0 0 0 2 96 3 1 2 0 2 80 0 0 0 5 0 5 17 17 4 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 927;
}
);
note = uni02EA;
unicode = 746;
},
{
glyphname = uni02EB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,-18,l),
(72,778,l),
(219,778,l),
(219,461,l),
(690,461,l),
(690,311,l),
(219,311,l),
(219,-18,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 3 2 87 0 1 0 0 3 1 0 103 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 972;
}
);
note = uni02EB;
unicode = 747;
},
{
glyphname = uni02EC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,-563,l),
(371,-563,l),
(80,-217,l),
(170,-141,l),
(387,-401,l),
(602,-141,l),
(692,-217,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 15 values pushed */
6 3 2 1 4 0 74 0 0 0 118 20 1 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = uni02EC;
unicode = 748;
},
{
glyphname = uni02ED;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,1493,o),
(555,1380,o),
(524,1380,qs),
(78,1380,ls),
(55,1380,o),
(55,1493,o),
(78,1493,qs),
(528,1493,ls)
);
},
{
closed = 1;
nodes = (
(555,1239,o),
(555,1128,o),
(524,1128,qs),
(78,1128,ls),
(55,1128,o),
(55,1239,o),
(78,1239,qs),
(528,1239,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 9 8 1 0 13 10 8 15 9 14 5 2 0 7 1 6 6 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 606;
}
);
note = uni02ED;
unicode = 749;
},
{
glyphname = uni02EE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,1169,o),
(223,965,o),
(119,913,q),
(113,911,o),
(104,911,qs),
(94,911,o),
(86,922,q),
(76,940,o),
(86,952,qs),
(207,1095,o),
(209,1188,qs),
(209,1206,o),
(150,1225,o),
(72,1307,o),
(72,1360,qs),
(72,1413,o),
(156,1481,o),
(215,1481,qs),
(274,1481,o),
(389,1372,o),
(389,1286,q),
(389,1286,l)
);
},
{
closed = 1;
nodes = (
(829,1169,o),
(664,965,o),
(557,913,q),
(551,911,o),
(545,911,qs),
(535,911,o),
(526,922,q),
(516,940,o),
(526,952,qs),
(647,1095,o),
(647,1188,qs),
(647,1206,o),
(590,1225,o),
(512,1307,o),
(512,1360,qs),
(512,1413,o),
(596,1481,o),
(655,1481,qs),
(714,1481,o),
(829,1372,o),
(829,1286,q),
(829,1286,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 15 values pushed */
16 1 0 73 1 1 0 0 118 26 24 34 2 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 892;
}
);
note = uni02EE;
unicode = 750;
},
{
glyphname = uni02EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(438,-549,ls),
(422,-580,o),
(387,-580,qs),
(356,-580,o),
(340,-549,qs),
(111,-137,l),
(109,-135,o),
(109,-131,qs),
(109,-115,o),
(137,-98,qs),
(147,-92,o),
(160,-92,o),
(164,-98,q),
(346,-311,ls),
(379,-350,o),
(399,-350,o),
(432,-311,qs),
(614,-98,ls),
(618,-94,o),
(625,-92,q),
(633,-92,o),
(643,-100,qs),
(670,-118,o),
(670,-131,qs),
(670,-135,o),
(668,-137,q),
(668,-137,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 25 values pushed */
6 1 0 74 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 43 26 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = uni02EF;
unicode = 751;
},
{
glyphname = uni02F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(668,-537,l),
(670,-539,o),
(670,-543,qs),
(670,-555,o),
(643,-573,qs),
(633,-579,o),
(625,-580,qs),
(619,-580,o),
(614,-575,qs),
(432,-362,ls),
(399,-323,o),
(379,-324,o),
(346,-362,qs),
(164,-575,ls),
(160,-579,o),
(147,-580,o),
(137,-573,q),
(108,-557,o),
(109,-543,qs),
(109,-541,o),
(111,-537,qs),
(340,-125,ls),
(356,-94,o),
(387,-92,q),
(422,-94,o),
(438,-125,q),
(438,-125,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 27 33 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = uni02F0;
unicode = 752;
},
{
glyphname = uni02F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(590,-57,l),
(592,-55,o),
(596,-55,qs),
(608,-55,o),
(627,-82,qs),
(633,-92,o),
(633,-100,qs),
(633,-106,o),
(629,-113,q),
(416,-295,ls),
(377,-328,o),
(377,-346,o),
(416,-381,qs),
(629,-561,ls),
(633,-565,o),
(633,-578,o),
(627,-590,qs),
(611,-619,o),
(596,-616,qs),
(594,-616,o),
(590,-614,qs),
(176,-385,ls),
(145,-369,o),
(145,-338,qs),
(145,-305,o),
(176,-289,q),
(176,-289,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
22 8 1 50 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uni02F1;
unicode = 753;
},
{
glyphname = uni02F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,-614,l),
(188,-616,o),
(184,-616,qs),
(172,-616,o),
(154,-592,q),
(148,-582,o),
(145,-571,q),
(145,-565,o),
(152,-561,q),
(365,-379,ls),
(404,-346,o),
(403,-326,o),
(365,-293,qs),
(152,-111,ls),
(148,-107,o),
(145,-100,q),
(145,-94,o),
(152,-84,q),
(168,-55,o),
(184,-55,qs),
(186,-55,o),
(190,-57,qs),
(602,-287,ls),
(633,-303,o),
(633,-369,o),
(602,-385,q),
(602,-385,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
22 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uni02F2;
unicode = 754;
},
{
glyphname = uni02F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,-432,o),
(532,-504,qs),
(475,-545,o),
(389,-545,qs),
(262,-545,o),
(193,-457,qs),
(144,-398,o),
(143,-319,qs),
(143,-223,o),
(215,-158,qs),
(285,-97,o),
(389,-96,qs),
(516,-96,o),
(588,-184,qs),
(635,-243,o),
(635,-319,q),
(635,-319,l)
);
},
{
closed = 1;
nodes = (
(498,-241,o),
(444,-195,qs),
(421,-177,o),
(389,-176,qs),
(326,-176,o),
(293,-252,qs),
(281,-281,o),
(281,-319,qs),
(281,-405,o),
(334,-440,qs),
(359,-456,o),
(389,-459,q),
(457,-459,o),
(485,-389,qs),
(498,-358,o),
(498,-319,q),
(498,-319,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 39 23 38 35 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = uni02F3;
unicode = 755;
},
{
glyphname = uni02F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(397,362,o),
(397,344,qs),
(397,291,o),
(354,291,qs),
(319,291,o),
(287,340,qs),
(117,590,l),
(113,598,o),
(113,604,qs),
(113,637,o),
(170,668,qs),
(213,691,o),
(244,690,qs),
(269,690,o),
(272,678,q),
(389,385,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
13 6 2 1 0 1 76 0 0 1 0 133 0 1 1 118 39 18 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 567;
}
);
note = uni02F4;
unicode = 756;
},
{
glyphname = uni02F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(397,362,o),
(397,344,qs),
(397,291,o),
(354,291,qs),
(319,291,o),
(287,340,qs),
(117,590,l),
(113,598,o),
(113,604,qs),
(113,637,o),
(170,668,qs),
(213,691,o),
(244,690,qs),
(269,690,o),
(272,678,q),
(389,385,ls)
);
},
{
closed = 1;
nodes = (
(743,362,o),
(743,344,qs),
(743,291,o),
(700,291,qs),
(665,291,o),
(633,340,qs),
(463,590,l),
(459,598,o),
(459,604,qs),
(459,637,o),
(516,668,qs),
(559,691,o),
(590,690,qs),
(615,690,o),
(618,678,q),
(735,385,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
29 22 13 6 4 1 0 1 76 2 1 0 1 0 133 3 1 1 1 118 39 22 39 18 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 884;
}
);
note = uni02F5;
unicode = 757;
},
{
glyphname = uni02F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(534,291,o),
(500,291,qs),
(457,291,o),
(459,344,qs),
(459,362,o),
(467,385,qs),
(584,678,l),
(588,692,o),
(610,690,q),
(643,690,o),
(684,668,qs),
(741,637,o),
(743,604,qs),
(743,596,o),
(737,590,q),
(569,340,ls)
);
},
{
closed = 1;
nodes = (
(188,291,o),
(154,291,qs),
(111,291,o),
(113,344,qs),
(113,362,o),
(121,385,qs),
(238,678,l),
(242,692,o),
(264,690,q),
(297,690,o),
(340,668,qs),
(397,637,o),
(397,604,qs),
(397,596,o),
(391,590,q),
(223,340,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 25 values pushed */
18 2 2 1 0 1 76 2 1 0 1 0 133 3 1 1 1 118 38 23 38 21 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 884;
}
);
note = uni02F6;
unicode = 758;
},
{
glyphname = uni02F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(493,-328,o),
(385,-328,qs),
(344,-328,o),
(258,-297,qs),
(164,-264,o),
(131,-264,qs),
(68,-264,o),
(20,-324,qs),
(18,-326,o),
(12,-326,qs),
(4,-326,o),
(-25,-297,o),
(-27,-289,q),
(-27,-287,o),
(-25,-283,q),
(81,-123,o),
(195,-123,qs),
(244,-123,o),
(328,-156,qs),
(404,-183,o),
(436,-182,qs),
(499,-182,o),
(559,-121,qs),
(561,-119,o),
(565,-119,qs),
(573,-119,o),
(590,-131,q),
(608,-147,o),
(606,-158,q),
(606,-162,o),
(604,-164,q),
(604,-164,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
16 1 3 2 1 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 34 41 34 41 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 579;
}
);
note = uni02F7;
unicode = 759;
},
{
glyphname = uni02F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,1179,o),
(397,1106,o),
(272,1106,o),
(186,1190,o),
(186,1307,o),
(264,1395,o),
(408,1395,o),
(483,1302,o),
(483,1245,q),
(483,1245,l)
);
},
{
closed = 1;
nodes = (
(483,589,o),
(397,516,o),
(272,516,o),
(186,598,o),
(186,717,o),
(264,805,o),
(408,805,o),
(483,712,o),
(483,655,q),
(483,655,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 19 21 19 18 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 591;
}
);
note = uni02F8;
unicode = 760;
},
{
glyphname = uni02F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,1495,l),
(598,1407,l),
(221,1407,l),
(221,616,l),
(121,616,l),
(121,1495,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 0 134 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 17 17 16 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 714;
}
);
note = uni02F9;
unicode = 761;
},
{
glyphname = uni02FA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(573,618,l),
(471,618,l),
(471,1407,l),
(96,1407,l),
(96,1495,l),
(573,1495,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 1 134 3 1 2 0 0 2 87 3 1 2 2 0 95 0 0 2 0 79 0 0 0 5 0 5 17 17 4 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 675;
}
);
note = uni02FA;
unicode = 762;
},
{
glyphname = uni02FB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,0,l),
(121,0,l),
(121,877,l),
(221,877,l),
(221,88,l),
(598,88,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 0 0 0 5 0 5 17 17 4 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 714;
}
);
note = uni02FB;
unicode = 763;
},
{
glyphname = uni02FC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,0,l),
(96,88,l),
(471,88,l),
(471,877,l),
(573,877,l),
(573,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 0 133 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 17 17 16 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 675;
}
);
note = uni02FC;
unicode = 764;
},
{
glyphname = uni02FD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,-543,o),
(92,-520,qs),
(92,-86,ls),
(92,-66,o),
(188,-66,o),
(188,-86,qs),
(188,-317,ls),
(188,-331,o),
(213,-332,qs),
(795,-332,ls),
(818,-332,o),
(817,-313,qs),
(817,-86,ls),
(817,-66,o),
(913,-66,o),
(913,-86,qs),
(913,-522,ls),
(913,-542,o),
(895,-543,qs),
(115,-543,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
2 1 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
2 1 0 1 1 0 112 0 1 3 3 1 87 0 1 1 3 96 4 1 3 1 3 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 1 0 133 0 1 3 3 1 87 0 1 1 3 96 4 1 3 1 3 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 19 0 18 19 51 20 5 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1036;
}
);
note = uni02FD;
unicode = 765;
},
{
glyphname = uni02FE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,-543,o),
(92,-520,qs),
(92,-86,ls),
(92,-66,o),
(188,-66,o),
(188,-86,qs),
(188,-317,ls),
(188,-331,o),
(213,-332,qs),
(866,-332,ls),
(913,-332,o),
(913,-354,qs),
(913,-522,ls),
(913,-542,o),
(895,-543,qs),
(115,-543,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 112 0 0 2 2 0 87 0 0 0 2 96 3 1 2 0 2 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 1 133 0 0 2 2 0 87 0 0 0 2 96 3 1 2 0 2 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 15 0 14 19 52 4 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1036;
}
);
note = uni02FE;
unicode = 766;
},
{
glyphname = uni02FF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(438,-358,l),
(438,-438,l),
(61,-274,l),
(61,-217,l),
(438,-53,l),
(438,-133,l),
(279,-203,l),
(674,-203,l),
(674,-289,l),
(279,-289,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 44 values pushed */
6 5 2 1 0 1 76 4 3 2 0 74 8 7 2 1 73 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 9 0 9 17 3 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 741;
}
);
note = uni02FF;
unicode = 767;
},
{
glyphname = ampersand.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,356,o),
(207,492,o),
(319,537,q),
(200,619,o),
(201,711,qs),
(201,809,o),
(369,930,o),
(469,930,qs),
(569,930,o),
(717,827,o),
(717,733,qs),
(717,676,o),
(625,594,o),
(571,569,q),
(714,456,o),
(795,342,q),
(842,391,o),
(936,541,o),
(827,541,qs),
(817,541,o),
(815,616,o),
(827,616,q),
(852,612,o),
(1143,612,o),
(1171,616,q),
(1181,616,o),
(1182,541,o),
(1171,541,qs),
(1108,541,o),
(1024,496,o),
(981,436,o),
(895,319,o),
(850,262,q),
(948,100,o),
(1063,100,qs),
(1161,100,o),
(1200,137,qs),
(1208,145,o),
(1247,109,o),
(1239,98,qs),
(1147,-23,o),
(981,-23,qs),
(840,-23,o),
(731,121,q),
(592,-22,o),
(426,-23,qs),
(276,-23,o),
(88,148,o),
(88,250,q),
(88,250,l)
);
},
{
closed = 1;
nodes = (
(530,784,o),
(498,831,o),
(463,831,qs),
(434,831,o),
(397,786,o),
(397,743,qs),
(397,675,o),
(496,623,q),
(530,680,o),
(530,737,q),
(530,737,l)
);
},
{
closed = 1;
nodes = (
(317,208,o),
(403,100,o),
(483,100,qs),
(526,100,o),
(631,137,o),
(682,188,q),
(631,276,o),
(492,426,o),
(414,477,q),
(317,403,o),
(317,276,q),
(317,276,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
52 27 2 4 7 35 1 3 4 66 63 46 33 16 5 6 2 3 9 1 0 2 4 76 0 4 5 1 3 2 4 3 105 0 7 7 6 97 0 6 6 48 77 8 1 2 2 0 97 1 1 0 0 49 0 78 42 46 41 35 20 21 37 34 34 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 1214;
}
);
note = ampersand.sc;
},
{
glyphname = percent.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,-57,l),
(424,-59,o),
(408,-61,o),
(344,-20,o),
(352,-6,q),
(1053,963,l),
(1053,965,o),
(1067,963,o),
(1134,923,o),
(1126,913,q),
(1126,913,l)
);
},
{
closed = 1;
nodes = (
(621,497,o),
(512,418,qs),
(444,369,o),
(346,367,qs),
(342,367,ls),
(174,367,o),
(100,512,qs),
(65,580,o),
(66,651,qs),
(66,794,o),
(168,879,qs),
(240,938,o),
(342,938,qs),
(516,938,o),
(590,784,qs),
(621,721,o),
(621,651,q),
(621,651,l)
);
},
{
closed = 1;
nodes = (
(233,426,o),
(457,426,o),
(457,612,qs),
(457,653,l),
(445,878,o),
(340,879,qs),
(252,879,o),
(233,682,q),
(233,653,ls)
);
},
{
closed = 1;
nodes = (
(1417,120,o),
(1311,39,qs),
(1241,-12,o),
(1141,-14,qs),
(975,-14,o),
(899,131,qs),
(862,199,o),
(862,272,qs),
(862,415,o),
(967,500,qs),
(1039,557,o),
(1141,557,qs),
(1319,557,o),
(1391,403,qs),
(1417,342,o),
(1417,272,q),
(1417,272,l)
);
},
{
closed = 1;
nodes = (
(1030,498,o),
(1030,45,o),
(1255,45,o),
(1255,231,qs),
(1255,249,o),
(1253,272,qs),
(1241,498,o),
(1143,498,q),
(1143,498,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
29 1 4 2 57 1 7 1 2 76 0 4 8 1 6 3 4 6 105 0 3 0 1 7 3 1 105 0 2 2 0 97 0 0 0 48 77 0 7 7 5 97 0 5 5 49 5 78 56 55 61 60 55 63 56 62 38 37 19 37 54 46 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 1431;
}
);
note = percent.sc;
},
{
glyphname = uni02E4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,1202,o),
(518,1130,o),
(477,1130,qs),
(452,1130,o),
(414,1157,o),
(414,1184,qs),
(414,1209,o),
(457,1260,o),
(457,1288,qs),
(457,1319,o),
(401,1358,o),
(348,1358,qs),
(287,1358,o),
(199,1245,o),
(199,1145,qs),
(199,1053,o),
(287,928,o),
(375,911,qs),
(395,907,o),
(397,893,q),
(397,602,ls),
(397,561,o),
(461,561,qs),
(469,561,o),
(469,516,o),
(461,516,qs),
(412,520,o),
(330,520,qs),
(248,520,o),
(199,516,qs),
(191,516,o),
(188,561,o),
(199,561,qs),
(260,561,o),
(258,602,q),
(258,858,ls),
(258,870,o),
(248,872,qs),
(178,884,o),
(47,1014,o),
(47,1139,qs),
(47,1252,o),
(201,1405,o),
(328,1405,qs),
(430,1405,o),
(557,1304,o),
(557,1243,q),
(557,1243,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
27 11 2 1 5 1 76 21 1 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 4 1 4 5 1 128 0 4 4 0 97 0 0 0 86 77 3 1 1 1 2 97 0 2 2 85 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 4 1 4 5 1 128 0 4 4 0 97 0 0 0 86 77 3 1 1 1 2 97 0 2 2 94 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 41 35 66 25 34 6 12 28 
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = uni02E4;
unicode = 740;
},
{
glyphname = uni02E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,285,o),
(369,190,o),
(295,190,qs),
(207,190,o),
(127,285,o),
(127,324,qs),
(127,369,o),
(150,416,qs),
(238,600,l),
(96,954,ls),
(80,997,o),
(35,997,qs),
(27,997,o),
(27,1040,o),
(35,1040,qs),
(78,1036,o),
(158,1036,qs),
(238,1036,o),
(285,1040,qs),
(295,1040,o),
(295,997,o),
(285,997,qs),
(238,997,o),
(238,963,qs),
(238,955,o),
(240,946,q),
(311,760,l),
(406,952,ls),
(408,956,o),
(408,967,qs),
(408,998,o),
(348,997,qs),
(340,997,o),
(342,1040,o),
(348,1040,qs),
(391,1038,o),
(453,1038,qs),
(512,1038,o),
(555,1040,qs),
(563,1040,o),
(565,997,o),
(555,997,qs),
(502,997,o),
(483,954,qs),
(350,662,l),
(442,428,ls),
(461,385,o),
(461,328,q),
(461,328,l)
);
},
{
closed = 1;
nodes = (
(340,344,o),
(319,391,qs),
(274,500,l),
(229,408,ls),
(204,357,o),
(205,332,qs),
(205,305,o),
(240,252,o),
(272,252,qs),
(299,252,o),
(340,303,o),
(340,326,q),
(340,326,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
58 39 22 21 18 3 6 7 0 1 76 33 1 1 74 5 3 2 3 0 0 1 97 4 1 1 1 87 77 0 7 7 6 97 0 6 6 89 6 78 37 39 35 66 24 34 82 21 8 12 30 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni02E0;
unicode = 736;
},
{
glyphname = uni02BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,1169,o),
(223,965,o),
(119,913,q),
(113,911,o),
(104,911,qs),
(94,911,o),
(86,922,q),
(76,940,o),
(86,952,qs),
(207,1095,o),
(209,1188,qs),
(209,1206,o),
(150,1225,o),
(72,1307,o),
(72,1360,qs),
(72,1413,o),
(156,1481,o),
(215,1481,qs),
(274,1481,o),
(389,1372,o),
(389,1286,q),
(389,1286,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
16 1 0 73 0 0 0 118 34 1 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 428;
}
);
note = uni02BC;
unicode = 700;
},
{
glyphname = uni02BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,1307,o),
(311,1225,o),
(254,1206,o),
(254,1188,qs),
(254,1098,o),
(375,952,qs),
(385,940,o),
(375,924,qs),
(367,912,o),
(356,911,qs),
(350,911,o),
(342,915,qs),
(238,964,o),
(72,1169,o),
(72,1286,qs),
(72,1372,o),
(184,1481,o),
(246,1481,qs),
(305,1481,o),
(389,1413,o),
(389,1360,q),
(389,1360,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
17 1 0 73 0 0 0 118 34 1 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 428;
}
);
note = uni02BD;
unicode = 701;
},
{
glyphname = uni02B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,1020,o),
(143,1073,qs),
(143,1093,o),
(152,1114,qs),
(272,1415,ls),
(278,1431,o),
(299,1434,q),
(332,1434,o),
(395,1391,qs),
(434,1364,o),
(432,1343,qs),
(432,1337,o),
(430,1331,q),
(254,1069,ls),
(223,1020,o),
(186,1020,q),
(186,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 1 0 9 8 0 16 1 15 3 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 567;
}
);
note = uni02B9;
unicode = 697;
},
{
glyphname = uni02BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,1020,o),
(369,1073,qs),
(369,1093,o),
(377,1114,qs),
(496,1415,ls),
(502,1431,o),
(524,1434,q),
(557,1434,o),
(618,1391,qs),
(657,1364,o),
(657,1343,qs),
(657,1337,o),
(653,1331,qs),
(477,1069,l),
(447,1020,o),
(410,1020,q),
(410,1020,l)
);
},
{
closed = 1;
nodes = (
(61,1020,o),
(61,1073,qs),
(61,1093,o),
(70,1114,qs),
(190,1415,ls),
(196,1431,o),
(217,1434,q),
(250,1434,o),
(313,1391,qs),
(352,1364,o),
(350,1343,qs),
(350,1337,o),
(348,1331,q),
(172,1069,ls),
(141,1020,o),
(104,1020,q),
(104,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 133 5 2 4 3 0 0 118 18 17 1 0 26 25 17 33 18 32 9 8 0 16 1 15 6 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = uni02BA;
unicode = 698;
},
{
glyphname = uni02BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,994,o),
(258,928,o),
(199,928,qs),
(140,928,o),
(25,1034,o),
(25,1120,qs),
(25,1237,o),
(190,1442,o),
(297,1493,q),
(303,1495,o),
(309,1495,qs),
(319,1495,o),
(328,1485,q),
(338,1467,o),
(328,1454,qs),
(207,1311,o),
(207,1221,qs),
(207,1203,o),
(264,1182,o),
(342,1100,o),
(342,1047,q),
(342,1047,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 13 values pushed */
10 1 0 74 0 0 0 118 19 17 1 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 428;
}
);
note = uni02BB;
unicode = 699;
},
{
glyphname = uni02BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,1382,l),
(363,1374,o),
(362,834,o),
(84,825,q),
(84,924,l),
(256,934,o),
(256,1104,qs),
(256,1280,o),
(84,1284,q),
(84,1284,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 0 1 3 0 105 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 1 0 8 7 6 5 4 3 0 9 1 9 5 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 423;
}
);
note = uni02BE;
unicode = 702;
},
{
glyphname = uni02BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,1284,l),
(178,1280,o),
(178,1104,qs),
(178,934,o),
(350,924,q),
(350,825,l),
(71,833,o),
(71,1374,o),
(350,1382,q),
(350,1382,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
4 1 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 1 0 8 7 5 4 3 2 0 9 1 9 5 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 423;
}
);
note = uni02BF;
unicode = 703;
},
{
glyphname = uni02C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,561,o),
(408,561,qs),
(416,561,o),
(418,516,o),
(408,516,qs),
(359,520,o),
(276,520,qs),
(194,520,o),
(145,516,qs),
(137,516,o),
(135,561,o),
(145,561,qs),
(208,561,o),
(209,602,qs),
(209,893,ls),
(209,907,o),
(229,911,qs),
(317,927,o),
(408,1053,o),
(408,1145,qs),
(408,1245,o),
(317,1358,o),
(256,1358,qs),
(205,1358,o),
(150,1321,o),
(150,1288,qs),
(150,1259,o),
(193,1208,o),
(193,1184,qs),
(193,1159,o),
(152,1130,o),
(127,1130,qs),
(86,1130,o),
(47,1204,o),
(47,1243,qs),
(47,1304,o),
(174,1405,o),
(276,1405,qs),
(403,1405,o),
(557,1251,o),
(557,1139,qs),
(557,1014,o),
(426,885,o),
(358,872,qs),
(346,870,o),
(346,858,qs),
(346,602,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 53 values pushed */
0 1 3 1 1 76 41 1 4 73 0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 5 1 3 4 4 3 89 5 1 3 3 4 97 0 4 3 4 81 35 66 25 39 36 39 6 11 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 618;
}
);
note = uni02C0;
unicode = 704;
},
{
glyphname = uni02C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,1202,o),
(518,1130,o),
(477,1130,qs),
(452,1130,o),
(414,1157,o),
(414,1184,qs),
(414,1209,o),
(457,1260,o),
(457,1288,qs),
(457,1319,o),
(401,1358,o),
(348,1358,qs),
(287,1358,o),
(199,1245,o),
(199,1145,qs),
(199,1053,o),
(287,928,o),
(375,911,qs),
(395,907,o),
(397,893,q),
(397,602,ls),
(397,561,o),
(461,561,qs),
(469,561,o),
(469,516,o),
(461,516,qs),
(412,520,o),
(330,520,qs),
(248,520,o),
(199,516,qs),
(191,516,o),
(188,561,o),
(199,561,qs),
(260,561,o),
(258,602,q),
(258,858,ls),
(258,870,o),
(248,872,qs),
(178,884,o),
(47,1014,o),
(47,1139,qs),
(47,1252,o),
(201,1405,o),
(328,1405,qs),
(430,1405,o),
(557,1304,o),
(557,1243,q),
(557,1243,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 54 values pushed */
27 11 2 1 5 1 76 21 1 2 73 0 5 4 1 4 5 1 128 0 0 0 4 5 0 4 105 3 1 1 2 2 1 89 3 1 1 1 2 97 0 2 1 2 81 39 41 35 66 25 34 6 11 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 618;
}
);
note = uni02C1;
unicode = 705;
},
{
glyphname = uni02C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,1409,l),
(295,1020,l),
(135,1020,l),
(135,1409,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 16 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 456;
}
);
note = uni02C8;
unicode = 712;
},
{
glyphname = uni02C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,1239,o),
(555,1128,o),
(524,1128,qs),
(78,1128,ls),
(55,1128,o),
(55,1239,o),
(78,1239,qs),
(528,1239,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 5 2 0 7 1 6 3 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 606;
}
);
note = uni02C9;
unicode = 713;
},
{
glyphname = uni02CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,1020,o),
(143,1073,qs),
(143,1093,o),
(152,1114,qs),
(272,1415,ls),
(278,1431,o),
(299,1434,q),
(332,1434,o),
(395,1391,qs),
(434,1364,o),
(432,1343,qs),
(432,1337,o),
(430,1331,q),
(254,1069,ls),
(223,1020,o),
(186,1020,q),
(186,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 1 0 9 8 0 16 1 15 3 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 567;
}
);
note = uni02CA;
unicode = 714;
},
{
glyphname = uni02CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(469,1091,o),
(469,1073,qs),
(469,1020,o),
(426,1020,qs),
(391,1020,o),
(358,1069,qs),
(188,1319,l),
(184,1327,o),
(184,1333,qs),
(184,1366,o),
(242,1397,qs),
(285,1420,o),
(315,1419,qs),
(340,1419,o),
(344,1407,qs),
(461,1114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
13 6 2 1 0 1 76 0 0 1 0 133 0 1 1 118 39 18 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 567;
}
);
note = uni02CB;
unicode = 715;
},
{
glyphname = uni02CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,141,l),
(307,-248,l),
(158,-248,l),
(158,141,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 16 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 452;
}
);
note = uni02CC;
unicode = 716;
},
{
glyphname = uni02CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,-158,o),
(555,-211,qs),
(555,-270,o),
(524,-270,qs),
(78,-270,ls),
(55,-270,o),
(55,-213,qs),
(55,-160,o),
(78,-158,q),
(528,-158,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 9 0 8 51 3 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 606;
}
);
note = uni02CD;
unicode = 717;
},
{
glyphname = uni02CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,-477,o),
(616,-494,qs),
(616,-504,o),
(608,-514,qs),
(596,-530,o),
(578,-530,qs),
(566,-530,o),
(553,-524,qs),
(115,-324,l),
(105,-316,o),
(104,-299,qs),
(104,-285,o),
(111,-264,qs),
(123,-221,o),
(162,-184,qs),
(187,-157,o),
(205,-158,qs),
(213,-158,o),
(219,-164,q),
(598,-463,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
12 3 1 50 
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = uni02CE;
unicode = 718;
},
{
glyphname = uni02CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,-221,o),
(610,-264,qs),
(616,-282,o),
(616,-299,qs),
(616,-317,o),
(608,-324,q),
(170,-524,ls),
(156,-530,o),
(143,-530,qs),
(125,-530,o),
(113,-514,qs),
(105,-504,o),
(104,-494,qs),
(104,-478,o),
(125,-463,qs),
(502,-164,ls),
(508,-160,o),
(518,-158,q),
(536,-157,o),
(561,-184,q),
(561,-184,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
16 1 0 74 0 0 0 118 42 1 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 735;
}
);
note = uni02CF;
unicode = 719;
},
{
glyphname = uni02D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,750,l),
(414,750,l),
(252,469,l)
);
},
{
closed = 1;
nodes = (
(414,61,l),
(88,61,l),
(252,342,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
5 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 16 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 593;
}
);
note = uni02D0;
unicode = 720;
},
{
glyphname = uni02D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,750,l),
(414,750,l),
(252,469,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
2 1 0 73 0 0 0 118 16 1 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 593;
}
);
note = uni02D1;
unicode = 721;
},
{
glyphname = uni0308;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-821,0);
ref = dieresis;
}
);
width = 0;
}
);
note = uni0308;
unicode = 776;
},
{
glyphname = uni0307;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-725,0);
ref = dotaccent;
}
);
width = 0;
}
);
note = uni0307;
unicode = 775;
},
{
glyphname = gravecomb;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-860,0);
ref = grave;
}
);
width = 0;
}
);
note = gravecomb;
unicode = 768;
},
{
glyphname = acutecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-543,1020,o),
(-541,1073,qs),
(-541,1093,o),
(-532,1114,qs),
(-414,1415,ls),
(-408,1431,o),
(-385,1434,q),
(-352,1434,o),
(-291,1391,qs),
(-252,1364,o),
(-252,1343,qs),
(-252,1337,o),
(-256,1331,qs),
(-430,1069,ls),
(-463,1020,o),
(-500,1020,q),
(-500,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 1 0 9 8 0 16 1 15 3 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = acutecomb;
unicode = 769;
},
{
glyphname = uni030B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-408,1020,o),
(-406,1073,qs),
(-406,1093,o),
(-397,1114,qs),
(-279,1415,ls),
(-273,1431,o),
(-250,1434,q),
(-217,1434,o),
(-156,1391,qs),
(-117,1364,o),
(-117,1343,qs),
(-117,1337,o),
(-121,1331,qs),
(-297,1069,ls),
(-328,1020,o),
(-365,1020,q),
(-365,1020,l)
);
},
{
closed = 1;
nodes = (
(-768,1020,o),
(-768,1073,qs),
(-768,1093,o),
(-760,1114,qs),
(-639,1415,ls),
(-633,1431,o),
(-610,1434,q),
(-577,1434,o),
(-516,1391,qs),
(-477,1364,o),
(-477,1343,qs),
(-477,1337,o),
(-481,1331,qs),
(-657,1069,ls),
(-688,1020,o),
(-725,1020,q),
(-725,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 133 5 2 4 3 0 0 118 18 17 1 0 26 25 17 33 18 32 9 8 0 16 1 15 6 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030B;
unicode = 779;
},
{
glyphname = uni0302;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-860,0);
ref = circumflex;
}
);
width = 0;
}
);
note = uni0302;
unicode = 770;
},
{
glyphname = uni030C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-420,1051,ls),
(-436,1020,o),
(-469,1020,qs),
(-500,1020,o),
(-518,1051,qs),
(-748,1462,l),
(-750,1464,o),
(-750,1468,qs),
(-750,1484,o),
(-723,1501,qs),
(-713,1507,o),
(-705,1507,qs),
(-699,1507,o),
(-694,1501,qs),
(-512,1288,ls),
(-479,1249,o),
(-461,1249,o),
(-426,1288,qs),
(-244,1501,ls),
(-240,1505,o),
(-233,1507,q),
(-225,1507,o),
(-213,1499,qs),
(-186,1481,o),
(-188,1468,qs),
(-188,1464,o),
(-190,1462,q),
(-190,1462,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 9 values pushed */
0 0 0 118 25 23 1 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030C;
unicode = 780;
},
{
glyphname = uni0306;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-840,0);
ref = breve;
}
);
width = 0;
}
);
note = uni0306;
unicode = 774;
},
{
glyphname = uni030A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-840,0);
ref = ring;
}
);
width = 0;
}
);
note = uni030A;
unicode = 778;
},
{
glyphname = tildecomb;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-774,0);
ref = tilde;
}
);
width = 0;
}
);
note = tildecomb;
unicode = 771;
},
{
glyphname = uni0304;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-745,0);
ref = macron;
}
);
width = 0;
}
);
note = uni0304;
unicode = 772;
},
{
glyphname = uni0305;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-887,1622,ls),
(-932,1622,o),
(-932,1705,qs),
(-932,1784,o),
(-887,1782,q),
(879,1782,ls),
(926,1782,o),
(926,1705,qs),
(926,1622,o),
(879,1622,q),
(879,1622,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 1 0 6 3 0 10 1 8 3 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0305;
unicode = 773;
},
{
glyphname = uni030F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-561,1091,o),
(-561,1073,qs),
(-561,1020,o),
(-602,1020,qs),
(-637,1020,o),
(-672,1069,qs),
(-842,1319,l),
(-846,1327,o),
(-846,1333,qs),
(-846,1366,o),
(-788,1397,qs),
(-745,1420,o),
(-715,1419,qs),
(-690,1419,o),
(-686,1407,qs),
(-569,1114,ls)
);
},
{
closed = 1;
nodes = (
(-236,1094,o),
(-236,1073,qs),
(-236,1020,o),
(-279,1020,qs),
(-316,1020,o),
(-346,1069,q),
(-516,1319,ls),
(-520,1325,o),
(-520,1333,qs),
(-520,1366,o),
(-463,1397,qs),
(-420,1420,o),
(-389,1419,qs),
(-366,1419,o),
(-360,1407,q),
(-244,1114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
22 13 6 3 1 0 1 76 2 1 0 1 0 133 3 1 1 1 118 39 22 39 18 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030F;
unicode = 783;
},
{
glyphname = uni0311;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-733,1110,o),
(-678,1251,o),
(-537,1325,o),
(-442,1325,qs),
(-344,1325,o),
(-211,1253,o),
(-150,1112,o),
(-154,1018,qs),
(-154,1012,o),
(-213,1012,o),
(-215,1018,q),
(-233,1102,o),
(-362,1190,o),
(-442,1190,qs),
(-532,1190,o),
(-655,1090,o),
(-670,1018,q),
(-670,1012,o),
(-731,1012,o),
(-731,1018,q),
(-731,1018,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 25 values pushed */
20 1 0 73 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 40 37 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0311;
unicode = 785;
},
{
glyphname = uni0312;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-264,1025,o),
(-188,1078,o),
(-188,1124,qs),
(-188,1170,o),
(-238,1227,o),
(-280,1247,qs),
(-289,1251,o),
(-296,1265,o),
(-296,1277,qs),
(-296,1331,o),
(-240,1444,o),
(-191,1493,qs),
(-184,1500,o),
(-196,1514,qs),
(-200,1519,o),
(-208,1525,o),
(-212,1525,qs),
(-217,1525,o),
(-221,1523,qs),
(-287,1495,o),
(-399,1399,o),
(-467,1274,o),
(-467,1208,qs),
(-467,1160,o),
(-426,1075,o),
(-357,1025,o),
(-316,1025,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
17 7 2 0 74 1 1 0 0 118 0 0 0 26 0 25 2 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0312;
unicode = 786;
},
{
glyphname = dotbelowcomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-258,-410,o),
(-328,-451,qs),
(-365,-471,o),
(-410,-471,qs),
(-482,-471,o),
(-526,-426,qs),
(-569,-385,o),
(-571,-313,qs),
(-571,-258,o),
(-532,-215,qs),
(-489,-168,o),
(-410,-168,qs),
(-336,-168,o),
(-291,-225,qs),
(-258,-267,o),
(-258,-326,q),
(-258,-326,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 38 35 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowcomb;
unicode = 803;
},
{
glyphname = uni0325;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-203,-491,o),
(-276,-557,qs),
(-346,-620,o),
(-449,-621,qs),
(-574,-621,o),
(-645,-532,qs),
(-694,-471,o),
(-694,-395,qs),
(-694,-299,o),
(-621,-233,qs),
(-551,-172,o),
(-449,-172,qs),
(-322,-172,o),
(-252,-260,qs),
(-203,-319,o),
(-203,-395,q),
(-203,-395,l)
);
},
{
closed = 1;
nodes = (
(-340,-311,o),
(-389,-272,qs),
(-416,-252,o),
(-449,-252,qs),
(-512,-252,o),
(-543,-319,qs),
(-557,-354,o),
(-557,-395,qs),
(-557,-479,o),
(-506,-516,qs),
(-481,-534,o),
(-449,-535,qs),
(-381,-535,o),
(-352,-467,qs),
(-340,-434,o),
(-340,-395,q),
(-340,-395,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 38 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0325;
unicode = 805;
},
{
glyphname = uni0326;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-227,-584,o),
(-500,-840,o),
(-549,-840,qs),
(-578,-840,o),
(-578,-805,qs),
(-578,-801,o),
(-571,-795,q),
(-434,-625,o),
(-434,-549,qs),
(-434,-528,ls),
(-434,-505,o),
(-500,-485,o),
(-588,-391,o),
(-588,-328,qs),
(-588,-273,o),
(-492,-197,o),
(-428,-197,qs),
(-356,-197,o),
(-227,-320,o),
(-227,-416,q),
(-227,-416,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 44 34 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0326;
unicode = 806;
},
{
glyphname = uni0327;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-313,-410,o),
(-401,-467,qs),
(-477,-514,o),
(-573,-514,qs),
(-698,-514,o),
(-725,-453,qs),
(-731,-441,o),
(-731,-424,qs),
(-731,-381,o),
(-694,-362,qs),
(-682,-356,o),
(-666,-356,qs),
(-635,-356,o),
(-590,-395,qs),
(-547,-430,o),
(-526,-432,q),
(-495,-432,o),
(-479,-408,q),
(-473,-396,o),
(-473,-381,qs),
(-473,-303,o),
(-614,-240,qs),
(-629,-233,l),
(-635,-217,l),
(-487,0,l),
(-379,0,l),
(-457,-106,ls),
(-465,-118,o),
(-467,-125,q),
(-463,-133,ls),
(-459,-139,o),
(-438,-150,qs),
(-313,-215,o),
(-313,-324,q),
(-313,-324,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
10 5 2 2 0 26 14 2 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 2 0 133 0 2 1 1 2 112 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
39 19 24 24 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0327;
unicode = 807;
},
{
glyphname = uni0328;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-676,-158,o),
(-416,41,q),
(-315,41,l),
(-499,-143,o),
(-500,-270,qs),
(-500,-391,o),
(-377,-391,qs),
(-316,-391,o),
(-274,-360,q),
(-254,-366,o),
(-254,-399,q),
(-330,-512,o),
(-471,-512,qs),
(-676,-512,o),
(-676,-328,q),
(-676,-328,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
6 1 1 2 4 1 0 1 2 76 0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 19 36 33 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0328;
unicode = 808;
},
{
glyphname = uni032E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-322,-497,o),
(-611,-497,qs),
(-900,-497,o),
(-900,-190,qs),
(-900,-182,o),
(-869,-182,qs),
(-842,-182,o),
(-838,-190,q),
(-799,-362,o),
(-611,-362,qs),
(-423,-362,o),
(-384,-190,qs),
(-382,-182,o),
(-353,-182,qs),
(-322,-182,o),
(-322,-190,q),
(-322,-190,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
16 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 1 1 0 112 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
34 19 34 18 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni032E;
unicode = 814;
},
{
glyphname = uni032F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-733,-332,o),
(-678,-190,o),
(-537,-117,o),
(-442,-117,qs),
(-344,-117,o),
(-211,-188,o),
(-150,-330,o),
(-154,-424,qs),
(-154,-430,o),
(-213,-430,o),
(-215,-424,q),
(-233,-340,o),
(-362,-252,o),
(-442,-252,qs),
(-532,-252,o),
(-655,-352,o),
(-670,-424,q),
(-670,-430,o),
(-731,-430,o),
(-731,-424,q),
(-731,-424,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 25 values pushed */
20 1 0 73 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 40 37 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni032F;
unicode = 815;
},
{
glyphname = uni0330;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-236,-461,o),
(-344,-461,qs),
(-385,-461,o),
(-471,-430,qs),
(-565,-397,o),
(-598,-397,qs),
(-661,-397,o),
(-711,-457,qs),
(-713,-459,o),
(-719,-459,qs),
(-727,-459,o),
(-756,-430,o),
(-756,-422,qs),
(-756,-420,o),
(-754,-416,q),
(-648,-256,o),
(-537,-256,qs),
(-488,-256,o),
(-403,-289,qs),
(-327,-316,o),
(-293,-315,qs),
(-230,-315,o),
(-170,-254,qs),
(-168,-252,o),
(-166,-252,qs),
(-158,-252,o),
(-141,-264,q),
(-123,-280,o),
(-123,-291,qs),
(-123,-295,o),
(-125,-297,q),
(-125,-297,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
16 1 3 2 1 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 34 41 34 41 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0330;
unicode = 816;
},
{
glyphname = uni0331;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-217,-256,o),
(-217,-309,qs),
(-217,-368,o),
(-248,-369,qs),
(-694,-369,ls),
(-717,-369,o),
(-717,-311,qs),
(-717,-258,o),
(-694,-256,q),
(-244,-256,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 9 0 8 51 3 11 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0331;
unicode = 817;
},
{
glyphname = uni0337;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-813,-94,o),
(-823,-94,qs),
(-835,-94,o),
(-860,-76,qs),
(-893,-49,o),
(-883,-35,qs),
(-199,918,ls),
(-193,926,o),
(-182,926,qs),
(-170,926,o),
(-147,911,qs),
(-106,884,o),
(-123,864,q),
(-809,-88,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 37 35 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0337;
unicode = 823;
},
{
glyphname = uni0338;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1238,-98,o),
(-1249,-100,q),
(-1274,-100,o),
(-1310,-72,qs),
(-1351,-41,o),
(-1351,-25,qs),
(-1351,-19,o),
(-1349,-14,q),
(-339,1427,l),
(-337,1431,o),
(-329,1432,q),
(-298,1432,o),
(-255,1397,qs),
(-222,1370,o),
(-225,1358,q),
(-225,1354,o),
(-227,1352,q),
(-1234,-92,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 24 21 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0338;
unicode = 824;
},
{
glyphname = uni033D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-258,977,l),
(-399,1118,l),
(-541,977,l),
(-590,1026,l),
(-451,1167,l),
(-590,1309,l),
(-541,1360,l),
(-399,1217,l),
(-258,1360,l),
(-209,1309,l),
(-350,1167,l),
(-209,1026,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni033D;
unicode = 829;
},
{
glyphname = uni035B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-311,1071,ls),
(-319,1057,o),
(-342,1057,qs),
(-362,1059,l),
(-378,1065,o),
(-381,1079,q),
(-381,1081,o),
(-379,1083,q),
(-324,1260,l),
(-319,1282,l),
(-319,1292,o),
(-334,1296,q),
(-348,1296,l),
(-621,1296,ls),
(-650,1296,o),
(-657,1323,q),
(-659,1337,l),
(-659,1345,o),
(-653,1354,qs),
(-467,1671,ls),
(-461,1681,o),
(-444,1681,qs),
(-417,1681,o),
(-406,1665,q),
(-403,1657,l),
(-403,1653,l),
(-455,1477,l),
(-459,1454,l),
(-459,1440,o),
(-430,1440,qs),
(-162,1440,ls),
(-131,1440,o),
(-125,1411,qs),
(-123,1393,l),
(-125,1384,o),
(-127,1380,q),
(-127,1380,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 15 values pushed */
10 1 0 1 36 3 2 2 0 28 1 3 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 112 0 3 2 2 3 113 0 0 2 2 0 87 0 0 0 2 96 0 2 0 2 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 1 133 0 3 2 3 134 0 0 2 2 0 87 0 0 0 2 96 0 2 0 2 80 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
26 39 22 52 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni035B;
unicode = 859;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(690,1100,o),
(631,1065,qs),
(602,1049,o),
(565,1049,qs),
(481,1049,o),
(451,1110,qs),
(439,1135,o),
(436,1169,q),
(436,1243,o),
(494,1280,qs),
(527,1300,o),
(565,1300,qs),
(633,1300,o),
(670,1245,qs),
(690,1217,o),
(690,1180,q),
(690,1180,l)
);
},
{
closed = 1;
nodes = (
(342,1100,o),
(281,1065,qs),
(252,1049,o),
(215,1049,qs),
(129,1049,o),
(100,1110,qs),
(88,1135,o),
(86,1169,qs),
(86,1243,o),
(143,1280,qs),
(176,1300,o),
(215,1300,qs),
(283,1300,o),
(319,1245,q),
(342,1215,o),
(342,1180,q),
(342,1180,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 32 values pushed */
8 1 1 0 1 76 2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 38 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,1245,o),
(199,1327,o),
(256,1327,qs),
(313,1327,o),
(397,1245,o),
(397,1188,qs),
(397,1131,o),
(315,1049,o),
(256,1049,qs),
(199,1049,o),
(117,1131,o),
(117,1188,q),
(117,1188,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 522;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(469,1091,o),
(469,1073,qs),
(469,1020,o),
(426,1020,qs),
(391,1020,o),
(358,1069,qs),
(188,1319,l),
(184,1327,o),
(184,1333,qs),
(184,1366,o),
(242,1397,qs),
(285,1420,o),
(315,1419,qs),
(340,1419,o),
(344,1407,qs),
(461,1114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
13 6 2 1 0 1 76 0 0 1 0 133 0 1 1 118 39 18 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 567;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,1020,o),
(143,1073,qs),
(143,1093,o),
(152,1114,qs),
(272,1415,ls),
(278,1431,o),
(299,1434,q),
(332,1434,o),
(395,1391,qs),
(434,1364,o),
(432,1343,qs),
(432,1337,o),
(430,1331,q),
(254,1069,ls),
(223,1020,o),
(186,1020,q),
(186,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 1 0 9 8 0 16 1 15 3 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 567;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,1020,o),
(160,1073,qs),
(160,1093,o),
(168,1114,qs),
(287,1415,ls),
(293,1431,o),
(315,1434,q),
(348,1434,o),
(410,1391,qs),
(449,1364,o),
(449,1343,qs),
(449,1337,o),
(444,1331,q),
(268,1069,l),
(238,1020,o),
(201,1020,q),
(201,1020,l)
);
},
{
closed = 1;
nodes = (
(498,1020,o),
(500,1073,qs),
(500,1093,o),
(508,1114,qs),
(627,1415,ls),
(633,1431,o),
(655,1434,q),
(688,1434,o),
(750,1391,qs),
(789,1364,o),
(788,1343,qs),
(788,1337,o),
(784,1331,qs),
(608,1069,l),
(578,1020,o),
(541,1020,q),
(541,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 133 5 2 4 3 0 0 118 18 17 1 0 26 25 17 33 18 32 9 8 0 16 1 15 6 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 913;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(670,1059,o),
(670,1055,qs),
(670,1043,o),
(651,1030,qs),
(633,1020,o),
(623,1020,qs),
(617,1020,o),
(614,1024,qs),
(432,1237,ls),
(407,1266,o),
(371,1266,o),
(346,1237,qs),
(164,1024,ls),
(160,1020,o),
(154,1020,qs),
(144,1020,o),
(127,1030,qs),
(109,1042,o),
(109,1055,qs),
(109,1059,o),
(111,1063,qs),
(340,1475,ls),
(356,1506,o),
(387,1505,qs),
(422,1505,o),
(438,1475,qs),
(668,1063,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 28 33 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(438,1051,ls),
(422,1020,o),
(387,1020,qs),
(356,1020,o),
(340,1051,qs),
(111,1462,l),
(109,1464,o),
(109,1468,qs),
(109,1484,o),
(137,1501,qs),
(147,1507,o),
(160,1507,o),
(164,1501,q),
(346,1288,ls),
(379,1249,o),
(399,1249,o),
(432,1288,qs),
(614,1501,ls),
(618,1505,o),
(625,1507,q),
(633,1507,o),
(643,1499,qs),
(670,1481,o),
(670,1468,qs),
(670,1464,o),
(668,1462,q),
(668,1462,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 25 values pushed */
6 1 0 74 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 43 26 2 11 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(678,1020,o),
(389,1020,qs),
(100,1020,o),
(100,1327,qs),
(100,1335,o),
(131,1335,qs),
(158,1335,o),
(162,1327,q),
(201,1155,o),
(389,1155,qs),
(577,1155,o),
(616,1327,qs),
(618,1335,o),
(647,1335,qs),
(678,1335,o),
(678,1327,q),
(678,1327,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
16 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 1 1 0 112 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
34 19 34 18 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,1132,o),
(532,1061,qs),
(475,1020,o),
(389,1020,qs),
(262,1020,o),
(193,1108,qs),
(144,1167,o),
(143,1245,qs),
(143,1341,o),
(215,1407,qs),
(285,1468,o),
(389,1468,qs),
(516,1468,o),
(588,1380,qs),
(635,1321,o),
(635,1245,q),
(635,1245,l)
);
},
{
closed = 1;
nodes = (
(498,1323,o),
(444,1368,qs),
(421,1386,o),
(389,1389,q),
(326,1389,o),
(293,1313,qs),
(281,1284,o),
(281,1245,qs),
(281,1159,o),
(334,1122,qs),
(359,1106,o),
(389,1106,qs),
(457,1106,o),
(485,1174,qs),
(498,1206,o),
(498,1245,q),
(498,1245,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 22 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(493,1048,o),
(385,1049,qs),
(344,1049,o),
(258,1079,qs),
(164,1112,o),
(131,1112,qs),
(68,1112,o),
(20,1053,qs),
(18,1051,o),
(12,1051,qs),
(4,1051,o),
(-25,1079,o),
(-27,1087,q),
(-27,1089,o),
(-25,1094,q),
(81,1254,o),
(195,1253,qs),
(244,1253,o),
(328,1221,qs),
(404,1194,o),
(436,1194,qs),
(499,1194,o),
(559,1255,qs),
(561,1257,o),
(565,1257,qs),
(573,1257,o),
(590,1245,q),
(608,1229,o),
(606,1219,q),
(606,1214,o),
(604,1212,q),
(604,1212,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
16 1 3 2 1 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 34 41 34 41 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 579;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,1189,o),
(555,1138,qs),
(555,1079,o),
(524,1078,qs),
(78,1078,ls),
(55,1078,o),
(55,1136,qs),
(55,1189,o),
(78,1189,qs),
(528,1189,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 6 3 0 9 1 8 3 11 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 606;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,-410,o),
(530,-467,qs),
(456,-514,o),
(358,-514,qs),
(233,-514,o),
(207,-453,qs),
(201,-441,o),
(201,-424,qs),
(201,-381,o),
(238,-362,qs),
(250,-356,o),
(266,-356,qs),
(297,-356,o),
(342,-395,qs),
(385,-432,o),
(406,-432,qs),
(459,-432,o),
(459,-381,qs),
(459,-303,o),
(317,-240,qs),
(297,-232,o),
(297,-221,qs),
(297,-217,o),
(303,-209,qs),
(444,0,l),
(553,0,l),
(475,-106,ls),
(467,-118,o),
(467,-125,qs),
(467,-135,o),
(494,-150,qs),
(618,-215,o),
(618,-324,q),
(618,-324,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
25 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 2 0 133 0 2 1 1 2 112 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
39 18 40 23 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,-143,o),
(408,41,q),
(514,41,l),
(354,-127,o),
(354,-246,qs),
(354,-367,o),
(477,-367,qs),
(538,-367,o),
(580,-336,q),
(600,-342,o),
(600,-375,q),
(524,-488,o),
(383,-487,qs),
(178,-487,o),
(178,-303,q),
(178,-303,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
6 1 1 2 4 1 0 1 2 76 0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 19 36 33 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 776;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = uni1DCE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-176,1034,o),
(-405,850,q),
(-512,850,l),
(-352,1018,o),
(-352,1135,qs),
(-352,1256,o),
(-475,1255,qs),
(-536,1255,o),
(-577,1225,q),
(-597,1231,o),
(-598,1264,q),
(-522,1377,o),
(-381,1376,qs),
(-176,1378,o),
(-176,1194,q),
(-176,1194,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
4 1 1 0 6 1 2 1 2 76 0 2 1 2 134 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 19 36 33 3 11 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1DCE;
unicode = 7630;
},
{
glyphname = caron.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(653,1301,o),
(559,1161,q),
(520,1108,o),
(494,1108,qs),
(488,1108,o),
(479,1110,q),
(463,1118,o),
(463,1143,qs),
(463,1163,o),
(475,1194,qs),
(500,1253,o),
(500,1386,o),
(475,1460,q),
(473,1464,o),
(473,1468,qs),
(473,1491,o),
(528,1491,qs),
(544,1491,o),
(567,1489,qs),
(653,1481,o),
(653,1444,q),
(653,1444,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
6 1 1 0 1 76 0 1 1 0 97 0 0 0 70 1 78 58 35 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 825;
}
);
note = caron.alt;
},
{
glyphname = uni0308.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-269,1552,o),
(-328,1518,qs),
(-357,1500,o),
(-394,1499,qs),
(-478,1499,o),
(-511,1565,qs),
(-523,1590,o),
(-523,1622,qs),
(-523,1696,o),
(-465,1733,qs),
(-432,1753,o),
(-394,1751,qs),
(-326,1751,o),
(-289,1698,qs),
(-269,1669,o),
(-269,1632,q),
(-269,1632,l)
);
},
{
closed = 1;
nodes = (
(-699,1552,o),
(-758,1518,qs),
(-787,1500,o),
(-824,1499,qs),
(-908,1499,o),
(-941,1565,qs),
(-953,1590,o),
(-953,1622,qs),
(-953,1696,o),
(-896,1733,qs),
(-863,1753,o),
(-824,1751,qs),
(-756,1751,o),
(-719,1698,qs),
(-699,1667,o),
(-699,1632,q),
(-699,1632,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 38 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.case;
},
{
glyphname = gravecomb.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-276,1565,o),
(-255,1530,o),
(-255,1513,qs),
(-255,1495,o),
(-286,1475,o),
(-306,1475,qs),
(-329,1475,o),
(-360,1489,qs),
(-634,1614,ls),
(-642,1618,o),
(-653,1634,o),
(-653,1647,qs),
(-653,1672,o),
(-610,1745,o),
(-569,1774,o),
(-558,1774,qs),
(-552,1774,o),
(-546,1769,qs),
(-294,1579,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
6 1 0 74 0 0 0 118 43 1 11 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb.case;
},
{
glyphname = acutecomb.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-394,1639,o),
(-400,1626,o),
(-404,1624,qs),
(-693,1489,ls),
(-724,1475,o),
(-744,1475,qs),
(-762,1475,o),
(-795,1497,o),
(-795,1516,qs),
(-795,1530,o),
(-773,1567,o),
(-756,1579,qs),
(-496,1778,l),
(-490,1784,o),
(-482,1784,qs),
(-474,1784,o),
(-449,1769,o),
(-420,1722,o),
(-394,1665,o),
(-394,1649,q),
(-394,1649,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 45 1 11 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb.case;
},
{
glyphname = uni030B.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-152,1639,o),
(-160,1626,o),
(-164,1624,qs),
(-451,1489,ls),
(-482,1475,o),
(-504,1475,qs),
(-522,1475,o),
(-556,1497,o),
(-556,1516,qs),
(-556,1530,o),
(-533,1567,o),
(-517,1579,qs),
(-257,1778,l),
(-251,1784,o),
(-242,1784,qs),
(-234,1784,o),
(-209,1769,o),
(-181,1722,o),
(-152,1665,o),
(-152,1649,q),
(-152,1649,l)
);
},
{
closed = 1;
nodes = (
(-562,1639,o),
(-568,1626,o),
(-574,1624,q),
(-861,1489,ls),
(-892,1475,o),
(-914,1475,qs),
(-932,1475,o),
(-963,1497,o),
(-963,1516,qs),
(-963,1530,o),
(-941,1567,o),
(-924,1579,qs),
(-664,1778,l),
(-658,1784,o),
(-650,1784,qs),
(-642,1784,o),
(-617,1769,o),
(-588,1722,o),
(-562,1665,o),
(-562,1649,q),
(-562,1649,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
1 1 0 0 118 36 34 45 2 11 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030B.case;
},
{
glyphname = uni0302.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-306,1520,o),
(-306,1513,qs),
(-306,1505,o),
(-314,1493,qs),
(-324,1475,o),
(-334,1475,qs),
(-336,1475,l),
(-605,1599,ls),
(-623,1607,o),
(-660,1608,o),
(-678,1599,qs),
(-945,1475,l),
(-947,1475,l),
(-957,1479,o),
(-969,1493,q),
(-977,1507,o),
(-980,1516,q),
(-980,1520,o),
(-975,1524,qs),
(-693,1776,ls),
(-666,1799,o),
(-617,1798,o),
(-592,1776,qs),
(-310,1524,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
16 1 1 73 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 27 17 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302.case;
},
{
glyphname = uni030C.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-979,1751,o),
(-980,1757,qs),
(-980,1765,o),
(-971,1780,qs),
(-961,1798,o),
(-951,1798,qs),
(-949,1798,o),
(-949,1796,q),
(-681,1673,ls),
(-663,1665,o),
(-623,1663,o),
(-607,1673,q),
(-341,1796,l),
(-336,1798,l),
(-326,1794,o),
(-316,1778,qs),
(-308,1764,o),
(-306,1755,q),
(-306,1751,o),
(-310,1747,qs),
(-592,1497,ls),
(-619,1474,o),
(-668,1475,o),
(-693,1497,qs),
(-975,1747,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
16 1 1 74 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 27 17 2 11 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.case;
},
{
glyphname = uni0304.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-307,1661,o),
(-312,1554,o),
(-338,1554,qs),
(-928,1554,ls),
(-953,1554,o),
(-955,1661,o),
(-928,1661,qs),
(-334,1661,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 5 2 0 7 1 6 3 11 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304.case;
},
{
glyphname = uni030F.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-122,1565,o),
(-101,1530,o),
(-101,1513,qs),
(-101,1495,o),
(-130,1475,o),
(-150,1475,qs),
(-173,1475,o),
(-203,1489,qs),
(-478,1614,ls),
(-486,1618,o),
(-496,1634,o),
(-496,1647,qs),
(-496,1672,o),
(-453,1745,o),
(-412,1774,o),
(-402,1774,qs),
(-396,1774,o),
(-390,1769,qs),
(-140,1579,ls)
);
},
{
closed = 1;
nodes = (
(-550,1565,o),
(-529,1530,o),
(-529,1513,qs),
(-529,1495,o),
(-558,1475,o),
(-578,1475,qs),
(-601,1475,o),
(-631,1489,qs),
(-906,1614,ls),
(-914,1618,o),
(-924,1634,o),
(-924,1647,qs),
(-924,1672,o),
(-881,1745,o),
(-840,1774,o),
(-830,1774,qs),
(-824,1774,o),
(-818,1769,qs),
(-568,1579,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 6 2 0 74 1 1 0 0 118 32 30 43 2 11 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030F.case;
},
{
glyphname = uni0308.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-141,1120,o),
(-203,1087,qs),
(-232,1071,o),
(-266,1069,qs),
(-350,1069,o),
(-383,1132,qs),
(-395,1157,o),
(-395,1192,qs),
(-395,1266,o),
(-340,1302,qs),
(-307,1322,o),
(-266,1323,qs),
(-198,1323,o),
(-164,1268,q),
(-141,1237,o),
(-141,1200,q),
(-141,1200,l)
);
},
{
closed = 1;
nodes = (
(-492,1120,o),
(-553,1087,qs),
(-582,1071,o),
(-616,1069,qs),
(-702,1069,o),
(-733,1132,qs),
(-745,1157,o),
(-745,1192,qs),
(-745,1266,o),
(-688,1302,qs),
(-655,1322,o),
(-616,1323,qs),
(-548,1323,o),
(-512,1268,qs),
(-492,1235,o),
(-492,1200,q),
(-492,1200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 38 39 38 35 4 10 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.sc;
},
{
glyphname = gravecomb.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-125,1032,o),
(-160,1030,qs),
(-185,1030,o),
(-213,1057,qs),
(-395,1221,ls),
(-403,1229,o),
(-403,1262,o),
(-373,1290,qs),
(-332,1327,o),
(-295,1325,o),
(-291,1319,qs),
(-141,1112,ls),
(-125,1090,o),
(-125,1065,q),
(-125,1065,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 43 1 10 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb.sc;
},
{
glyphname = acutecomb.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-449,1020,o),
(-446,1055,q),
(-446,1082,o),
(-430,1104,qs),
(-272,1323,ls),
(-266,1331,o),
(-258,1333,q),
(-227,1333,o),
(-156,1253,o),
(-156,1243,qs),
(-156,1229,o),
(-162,1225,q),
(-356,1047,ls),
(-387,1020,o),
(-412,1020,q),
(-412,1020,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
13 5 2 0 1 1 76 0 1 0 1 133 2 1 0 0 118 1 0 8 7 0 15 1 14 3 10 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb.sc;
},
{
glyphname = uni0302.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-164,1057,o),
(-166,1051,q),
(-166,1047,o),
(-195,1030,o),
(-201,1030,qs),
(-207,1030,o),
(-211,1032,q),
(-358,1178,ls),
(-378,1196,o),
(-391,1196,qs),
(-405,1196,o),
(-426,1178,q),
(-575,1032,ls),
(-577,1030,o),
(-584,1030,qs),
(-590,1030,o),
(-618,1044,o),
(-618,1051,qs),
(-618,1059,l),
(-432,1339,ls),
(-420,1359,o),
(-391,1360,qs),
(-364,1360,o),
(-352,1339,q),
(-166,1059,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
17 5 2 1 73 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 42 33 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302.sc;
},
{
glyphname = uni030C.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-313,1067,ls),
(-329,1049,o),
(-358,1048,qs),
(-385,1048,o),
(-401,1067,qs),
(-608,1313,l),
(-610,1313,o),
(-610,1315,qs),
(-610,1321,o),
(-582,1343,o),
(-573,1343,qs),
(-571,1343,o),
(-569,1341,qs),
(-397,1208,ls),
(-366,1185,o),
(-358,1186,qs),
(-350,1186,o),
(-319,1208,qs),
(-150,1339,l),
(-146,1341,o),
(-141,1341,qs),
(-133,1341,o),
(-123,1333,qs),
(-107,1323,o),
(-106,1315,q),
(-107,1313,o),
(-109,1313,q),
(-109,1313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
27 14 6 3 0 74 0 0 0 118 25 23 1 10 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.sc;
},
{
glyphname = tildecomb.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-170,1114,o),
(-268,1114,qs),
(-305,1114,o),
(-383,1145,qs),
(-469,1178,o),
(-498,1177,qs),
(-555,1177,o),
(-598,1120,qs),
(-600,1118,o),
(-604,1116,q),
(-612,1116,o),
(-625,1130,qs),
(-639,1144,o),
(-639,1155,qs),
(-639,1157,o),
(-637,1159,q),
(-543,1319,o),
(-440,1319,qs),
(-395,1319,o),
(-322,1286,qs),
(-254,1259,o),
(-221,1259,qs),
(-164,1259,o),
(-113,1321,qs),
(-111,1323,o),
(-106,1325,q),
(-100,1325,o),
(-86,1310,qs),
(-70,1294,o),
(-70,1284,qs),
(-70,1280,o),
(-72,1278,q),
(-72,1278,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
16 1 3 2 1 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 34 42 34 41 4 10 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = tildecomb.sc;
},
{
glyphname = uni0363;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-226,936,o),
(-297,936,qs),
(-348,936,o),
(-385,981,qs),
(-393,991,o),
(-397,991,qs),
(-403,991,o),
(-414,981,qs),
(-459,936,o),
(-522,938,qs),
(-590,938,o),
(-621,983,q),
(-635,1008,o),
(-635,1038,qs),
(-635,1106,o),
(-518,1165,qs),
(-434,1206,ls),
(-414,1216,o),
(-416,1233,q),
(-416,1335,ls),
(-416,1376,o),
(-473,1376,qs),
(-516,1376,o),
(-537,1348,q),
(-541,1340,o),
(-543,1307,qs),
(-543,1289,o),
(-545,1278,q),
(-559,1229,o),
(-596,1229,qs),
(-645,1229,o),
(-645,1272,qs),
(-645,1309,o),
(-614,1352,qs),
(-598,1377,o),
(-580,1386,q),
(-514,1427,o),
(-434,1427,qs),
(-371,1427,o),
(-326,1399,qs),
(-291,1374,o),
(-291,1339,qs),
(-291,1059,ls),
(-291,998,o),
(-254,997,q),
(-238,995,o),
(-213,1018,qs),
(-209,1022,o),
(-199,1012,qs),
(-191,1003,o),
(-193,997,q),
(-193,997,l)
);
},
{
closed = 1;
nodes = (
(-416,1155,ls),
(-416,1167,o),
(-424,1169,q),
(-428,1169,o),
(-430,1167,q),
(-508,1128,o),
(-508,997,o),
(-469,997,qs),
(-416,1000,o),
(-416,1057,q),
(-416,1057,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
32 23 2 2 3 61 57 2 0 2 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 6 1 0 4 4 0 89 6 1 0 0 4 97 5 1 4 0 4 81 35 38 42 38 38 37 37 7 11 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0363;
unicode = 867;
},
{
glyphname = uni0368;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-286,1290,o),
(-299,1307,q),
(-319,1343,l),
(-342,1376,o),
(-381,1376,qs),
(-424,1376,o),
(-459,1325,qs),
(-496,1268,o),
(-496,1190,qs),
(-496,1116,o),
(-446,1065,qs),
(-403,1020,o),
(-346,1020,qs),
(-287,1020,o),
(-244,1049,qs),
(-236,1055,o),
(-219,1032,qs),
(-205,1009,o),
(-213,1004,qs),
(-258,975,ls),
(-321,938,o),
(-406,938,qs),
(-484,938,o),
(-545,991,qs),
(-623,1059,o),
(-621,1163,qs),
(-621,1255,o),
(-561,1331,qs),
(-487,1427,o),
(-371,1427,qs),
(-297,1427,o),
(-248,1405,qs),
(-228,1395,o),
(-217,1378,qs),
(-213,1370,o),
(-213,1358,qs),
(-213,1329,o),
(-231,1311,qs),
(-250,1290,o),
(-266,1290,q),
(-266,1290,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 50 values pushed */
4 1 4 3 21 1 1 2 2 76 0 4 3 2 3 4 2 128 0 0 0 3 4 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 19 38 39 38 41 5 11 27 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0368;
unicode = 872;
},
{
glyphname = uni0369;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-121,965,o),
(-203,948,qs),
(-258,936,o),
(-274,932,q),
(-281,932,ls),
(-287,932,o),
(-287,956,qs),
(-287,971,ls),
(-287,983,o),
(-299,983,o),
(-307,977,qs),
(-358,938,o),
(-416,938,qs),
(-549,938,o),
(-610,1032,qs),
(-649,1093,o),
(-649,1180,qs),
(-649,1276,o),
(-582,1346,qs),
(-500,1428,o),
(-367,1427,qs),
(-340,1427,o),
(-322,1425,qs),
(-308,1425,o),
(-307,1440,qs),
(-307,1530,ls),
(-307,1598,o),
(-358,1597,qs),
(-366,1597,o),
(-367,1638,o),
(-358,1638,qs),
(-329,1638,o),
(-256,1675,qs),
(-219,1693,o),
(-209,1702,qs),
(-203,1708,o),
(-195,1708,qs),
(-177,1708,o),
(-178,1690,qs),
(-180,1633,o),
(-180,1597,qs),
(-180,1092,ls),
(-180,1043,o),
(-176,1026,q),
(-168,1003,o),
(-147,1004,qs),
(-141,1004,o),
(-119,1010,o),
(-111,969,o),
(-117,967,q),
(-117,967,l)
);
},
{
closed = 1;
nodes = (
(-307,1331,ls),
(-307,1356,o),
(-309,1360,qs),
(-311,1366,o),
(-319,1370,qs),
(-346,1386,o),
(-381,1386,qs),
(-455,1386,o),
(-487,1307,qs),
(-507,1260,o),
(-510,1194,qs),
(-510,1088,o),
(-467,1028,qs),
(-434,985,o),
(-340,983,o),
(-315,1012,qs),
(-307,1022,o),
(-307,1028,q),
(-307,1028,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 72 values pushed */
25 1 3 2 27 1 6 3 69 66 2 0 6 3 76 13 11 2 1 74 0 0 6 5 6 0 5 128 0 1 0 2 3 1 2 105 0 3 0 6 0 3 6 105 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 63 61 55 54 38 37 34 29 35 7 11 27 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0369;
unicode = 873;
},
{
glyphname = uni0364;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-190,1243,o),
(-242,1245,qs),
(-453,1245,ls),
(-473,1245,o),
(-473,1231,qs),
(-473,1102,o),
(-412,1047,qs),
(-377,1018,o),
(-328,1018,qs),
(-285,1018,o),
(-236,1049,qs),
(-226,1055,o),
(-209,1034,qs),
(-195,1014,o),
(-201,1008,qs),
(-228,981,o),
(-274,961,qs),
(-321,938,o),
(-385,938,qs),
(-459,938,o),
(-518,997,qs),
(-598,1077,o),
(-598,1190,qs),
(-598,1280,o),
(-541,1350,qs),
(-473,1428,o),
(-383,1427,qs),
(-287,1427,o),
(-227,1364,q),
(-190,1313,o),
(-190,1286,q),
(-190,1286,l)
);
},
{
closed = 1;
nodes = (
(-467,1295,o),
(-446,1294,qs),
(-334,1294,ls),
(-314,1294,o),
(-313,1309,qs),
(-313,1346,o),
(-344,1370,qs),
(-362,1384,o),
(-381,1384,qs),
(-418,1384,o),
(-444,1362,qs),
(-467,1340,o),
(-467,1309,q),
(-467,1309,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 55 values pushed */
40 1 5 4 26 1 2 3 16 1 1 2 3 76 0 0 0 4 5 0 4 105 0 5 0 3 2 5 3 103 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 38 21 37 40 38 35 6 11 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0364;
unicode = 868;
},
{
glyphname = uni1DD3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-166,1055,o),
(-246,1040,q),
(-262,1040,ls),
(-305,1040,o),
(-309,1083,q),
(-309,1114,l),
(-305,1147,o),
(-285,1186,q),
(-291,1188,l),
(-369,1094,o),
(-453,1055,qs),
(-486,1041,o),
(-508,1040,qs),
(-569,1040,o),
(-594,1100,qs),
(-604,1125,o),
(-604,1155,qs),
(-604,1278,o),
(-494,1421,q),
(-492,1425,o),
(-481,1438,o),
(-469,1440,q),
(-446,1436,l),
(-413,1424,o),
(-406,1405,q),
(-406,1397,l),
(-406,1395,l),
(-441,1342,o),
(-463,1245,q),
(-471,1192,l),
(-471,1176,ls),
(-471,1141,o),
(-455,1126,qs),
(-451,1122,o),
(-442,1122,qs),
(-399,1122,o),
(-336,1208,qs),
(-297,1259,o),
(-268,1321,qs),
(-260,1339,o),
(-201,1341,qs),
(-152,1341,o),
(-143,1327,q),
(-143,1321,l),
(-190,1163,l),
(-193,1151,l),
(-191,1143,o),
(-178,1141,q),
(-153,1141,o),
(-121,1176,qs),
(-117,1180,l),
(-111,1182,l),
(-97,1180,o),
(-86,1161,q),
(-84,1153,l),
(-84,1151,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 58 values pushed */
46 11 2 0 2 24 9 2 1 0 50 49 2 4 3 3 76 33 28 2 2 74 0 2 0 2 133 0 0 1 0 133 0 1 3 1 133 0 3 4 3 133 5 1 4 4 118 52 51 43 41 20 38 18 34 6 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1DD3;
unicode = 7635;
},
{
glyphname = uni036A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-621,1520,ls),
(-621,1590,o),
(-672,1587,qs),
(-680,1587,o),
(-680,1628,o),
(-672,1628,qs),
(-643,1628,o),
(-532,1683,o),
(-522,1694,qs),
(-516,1700,o),
(-506,1700,qs),
(-490,1700,o),
(-492,1683,q),
(-494,1609,o),
(-494,1587,qs),
(-494,1403,ls),
(-494,1391,o),
(-487,1389,q),
(-483,1389,o),
(-475,1395,qs),
(-430,1428,o),
(-360,1427,qs),
(-262,1427,o),
(-213,1354,qs),
(-182,1309,o),
(-180,1255,qs),
(-180,1028,ls),
(-180,985,o),
(-117,987,qs),
(-109,987,o),
(-109,946,o),
(-117,946,qs),
(-172,950,o),
(-246,950,qs),
(-320,950,o),
(-365,946,qs),
(-373,946,o),
(-373,987,o),
(-365,987,qs),
(-308,987,o),
(-307,1024,qs),
(-307,1255,ls),
(-307,1296,o),
(-332,1331,qs),
(-359,1368,o),
(-399,1368,qs),
(-448,1368,o),
(-477,1333,qs),
(-493,1315,o),
(-494,1294,qs),
(-494,1028,ls),
(-494,985,o),
(-438,987,qs),
(-430,987,o),
(-428,946,o),
(-438,946,qs),
(-483,950,o),
(-559,950,qs),
(-635,950,o),
(-682,946,qs),
(-690,946,o),
(-690,987,o),
(-682,987,qs),
(-621,985,o),
(-621,1024,q),
(-621,1024,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 63 values pushed */
54 52 2 8 74 33 9 2 1 73 0 8 0 9 7 8 9 105 0 7 0 3 0 7 3 105 6 4 2 3 0 1 1 0 89 6 4 2 3 0 0 1 97 5 1 1 0 1 81 63 61 30 37 35 36 21 37 35 36 17 10 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni036A;
unicode = 874;
},
{
glyphname = uni0365;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-385,1677,o),
(-342,1632,o),
(-342,1571,o),
(-385,1526,o),
(-449,1526,o),
(-494,1571,o),
(-494,1632,o),
(-449,1677,o)
);
},
{
closed = 1;
nodes = (
(-469,1255,ls),
(-469,1325,o),
(-518,1325,qs),
(-526,1325,o),
(-526,1366,o),
(-518,1366,qs),
(-491,1366,o),
(-381,1419,o),
(-371,1430,qs),
(-365,1436,o),
(-352,1436,qs),
(-338,1436,o),
(-340,1421,q),
(-342,1372,o),
(-342,1325,qs),
(-342,1028,ls),
(-342,985,o),
(-285,987,qs),
(-277,987,o),
(-276,946,o),
(-285,946,qs),
(-330,950,o),
(-406,950,qs),
(-480,950,o),
(-526,946,qs),
(-534,946,o),
(-535,987,o),
(-526,987,qs),
(-469,985,o),
(-469,1028,q),
(-469,1028,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 55 values pushed */
27 25 2 5 0 1 76 17 1 3 73 0 1 0 0 5 1 0 105 0 5 0 6 2 5 6 105 4 1 2 3 3 2 89 4 1 2 2 3 97 0 3 2 3 81 34 26 35 36 18 19 18 7 11 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0365;
unicode = 869;
},
{
glyphname = uni036B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-774,1253,ls),
(-774,1325,o),
(-823,1325,qs),
(-831,1325,o),
(-834,1366,o),
(-823,1366,qs),
(-796,1366,o),
(-723,1403,qs),
(-688,1419,o),
(-676,1430,qs),
(-670,1436,o),
(-659,1436,qs),
(-645,1436,o),
(-645,1421,qs),
(-647,1382,ls),
(-647,1372,o),
(-639,1372,o),
(-633,1378,qs),
(-588,1427,o),
(-512,1427,qs),
(-434,1427,o),
(-393,1360,qs),
(-389,1352,o),
(-385,1350,q),
(-379,1350,o),
(-371,1360,q),
(-328,1405,o),
(-268,1421,qs),
(-243,1427,o),
(-221,1427,qs),
(-151,1427,o),
(-109,1391,qs),
(-50,1338,o),
(-49,1253,qs),
(-49,1026,ls),
(-49,985,o),
(8,987,qs),
(16,987,o),
(18,946,o),
(8,946,qs),
(-35,950,o),
(-111,950,qs),
(-187,950,o),
(-231,946,qs),
(-239,946,o),
(-240,987,o),
(-231,987,qs),
(-176,987,o),
(-176,1024,qs),
(-176,1286,ls),
(-176,1370,o),
(-258,1368,qs),
(-297,1368,o),
(-324,1335,qs),
(-349,1304,o),
(-348,1264,qs),
(-348,1026,ls),
(-348,985,o),
(-293,987,qs),
(-285,987,o),
(-283,946,o),
(-293,946,qs),
(-336,950,o),
(-410,950,qs),
(-484,950,o),
(-530,946,qs),
(-538,946,o),
(-539,987,o),
(-530,987,qs),
(-475,987,o),
(-475,1024,qs),
(-475,1262,ls),
(-475,1336,o),
(-500,1358,qs),
(-514,1370,o),
(-553,1368,qs),
(-582,1368,o),
(-606,1352,q),
(-647,1319,o),
(-647,1282,qs),
(-647,1024,ls),
(-647,987,o),
(-594,987,qs),
(-586,987,o),
(-586,946,o),
(-594,946,qs),
(-641,950,o),
(-715,950,qs),
(-791,950,o),
(-836,946,qs),
(-844,946,o),
(-844,987,o),
(-836,987,qs),
(-774,985,o),
(-774,1024,q),
(-774,1024,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 90 values pushed */
81 1 3 11 71 1 14 13 2 76 83 1 11 74 55 33 9 3 1 73 12 1 11 7 1 3 13 11 3 105 0 13 0 14 0 13 14 105 10 8 6 4 2 5 0 1 1 0 89 10 8 6 4 2 5 0 0 1 97 9 5 2 1 0 1 81 93 91 89 88 76 74 66 64 59 57 54 52 19 37 35 36 21 37 35 36 17 15 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni036B;
unicode = 875;
},
{
glyphname = uni0366;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-158,1069,o),
(-225,1001,qs),
(-291,935,o),
(-406,938,qs),
(-508,938,o),
(-578,1004,qs),
(-656,1076,o),
(-653,1184,qs),
(-653,1278,o),
(-594,1346,qs),
(-522,1428,o),
(-406,1427,qs),
(-285,1427,o),
(-213,1341,qs),
(-158,1274,o),
(-158,1184,q),
(-158,1184,l)
);
},
{
closed = 1;
nodes = (
(-297,1282,o),
(-336,1341,qs),
(-365,1384,o),
(-406,1386,qs),
(-451,1386,o),
(-481,1329,qs),
(-514,1270,o),
(-514,1182,qs),
(-514,1080,o),
(-473,1024,qs),
(-444,985,o),
(-406,983,qs),
(-355,983,o),
(-324,1047,qs),
(-297,1102,o),
(-297,1182,q),
(-297,1182,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 38 39 38 35 4 11 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0366;
unicode = 870;
},
{
glyphname = uni036C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-184,1333,o),
(-219,1298,o),
(-242,1298,qs),
(-269,1298,o),
(-307,1339,o),
(-324,1339,qs),
(-347,1339,o),
(-385,1278,o),
(-385,1237,qs),
(-385,1028,ls),
(-385,985,o),
(-328,987,qs),
(-320,987,o),
(-319,946,o),
(-328,946,qs),
(-373,950,o),
(-446,950,qs),
(-520,950,o),
(-567,946,qs),
(-575,946,o),
(-575,987,o),
(-567,987,qs),
(-510,987,o),
(-510,1028,qs),
(-510,1251,ls),
(-510,1325,o),
(-559,1325,qs),
(-567,1325,o),
(-569,1366,o),
(-559,1366,qs),
(-530,1366,o),
(-424,1421,o),
(-412,1430,q),
(-406,1436,o),
(-395,1436,qs),
(-383,1436,o),
(-381,1425,q),
(-385,1382,l),
(-385,1370,o),
(-371,1370,o),
(-356,1384,q),
(-319,1427,o),
(-264,1427,qs),
(-227,1427,o),
(-184,1391,o),
(-184,1364,q),
(-184,1364,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 15 values pushed */
9 8 2 1 0 1 76 11 1 0 74 31 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 6 1 2 7 1 2 105 0 0 0 7 3 0 7 105 5 1 3 4 4 3 89 5 1 3 3 4 97 0 4 3 4 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 1 2 1 6 2 128 0 1 0 2 7 1 2 105 0 0 0 7 3 0 7 105 5 1 3 4 4 3 89 5 1 3 3 4 97 0 4 3 4 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 6 1 2 7 1 2 105 0 0 0 7 3 0 7 105 5 1 3 4 4 3 89 5 1 3 3 4 97 0 4 3 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 1 2 1 6 2 128 0 1 0 2 7 1 2 105 0 0 0 7 3 0 7 105 5 1 3 4 4 3 89 5 1 3 3 4 97 0 4 3 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 20 35 36 19 34 27 34 8 11 30 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni036C;
unicode = 876;
},
{
glyphname = uni036D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-532,1343,ls),
(-532,1359,o),
(-551,1360,qs),
(-582,1360,ls),
(-590,1360,o),
(-590,1401,o),
(-582,1401,qs),
(-547,1401,o),
(-469,1464,o),
(-457,1501,qs),
(-455,1507,o),
(-434,1503,qs),
(-409,1497,o),
(-406,1487,q),
(-406,1436,ls),
(-406,1420,o),
(-389,1417,q),
(-270,1417,ls),
(-262,1417,o),
(-262,1360,o),
(-270,1360,qs),
(-389,1360,ls),
(-405,1360,o),
(-406,1343,qs),
(-406,1114,ls),
(-406,1051,o),
(-375,1010,o),
(-340,1010,qs),
(-311,1010,o),
(-270,1036,qs),
(-264,1040,o),
(-236,1006,o),
(-242,999,qs),
(-301,936,o),
(-391,938,qs),
(-442,938,o),
(-504,973,o),
(-532,1030,o),
(-532,1077,q),
(-532,1077,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
15 1 1 2 6 1 0 1 2 76 25 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 1 3 5 1 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 4 2 3 89 0 4 5 1 2 1 4 2 105 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 1 3 5 1 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 4 2 3 89 0 4 5 1 2 1 4 2 105 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
50 25 34 21 37 35 6 11 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni036D;
unicode = 877;
},
{
glyphname = uni0367;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-149,967,o),
(-205,956,qs),
(-231,950,ls),
(-262,944,o),
(-295,934,qs),
(-301,932,o),
(-307,932,qs),
(-315,932,o),
(-315,956,qs),
(-315,981,ls),
(-315,993,o),
(-330,993,o),
(-338,985,qs),
(-387,936,o),
(-473,938,qs),
(-543,938,o),
(-565,956,qs),
(-647,1022,o),
(-647,1120,qs),
(-647,1311,ls),
(-647,1368,o),
(-692,1366,qs),
(-700,1366,o),
(-702,1407,o),
(-692,1407,qs),
(-631,1407,o),
(-569,1417,qs),
(-553,1419,o),
(-543,1419,qs),
(-516,1419,o),
(-516,1397,qs),
(-520,1344,o),
(-520,1307,qs),
(-520,1118,ls),
(-520,1050,o),
(-494,1020,qs),
(-478,1002,o),
(-440,1001,qs),
(-405,1001,o),
(-367,1030,qs),
(-338,1055,o),
(-338,1081,qs),
(-338,1311,ls),
(-340,1368,o),
(-385,1366,qs),
(-393,1366,o),
(-393,1386,qs),
(-393,1406,o),
(-385,1407,q),
(-324,1407,o),
(-258,1417,qs),
(-244,1419,o),
(-236,1419,qs),
(-207,1419,o),
(-207,1401,qs),
(-211,1350,o),
(-213,1315,q),
(-213,1092,ls),
(-213,1043,o),
(-207,1026,qs),
(-199,1003,o),
(-176,1004,qs),
(-170,1004,o),
(-160,1008,qs),
(-152,1010,o),
(-143,989,q),
(-139,969,o),
(-145,967,q),
(-145,967,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
37 21 13 3 2 1 2 1 7 0 2 76 15 1 1 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
37 21 13 3 2 1 2 1 7 0 2 76 15 1 4 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
5 4 2 1 6 1 2 0 1 2 105 3 1 0 7 7 0 89 3 1 0 0 7 98 0 7 0 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 4 1 4 133 5 1 1 6 1 2 0 1 2 105 3 1 0 7 7 0 89 3 1 0 0 7 98 0 7 0 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 34 19 23 37 35 27 37 8 11 30 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0367;
unicode = 871;
},
{
glyphname = uni036E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-616,1380,o),
(-655,1380,qs),
(-663,1380,o),
(-666,1421,o),
(-655,1421,qs),
(-620,1419,o),
(-543,1417,qs),
(-463,1417,o),
(-430,1421,q),
(-422,1421,o),
(-422,1380,o),
(-430,1380,qs),
(-469,1380,o),
(-469,1356,qs),
(-469,1346,o),
(-467,1341,qs),
(-387,1092,ls),
(-385,1084,o),
(-377,1083,o),
(-373,1092,q),
(-287,1339,ls),
(-285,1345,o),
(-285,1352,qs),
(-285,1381,o),
(-334,1380,qs),
(-342,1380,o),
(-342,1421,o),
(-334,1421,qs),
(-299,1419,o),
(-242,1417,qs),
(-185,1417,o),
(-150,1421,q),
(-142,1421,o),
(-141,1380,o),
(-150,1380,qs),
(-205,1380,o),
(-217,1341,q),
(-360,971,ls),
(-374,936,o),
(-430,938,o),
(-444,967,q),
(-600,1341,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 43 values pushed */
25 18 2 0 1 1 76 0 0 1 0 134 5 1 2 1 1 2 89 5 1 2 2 1 97 6 4 3 3 1 2 1 81 34 52 27 34 52 19 17 7 11 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni036E;
unicode = 878;
},
{
glyphname = uni036F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-151,987,o),
(-113,987,qs),
(-105,987,o),
(-104,946,o),
(-113,946,qs),
(-156,950,o),
(-236,950,qs),
(-316,950,o),
(-358,946,qs),
(-366,946,o),
(-369,987,o),
(-358,987,qs),
(-313,987,o),
(-313,1001,qs),
(-313,1007,o),
(-332,1030,q),
(-389,1114,l),
(-391,1118,o),
(-403,1118,o),
(-408,1112,qs),
(-469,1040,ls),
(-494,1009,o),
(-494,999,qs),
(-494,987,o),
(-463,987,qs),
(-455,987,o),
(-453,946,o),
(-463,946,qs),
(-506,950,o),
(-553,950,qs),
(-598,950,o),
(-641,946,qs),
(-649,946,o),
(-649,987,o),
(-641,987,qs),
(-586,987,o),
(-555,1024,qs),
(-442,1161,l),
(-436,1167,o),
(-436,1184,o),
(-440,1190,qs),
(-561,1343,ls),
(-592,1382,o),
(-625,1380,qs),
(-633,1380,o),
(-633,1421,o),
(-625,1421,qs),
(-590,1419,o),
(-506,1417,qs),
(-422,1417,o),
(-389,1421,q),
(-381,1421,o),
(-381,1380,o),
(-389,1380,qs),
(-422,1380,o),
(-424,1366,q),
(-424,1356,o),
(-410,1335,qs),
(-369,1278,l),
(-367,1272,o),
(-352,1272,o),
(-348,1278,q),
(-307,1327,ls),
(-289,1350,o),
(-291,1364,q),
(-291,1382,o),
(-330,1380,qs),
(-338,1380,o),
(-340,1421,o),
(-330,1421,qs),
(-297,1419,o),
(-240,1417,qs),
(-183,1417,o),
(-145,1421,qs),
(-137,1421,o),
(-137,1380,o),
(-145,1380,qs),
(-180,1380,o),
(-213,1346,q),
(-311,1227,l),
(-315,1221,o),
(-317,1206,o),
(-311,1200,q),
(-186,1034,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 58 values pushed */
78 55 2 7 73 4 1 1 5 3 2 3 0 6 1 0 105 11 9 8 3 6 7 7 6 89 11 9 8 3 6 6 7 97 10 1 7 6 7 81 82 80 77 75 71 70 35 36 23 34 52 27 34 52 21 12 11 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni036F;
unicode = 879;
},
{
glyphname = uni0000;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(647,1194,o),
(645,995,qs),
(645,907,o),
(530,844,qs),
(424,788,ls),
(309,727,o),
(309,637,qs),
(309,561,o),
(385,426,q),
(393,418,o),
(408,420,qs),
(431,424,o),
(430,438,q),
(410,508,o),
(410,563,qs),
(410,612,o),
(483,653,qs),
(649,741,ls),
(731,784,o),
(731,930,qs),
(729,1090,o),
(614,1231,qs),
(499,1362,o),
(371,1362,qs),
(287,1362,o),
(287,1280,qs),
(286,1194,o),
(354,1194,q),
(354,1194,l)
);
},
{
closed = 1;
nodes = (
(535,125,o),
(514,158,qs),
(477,213,o),
(414,213,qs),
(375,213,o),
(346,193,qs),
(297,156,o),
(297,86,qs),
(297,49,o),
(317,18,q),
(354,-31,o),
(414,-31,qs),
(451,-31,o),
(479,-14,qs),
(535,18,o),
(535,86,q),
(535,86,l)
);
},
{
closed = 1;
nodes = (
(68,1507,l),
(932,1507,l),
(932,-131,l),
(68,-131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
17 15 2 3 0 1 76 6 1 0 1 3 1 0 3 128 0 3 2 1 3 2 126 0 4 0 1 0 4 1 105 0 2 5 5 2 89 0 2 2 5 95 7 1 5 2 5 79 46 46 1 0 46 49 46 49 48 47 42 40 34 32 5 3 0 28 1 27 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = uni0000;
},
{
glyphname = u10330;
kernRight = u10330;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1112,10,o),
(1028,-16,o),
(971,-16,qs),
(914,-16,o),
(741,2,o),
(590,203,o),
(539,494,o),
(483,561,o),
(444,561,qs),
(360,561,o),
(338,147,o),
(250,-104,o),
(188,-250,o),
(137,-313,o),
(57,-311,o),
(-14,-324,o),
(-74,-324,qs),
(-135,-324,o),
(-135,-270,qs),
(-135,-235,o),
(-20,-211,o),
(51,-104,o),
(127,205,o),
(127,291,qs),
(127,354,o),
(76,549,qs),
(70,572,o),
(102,602,qs),
(110,610,o),
(330,623,o),
(403,625,qs),
(473,625,o),
(461,680,qs),
(443,770,o),
(336,907,qs),
(246,1026,o),
(182,1106,qs),
(157,1139,o),
(205,1143,qs),
(244,1145,o),
(471,1159,o),
(518,1171,qs),
(526,1173,o),
(532,1171,q),
(569,1171,o),
(575,1128,qs),
(593,1009,o),
(735,584,o),
(831,295,o),
(928,74,o),
(1008,74,qs),
(1047,74,o),
(1071,117,o),
(1087,117,qs),
(1112,117,o),
(1112,47,q),
(1112,47,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 5 6 5 136 0 6 8 6 136 0 0 1 7 1 0 7 131 0 3 4 2 4 3 2 131 0 2 2 132 0 7 0 4 3 7 4 110 0 1 1 8 97 0 8 8 33 1 78 36 36 17 43 55 35 21 34 17 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1120;
}
);
note = u10330;
},
{
glyphname = u10331;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1067,147,o),
(866,-4,o),
(618,-4,qs),
(563,-4,o),
(326,0,o),
(270,0,qs),
(133,0,o),
(80,-6,q),
(62,-6,o),
(61,68,o),
(80,68,qs),
(135,68,o),
(203,119,o),
(233,260,o),
(231,715,o),
(201,823,o),
(141,870,o),
(100,870,qs),
(86,870,o),
(86,932,o),
(100,932,qs),
(198,930,o),
(274,930,qs),
(335,930,o),
(457,936,qs),
(486,936,o),
(485,870,qs),
(485,827,o),
(434,676,o),
(434,545,qs),
(434,490,o),
(461,489,qs),
(486,489,o),
(573,588,o),
(674,752,o),
(737,852,o),
(764,926,qs),
(770,942,o),
(780,940,q),
(784,940,o),
(791,938,q),
(834,915,o),
(936,877,o),
(999,858,q),
(999,838,o),
(872,721,o),
(627,563,o),
(627,539,qs),
(627,523,o),
(651,510,o),
(664,510,qs),
(678,510,o),
(764,522,o),
(813,522,qs),
(919,522,o),
(1067,389,o),
(1067,309,q),
(1067,309,l)
);
},
{
closed = 1;
nodes = (
(786,348,o),
(696,461,o),
(627,461,qs),
(574,461,o),
(434,416,o),
(434,383,qs),
(434,174,ls),
(434,131,o),
(467,88,o),
(514,88,qs),
(639,88,o),
(786,203,o),
(786,287,q),
(786,287,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
13 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 6 7 6 5 7 131 0 2 8 1 8 2 1 131 0 0 1 4 1 0 4 131 0 8 0 1 0 8 1 109 0 7 7 6 95 0 6 6 33 77 0 4 4 3 95 0 3 3 32 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 5 6 7 6 5 7 131 0 2 8 1 8 2 1 131 0 0 1 4 1 0 4 131 0 8 0 1 0 8 1 109 0 4 0 3 4 3 99 0 7 7 6 95 0 6 6 33 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
69 67 62 60 55 50 46 45 40 38 36 31 26 24 33 34 9 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1146;
}
);
note = u10331;
},
{
glyphname = u10332;
kernRight = u10332;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1061,721,o),
(993,639,o),
(938,639,qs),
(891,639,o),
(784,721,o),
(743,813,o),
(596,831,o),
(514,831,qs),
(489,831,o),
(455,805,o),
(449,727,o),
(453,459,o),
(455,248,o),
(471,68,o),
(580,68,qs),
(594,68,o),
(594,-6,o),
(580,-6,q),
(543,0,o),
(309,0,qs),
(104,0,o),
(78,-6,q),
(62,-6,o),
(59,68,o),
(78,68,qs),
(168,68,o),
(215,205,o),
(233,475,o),
(240,709,o),
(238,791,o),
(176,860,o),
(131,860,qs),
(117,860,o),
(117,934,o),
(131,934,qs),
(219,928,o),
(291,928,qs),
(438,928,o),
(729,932,o),
(807,932,qs),
(907,932,o),
(1061,848,o),
(1061,762,q),
(1061,762,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
25 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 2 5 5 6 117 0 1 5 0 5 1 117 4 1 2 2 3 97 0 3 3 33 77 0 5 5 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 2 5 2 6 5 131 0 1 5 0 5 1 117 4 1 2 2 3 97 0 3 3 33 77 0 5 5 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 6 2 5 2 6 5 131 0 1 5 0 5 1 117 0 5 0 0 5 0 100 4 1 2 2 3 97 0 3 3 33 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 37 35 36 21 34 98 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1079;
}
);
note = u10332;
},
{
glyphname = u10333;
kernRight = u10333;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1222,67,o),
(1307,68,qs),
(1321,68,o),
(1321,-6,o),
(1307,-6,q),
(1246,0,o),
(1108,0,qs),
(1038,0,o),
(971,-10,q),
(955,41,o),
(846,279,o),
(836,279,qs),
(818,279,o),
(750,139,o),
(539,-18,o),
(381,-18,qs),
(266,-18,o),
(59,176,o),
(59,367,qs),
(59,502,o),
(236,680,o),
(358,680,qs),
(444,680,o),
(557,639,o),
(557,612,qs),
(557,592,o),
(406,578,o),
(279,469,o),
(279,391,qs),
(279,315,o),
(369,178,o),
(449,178,qs),
(553,178,o),
(705,285,o),
(705,401,qs),
(705,589,o),
(463,1014,o),
(440,1042,qs),
(409,1083,o),
(369,1114,o),
(340,1114,qs),
(326,1114,o),
(326,1188,o),
(340,1188,q),
(360,1184,o),
(535,1184,qs),
(627,1184,o),
(690,1188,q),
(708,1129,o),
(776,928,o),
(969,477,o),
(1095,241,o),
(1169,141,q),
(1169,141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
9 1 4 74 48 1 0 73 0 5 2 3 2 5 3 131 0 3 1 2 3 1 129 0 1 0 0 1 0 99 0 7 7 6 97 0 6 6 33 77 0 2 2 4 97 0 4 4 33 2 78 35 35 34 36 40 39 35 53 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1345;
}
);
note = u10333;
},
{
glyphname = u10334;
kernLeft = u10334;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(950,700,l),
(932,663,o),
(889,664,qs),
(860,664,o),
(817,733,o),
(700,844,o),
(578,844,qs),
(459,844,o),
(309,649,o),
(309,549,qs),
(309,516,o),
(336,475,o),
(356,475,qs),
(530,475,o),
(766,569,o),
(838,569,qs),
(981,569,o),
(1028,524,o),
(1028,469,qs),
(1028,412,o),
(950,385,o),
(797,385,qs),
(734,385,o),
(559,428,o),
(342,428,qs),
(317,428,o),
(309,418,o),
(309,403,qs),
(309,288,o),
(457,92,o),
(612,92,qs),
(729,92,o),
(844,205,o),
(866,250,q),
(891,293,o),
(995,293,qs),
(1101,293,o),
(1102,244,qs),
(1102,213,o),
(965,45,o),
(715,-18,o),
(616,-18,qs),
(311,-18,o),
(59,272,o),
(59,426,qs),
(59,694,o),
(389,950,o),
(586,950,qs),
(713,950,o),
(850,852,o),
(872,829,q),
(946,973,ls),
(948,977,o),
(958,977,qs),
(974,977,o),
(1014,956,qs),
(1073,925,o),
(1067,915,q),
(1067,915,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
58 30 7 3 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 4 6 4 3 6 131 0 10 7 9 7 10 9 131 0 5 0 8 7 5 8 109 0 6 0 7 10 6 7 109 0 4 4 2 97 0 2 2 33 77 0 9 9 1 97 0 1 1 32 77 0 0 0 34 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 4 6 4 3 6 131 0 10 7 9 7 10 9 131 0 0 1 0 137 0 5 0 8 7 5 8 109 0 6 0 7 10 6 7 109 0 9 0 1 0 9 1 109 0 4 4 2 97 0 2 2 33 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
56 54 52 50 33 36 33 36 35 36 36 36 35 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1181;
}
);
note = u10334;
},
{
glyphname = u10335;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1010,188,o),
(1036,119,o),
(1075,119,qs),
(1087,119,o),
(1108,123,qs),
(1126,127,o),
(1135,92,qs),
(1139,76,o),
(1139,66,qs),
(1139,52,o),
(1130,49,q),
(1079,43,o),
(791,-29,o),
(768,-35,q),
(758,-35,o),
(760,-6,q),
(760,84,o),
(770,188,o),
(760,188,qs),
(748,188,o),
(694,88,o),
(557,-25,o),
(440,-25,qs),
(297,-25,o),
(59,252,o),
(59,494,qs),
(59,609,o),
(162,836,o),
(205,885,qs),
(213,893,o),
(395,899,o),
(401,895,q),
(421,877,o),
(422,811,qs),
(422,762,o),
(365,686,o),
(279,569,o),
(279,449,qs),
(279,338,o),
(373,166,o),
(514,166,qs),
(618,166,o),
(788,350,o),
(788,401,q),
(800,585,o),
(788,879,o),
(788,930,q),
(831,930,o),
(993,1024,o),
(1034,1024,qs),
(1081,1024,o),
(1083,942,qs),
(1083,895,o),
(1024,719,o),
(1010,340,o),
(1010,274,q),
(1010,274,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 4 2 4 6 2 131 0 5 2 3 2 5 3 131 0 2 2 4 97 0 4 4 33 77 0 3 3 32 77 0 1 1 32 77 0 0 0 34 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 4 2 4 6 2 131 0 5 2 3 2 5 3 131 0 0 1 0 137 0 2 2 4 97 0 4 4 33 77 0 3 3 32 77 0 1 1 32 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 4 2 4 6 2 131 0 5 2 3 2 5 3 131 0 3 1 2 3 1 129 0 0 1 0 137 0 2 2 4 97 0 4 4 33 77 0 1 1 32 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 4 2 4 6 2 131 0 5 2 3 2 5 3 131 0 3 1 2 3 1 129 0 1 0 2 1 0 129 0 0 0 132 0 2 2 4 97 0 4 4 33 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
46 34 38 40 37 17 37 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1167;
}
);
note = u10335;
},
{
glyphname = u10336;
kernRight = u10336;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,109,o),
(170,139,qs),
(625,645,ls),
(664,688,o),
(664,711,qs),
(664,725,o),
(618,770,o),
(592,770,qs),
(504,770,o),
(199,743,o),
(92,727,qs),
(45,721,o),
(20,838,o),
(20,913,qs),
(20,960,o),
(43,1014,qs),
(63,1059,o),
(152,1059,qs),
(246,1059,o),
(268,1020,qs),
(278,1002,o),
(328,897,o),
(451,897,qs),
(611,897,o),
(883,922,o),
(942,922,qs),
(985,922,o),
(1022,877,o),
(1022,842,qs),
(1022,801,o),
(965,741,qs),
(403,152,l),
(403,140,o),
(481,102,o),
(543,102,qs),
(690,102,o),
(797,139,o),
(848,139,qs),
(977,139,o),
(1126,84,o),
(1126,-12,qs),
(1126,-151,o),
(1098,-260,o),
(967,-260,qs),
(951,-260,o),
(903,-104,o),
(819,-4,o),
(551,-4,qs),
(332,-4,o),
(152,-16,o),
(100,-63,o),
(86,-63,qs),
(84,-63,o),
(84,-2,o),
(100,33,q),
(100,33,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 1 115 0 2 3 7 3 2 117 0 6 4 6 137 0 3 3 0 97 0 0 0 33 77 0 7 7 5 97 0 5 5 32 77 0 4 4 32 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 136 0 2 3 7 3 2 117 0 6 4 6 137 0 3 3 0 97 0 0 0 33 77 0 7 7 5 97 0 5 5 32 77 0 4 4 32 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 136 0 2 3 7 3 2 117 0 6 4 6 137 0 7 0 5 4 7 5 109 0 3 3 0 97 0 0 0 33 77 0 4 4 32 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 136 0 2 3 7 3 2 117 0 4 5 6 5 4 6 131 0 6 6 132 0 7 0 5 4 7 5 109 0 3 3 0 97 0 0 0 33 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 35 33 39 33 36 34 53 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1155;
}
);
note = u10336;
},
{
glyphname = u10337;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(979,360,o),
(981,250,o),
(993,68,o),
(1083,68,qs),
(1093,68,o),
(1096,-6,o),
(1083,-6,q),
(1034,0,o),
(907,0,qs),
(792,0,o),
(719,-4,q),
(701,-2,o),
(700,33,qs),
(700,58,o),
(758,162,o),
(758,246,qs),
(758,440,ls),
(758,512,o),
(682,635,o),
(590,635,qs),
(537,635,o),
(410,516,o),
(410,428,qs),
(410,246,ls),
(410,146,o),
(461,41,o),
(461,16,qs),
(461,-2,o),
(451,-4,q),
(373,0,o),
(274,0,qs),
(155,0,o),
(74,-6,qs),
(62,-6,o),
(59,68,o),
(74,68,qs),
(146,68,o),
(197,233,o),
(197,674,o),
(172,979,o),
(125,1022,o),
(86,1022,qs),
(76,1022,o),
(76,1096,o),
(86,1096,qs),
(279,1096,o),
(367,1128,q),
(375,1130,o),
(389,1130,qs),
(440,1130,o),
(440,1067,qs),
(440,1024,o),
(408,844,o),
(408,713,qs),
(408,668,o),
(428,666,qs),
(438,666,o),
(489,707,o),
(612,782,o),
(676,782,qs),
(785,782,o),
(979,598,o),
(979,389,q),
(979,389,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
56 36 2 2 73 0 1 7 0 7 1 0 131 0 2 3 2 137 0 7 0 0 4 7 0 109 0 4 0 3 2 4 3 109 9 1 5 5 6 95 8 1 6 6 33 5 78 60 58 56 40 82 20 34 19 21 34 34 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1124;
}
);
note = u10337;
},
{
glyphname = u10338;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(547,774,o),
(506,1012,o),
(506,1057,qs),
(506,1094,o),
(678,1139,qs),
(754,1159,o),
(805,1159,qs),
(850,1159,o),
(852,1133,qs),
(852,1117,o),
(827,1008,o),
(778,713,o),
(772,279,qs),
(772,197,o),
(866,197,qs),
(952,197,o),
(1012,395,o),
(1012,489,qs),
(1012,520,o),
(987,651,o),
(987,692,qs),
(987,725,o),
(1028,838,o),
(1116,838,qs),
(1182,838,o),
(1241,801,o),
(1274,668,o),
(1274,608,qs),
(1274,405,o),
(1034,92,o),
(903,92,qs),
(819,92,o),
(772,137,q),
(772,2,o),
(780,-172,o),
(780,-203,qs),
(780,-223,o),
(643,-258,qs),
(600,-268,o),
(565,-268,qs),
(508,-268,o),
(510,-225,qs),
(510,-184,o),
(547,14,o),
(547,137,q),
(522,117,o),
(453,82,o),
(408,82,qs),
(287,82,o),
(59,395,o),
(59,522,qs),
(59,606,o),
(125,768,o),
(172,838,o),
(244,838,qs),
(353,838,o),
(352,758,qs),
(352,715,o),
(305,592,o),
(305,506,qs),
(305,356,o),
(367,174,o),
(440,174,qs),
(522,174,o),
(547,256,q),
(547,498,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 20 0 3 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 3 136 5 1 1 6 7 6 1 7 131 0 7 7 132 0 4 0 6 4 93 0 2 0 0 6 2 0 110 0 4 4 6 97 0 6 4 6 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 3 136 5 1 1 6 7 6 1 7 131 0 7 7 132 4 1 2 0 0 6 2 0 110 4 1 2 2 6 98 0 6 2 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 3 136 5 1 1 6 7 6 1 7 131 0 7 7 132 0 4 0 6 4 93 0 2 0 0 6 2 0 110 0 4 4 6 97 0 6 4 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 39 37 39 38 37 38 33 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1351;
}
);
note = u10338;
},
{
glyphname = u10339;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(510,860,o),
(455,797,o),
(449,750,o),
(453,481,o),
(455,248,o),
(471,68,o),
(580,68,qs),
(594,68,o),
(594,-6,o),
(580,-6,q),
(543,0,o),
(309,0,qs),
(104,0,o),
(78,-6,q),
(62,-6,o),
(59,68,o),
(78,68,qs),
(168,68,o),
(215,205,o),
(233,475,o),
(240,709,o),
(238,791,o),
(176,860,o),
(131,860,qs),
(117,860,o),
(117,934,o),
(131,934,qs),
(219,928,o),
(336,928,qs),
(475,928,o),
(555,934,qs),
(569,934,o),
(569,860,o),
(555,860,q),
(555,860,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 2 2 3 97 0 3 3 33 77 5 1 1 1 0 95 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
5 1 1 0 0 1 0 99 4 1 2 2 3 97 0 3 3 33 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
21 35 36 21 34 82 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = u10339;
},
{
glyphname = u1033A;
kernRight = u1033A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,928,o),
(457,936,q),
(486,936,o),
(483,870,qs),
(483,827,o),
(451,676,o),
(451,545,qs),
(451,490,o),
(481,487,q),
(524,487,o),
(725,590,o),
(782,823,o),
(899,907,o),
(967,907,qs),
(1016,907,o),
(1108,834,o),
(1108,770,qs),
(1108,664,o),
(735,502,o),
(565,444,o),
(565,428,qs),
(565,403,o),
(788,371,o),
(905,274,o),
(993,143,o),
(1110,57,o),
(1262,16,o),
(1262,-23,qs),
(1262,-86,o),
(1143,-86,qs),
(1041,-86,o),
(831,27,o),
(733,188,o),
(539,332,o),
(494,332,qs),
(451,332,o),
(451,297,qs),
(451,201,ls),
(451,70,o),
(559,68,qs),
(573,68,o),
(573,-6,o),
(559,-6,q),
(522,0,o),
(309,0,qs),
(104,0,o),
(78,-6,q),
(62,-6,o),
(59,68,o),
(78,68,qs),
(168,68,o),
(215,205,o),
(233,475,o),
(240,709,o),
(238,791,o),
(176,860,o),
(131,860,qs),
(117,860,o),
(117,934,o),
(131,934,qs),
(221,928,o),
(291,928,q),
(291,928,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
41 19 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 3 6 136 0 5 0 8 1 5 8 109 4 1 2 2 3 97 0 3 3 33 77 0 7 7 32 77 0 1 1 0 97 9 10 2 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 3 6 136 0 7 1 0 1 7 0 131 0 5 0 8 1 5 8 109 0 1 9 10 2 0 1 0 101 4 1 2 2 3 97 0 3 3 33 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
2 0 60 59 53 52 49 47 33 31 28 26 23 21 18 16 12 11 6 4 0 62 2 61 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1261;
}
);
note = u1033A;
},
{
glyphname = u1033B;
kernRight = u1033B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1022,133,o),
(1079,131,qs),
(1126,131,o),
(1126,51,qs),
(1126,-29,o),
(1028,-29,qs),
(985,-29,o),
(834,12,o),
(743,256,o),
(692,489,o),
(653,582,o),
(625,582,qs),
(592,582,o),
(426,260,o),
(426,229,qs),
(426,174,o),
(481,174,qs),
(506,174,o),
(506,147,qs),
(506,98,o),
(362,-59,o),
(211,-59,qs),
(59,-59,o),
(59,31,qs),
(59,97,o),
(328,446,o),
(455,588,o),
(602,717,o),
(580,766,qs),
(477,985,ls),
(457,1032,o),
(375,1077,o),
(326,1077,qs),
(312,1077,o),
(309,1139,o),
(326,1139,qs),
(424,1137,o),
(500,1137,qs),
(627,1137,o),
(680,1139,qs),
(707,1139,o),
(727,1073,qs),
(967,309,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 6 4 6 3 4 131 0 4 1 6 4 1 129 0 1 0 0 1 0 100 0 2 2 33 77 0 6 6 5 97 0 5 5 33 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 2 5 2 136 0 3 6 4 6 3 4 131 0 4 1 6 4 1 129 0 1 0 0 1 0 100 0 6 6 5 97 0 5 5 33 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
34 36 35 35 41 34 81 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1155;
}
);
note = u1033B;
},
{
glyphname = u1033C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(711,350,o),
(690,348,qs),
(676,348,o),
(657,371,qs),
(432,639,ls),
(412,664,o),
(379,664,o),
(387,526,o),
(406,297,o),
(430,68,o),
(530,68,qs),
(544,68,o),
(545,-6,o),
(530,-6,q),
(493,0,o),
(281,0,qs),
(105,0,o),
(78,-6,q),
(62,-6,o),
(59,68,o),
(78,68,qs),
(166,68,o),
(209,250,o),
(223,535,o),
(236,698,o),
(231,819,o),
(172,870,o),
(123,870,qs),
(109,870,o),
(109,932,o),
(123,932,qs),
(178,930,o),
(236,930,qs),
(287,930,o),
(367,932,qs),
(398,932,o),
(451,885,qs),
(709,647,ls),
(736,622,o),
(760,623,qs),
(783,623,o),
(805,651,qs),
(989,874,ls),
(1036,931,o),
(1087,932,qs),
(1138,930,o),
(1206,930,qs),
(1261,930,o),
(1360,932,qs),
(1374,932,o),
(1374,858,o),
(1360,858,qs),
(1311,858,o),
(1257,811,o),
(1245,750,o),
(1249,481,o),
(1257,240,o),
(1282,68,o),
(1378,68,qs),
(1392,68,o),
(1393,-6,o),
(1378,-6,q),
(1341,0,o),
(1108,0,qs),
(903,0,o),
(874,-6,q),
(858,-6,o),
(858,68,o),
(874,68,qs),
(954,68,o),
(1010,188,o),
(1030,475,o),
(1034,643,o),
(1036,711,o),
(1030,729,o),
(1024,729,qs),
(985,731,o),
(961,694,q),
(729,375,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
64 16 2 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 13 1 6 1 13 6 131 0 6 12 1 6 12 129 0 12 0 8 12 115 0 0 4 1 0 4 129 11 9 3 3 1 1 2 97 10 1 2 2 33 77 0 4 4 5 95 7 1 5 5 32 77 0 8 8 5 96 7 1 5 5 32 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 13 1 6 1 13 6 131 0 6 12 1 6 12 129 0 12 0 1 12 0 129 0 0 4 1 0 4 129 11 9 3 3 1 1 2 97 10 1 2 2 33 77 0 4 4 5 95 7 1 5 5 32 77 0 8 8 5 96 7 1 5 5 32 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 13 1 6 1 13 6 131 0 6 12 1 6 12 129 0 12 0 1 12 0 129 0 0 4 1 0 4 129 0 4 8 5 4 93 0 8 7 1 5 8 5 100 11 9 3 3 1 1 2 97 10 1 2 2 33 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
77 75 72 71 68 66 63 61 57 56 34 83 35 98 21 35 36 22 17 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1441;
}
);
note = u1033C;
},
{
glyphname = u1033D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1108,-17,o),
(1042,-16,qs),
(999,-16,o),
(981,12,q),
(512,553,ls),
(485,584,o),
(455,584,qs),
(437,584,o),
(436,494,qs),
(436,350,ls),
(436,297,o),
(438,68,o),
(532,68,qs),
(546,68,o),
(547,-6,o),
(532,-6,q),
(495,0,o),
(281,0,qs),
(107,0,o),
(78,-6,q),
(62,-6,o),
(59,68,o),
(78,68,qs),
(144,68,o),
(184,205,o),
(203,475,o),
(184,788,o),
(184,829,qs),
(184,952,o),
(240,952,qs),
(291,952,o),
(371,862,qs),
(698,492,ls),
(788,390,o),
(817,412,qs),
(856,439,o),
(858,555,qs),
(860,674,o),
(858,795,o),
(797,864,o),
(752,864,qs),
(738,864,o),
(737,938,o),
(752,938,qs),
(840,932,o),
(967,932,qs),
(1106,932,o),
(1188,938,qs),
(1202,938,o),
(1200,864,o),
(1188,864,qs),
(1143,864,o),
(1085,801,o),
(1079,754,o),
(1083,485,o),
(1100,166,o),
(1108,80,o),
(1108,57,q),
(1108,57,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
42 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 4 0 4 7 0 131 0 8 8 33 77 6 1 4 4 5 97 0 5 5 33 77 2 1 0 0 1 96 0 1 1 32 77 0 3 3 32 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 7 4 0 4 7 0 131 0 3 1 3 137 2 1 0 0 1 3 0 1 108 0 8 8 33 77 6 1 4 4 5 97 0 5 5 33 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
35 36 35 36 21 41 34 82 22 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1259;
}
);
note = u1033D;
},
{
glyphname = u1033E;
kernLeft = u10334;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(843,950,o),
(1128,817,o),
(1128,664,qs),
(1128,519,o),
(926,518,qs),
(848,518,o),
(760,817,o),
(651,817,qs),
(456,817,o),
(313,641,o),
(313,444,qs),
(313,282,o),
(475,78,o),
(582,78,qs),
(715,78,o),
(844,201,o),
(864,377,o),
(1073,385,o),
(1128,399,o),
(1159,399,qs),
(1190,399,o),
(1190,346,qs),
(1190,207,o),
(1083,-41,o),
(973,-223,o),
(723,-479,o),
(645,-479,qs),
(565,-479,o),
(360,-446,o),
(360,-408,qs),
(360,-365,o),
(440,-365,qs),
(526,-365,o),
(752,-215,o),
(850,-76,o),
(850,-8,qs),
(850,58,o),
(831,59,qs),
(808,59,o),
(651,-23,o),
(512,-23,qs),
(285,-23,o),
(59,215,o),
(59,436,qs),
(59,610,o),
(193,807,o),
(460,950,o),
(659,950,q),
(659,950,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 3 4 136 0 3 1 3 136 0 2 1 7 1 2 7 131 0 6 7 5 7 6 5 131 0 5 9 7 5 9 129 0 9 8 7 9 8 129 0 7 7 1 97 0 1 1 33 77 0 8 8 0 98 10 1 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 4 3 4 136 0 3 1 3 136 0 2 1 7 1 2 7 131 0 6 7 5 7 6 5 131 0 5 9 7 5 9 129 0 9 8 7 9 8 129 0 8 10 1 0 8 0 102 0 7 7 1 97 0 1 1 33 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 44 42 41 39 35 33 31 30 29 27 22 20 17 15 11 9 8 6 0 48 1 47 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1267;
}
);
note = u1033E;
},
{
glyphname = u1033F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,246,ls),
(410,146,o),
(461,41,o),
(461,16,qs),
(461,-7,o),
(451,-6,qs),
(373,0,o),
(274,0,qs),
(155,0,o),
(74,-6,qs),
(62,-6,o),
(59,68,o),
(74,68,qs),
(146,68,o),
(186,207,o),
(199,524,o),
(178,745,o),
(123,793,o),
(84,793,qs),
(74,793,o),
(74,868,o),
(84,868,qs),
(188,868,o),
(373,1034,o),
(414,1034,qs),
(465,1034,o),
(465,973,qs),
(467,846,o),
(500,844,qs),
(523,844,o),
(705,950,o),
(805,950,qs),
(932,950,o),
(1069,829,o),
(1098,451,o),
(1098,223,o),
(1137,70,q),
(1137,17,o),
(883,-63,o),
(862,-63,qs),
(829,-63,o),
(829,-43,q),
(874,158,o),
(874,307,qs),
(874,567,ls),
(874,827,o),
(731,827,qs),
(551,827,o),
(410,661,o),
(410,573,q),
(410,573,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
46 44 13 8 4 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 5 0 3 5 131 0 4 2 4 137 0 6 0 5 2 6 5 109 0 1 1 33 77 0 7 7 8 95 0 8 8 33 77 0 0 0 2 98 0 2 2 32 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 8 1 136 0 3 0 5 0 3 5 131 0 4 2 4 137 0 6 0 5 2 6 5 109 0 7 7 8 95 0 8 8 33 77 0 0 0 2 98 0 2 2 32 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 8 1 136 0 3 0 5 0 3 5 131 0 4 2 4 137 0 6 0 5 2 6 5 109 0 0 0 2 4 0 2 110 0 7 7 8 95 0 8 8 33 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
66 20 34 17 34 33 38 37 34 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1206;
}
);
note = u1033F;
},
{
glyphname = u10340;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1212,934,o),
(1212,860,o),
(1198,860,qs),
(1153,860,o),
(1098,797,o),
(1092,750,o),
(1096,481,o),
(1098,248,o),
(1114,68,o),
(1225,68,qs),
(1239,68,o),
(1237,-6,o),
(1225,-6,q),
(1188,0,o),
(979,0,qs),
(776,0,o),
(748,-6,q),
(732,-6,o),
(729,68,o),
(748,68,qs),
(811,68,o),
(858,205,o),
(877,475,o),
(883,709,o),
(883,791,o),
(799,860,o),
(662,860,qs),
(533,860,o),
(455,797,o),
(449,750,o),
(453,481,o),
(455,248,o),
(469,68,o),
(557,68,qs),
(571,68,o),
(571,-6,o),
(557,-6,q),
(520,0,o),
(309,0,qs),
(104,0,o),
(78,-6,q),
(62,-6,o),
(59,68,o),
(78,68,qs),
(168,68,o),
(215,205,o),
(233,475,o),
(240,709,o),
(238,791,o),
(176,860,o),
(131,860,qs),
(117,860,o),
(117,934,o),
(131,934,qs),
(227,932,o),
(668,932,qs),
(1100,932,o),
(1198,934,q),
(1198,934,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
45 21 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
8 6 4 3 2 2 3 97 7 1 3 3 33 77 9 5 2 1 1 0 95 10 1 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
9 5 2 1 10 1 0 1 0 99 8 6 4 3 2 2 3 97 7 1 3 3 33 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
4 0 55 54 49 47 44 42 38 37 32 30 25 23 20 18 14 13 8 6 0 58 4 57 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1286;
}
);
note = u10340;
},
{
glyphname = u10341;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1010,10,o),
(1036,-61,o),
(1075,-61,qs),
(1087,-61,o),
(1108,-55,qs),
(1126,-51,o),
(1135,-86,qs),
(1139,-102,o),
(1139,-113,qs),
(1139,-127,o),
(1130,-129,q),
(1079,-135,o),
(821,-207,o),
(799,-213,q),
(789,-213,o),
(791,-186,q),
(791,-96,o),
(801,223,o),
(791,223,qs),
(779,223,o),
(702,88,o),
(557,-25,o),
(440,-25,qs),
(297,-25,o),
(59,252,o),
(59,494,qs),
(59,609,o),
(111,723,qs),
(164,842,o),
(205,885,qs),
(213,893,o),
(395,899,o),
(401,895,q),
(421,877,o),
(422,811,qs),
(422,762,o),
(365,686,o),
(279,569,o),
(279,449,qs),
(279,338,o),
(373,166,o),
(514,166,qs),
(618,166,o),
(788,350,o),
(788,401,q),
(800,585,o),
(788,879,o),
(788,930,q),
(831,930,o),
(993,1024,o),
(1034,1024,qs),
(1081,1024,o),
(1083,942,qs),
(1083,895,o),
(1024,719,o),
(1010,340,o),
(1010,274,q),
(1010,274,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
41 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 4 6 136 0 2 2 4 97 0 4 4 33 77 0 3 3 32 77 0 5 5 1 97 0 1 1 32 77 0 0 0 34 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 4 6 136 0 0 1 0 137 0 2 2 4 97 0 4 4 33 77 0 3 3 32 77 0 5 5 1 97 0 1 1 32 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 4 6 136 0 3 5 1 5 3 1 131 0 0 1 0 137 0 2 2 4 97 0 4 4 33 77 0 5 5 1 97 0 1 1 32 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 4 6 136 0 3 5 1 5 3 1 131 0 0 1 0 137 0 5 0 1 0 5 1 109 0 2 2 4 97 0 4 4 33 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
46 34 39 40 37 17 37 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1177;
}
);
note = u10341;
},
{
glyphname = u10342;
kernRight = u10342;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(366,1044,o),
(367,979,qs),
(367,932,o),
(354,811,o),
(336,602,o),
(336,551,qs),
(336,518,o),
(367,518,qs),
(402,518,o),
(641,694,o),
(641,782,qs),
(641,888,o),
(590,973,o),
(590,995,qs),
(590,1038,o),
(647,1051,qs),
(667,1055,o),
(682,1055,qs),
(770,1055,o),
(963,965,o),
(963,858,qs),
(963,797,o),
(610,567,o),
(481,516,o),
(481,494,qs),
(481,476,o),
(578,387,o),
(862,127,o),
(1182,92,o),
(1182,29,qs),
(1182,-2,o),
(987,-20,o),
(877,-20,qs),
(766,-20,o),
(596,131,o),
(510,225,o),
(389,356,o),
(356,371,o),
(338,362,o),
(336,334,o),
(336,309,qs),
(336,270,o),
(330,121,o),
(326,8,o),
(283,-207,o),
(227,-315,o),
(170,-315,qs),
(109,-315,o),
(82,-219,o),
(106,66,o),
(127,678,o),
(117,891,o),
(70,934,o),
(31,934,qs),
(21,934,o),
(20,971,qs),
(20,1008,o),
(31,1008,qs),
(205,1008,o),
(295,1040,q),
(301,1044,o),
(315,1044,q),
(315,1044,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 3 2 136 0 5 3 1 3 5 1 131 0 6 0 4 0 6 4 131 0 4 4 132 0 3 3 33 77 0 1 1 0 98 0 0 0 34 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 2 3 2 136 0 5 3 1 3 5 1 131 0 6 0 4 0 6 4 131 0 4 4 132 0 1 0 0 6 1 0 110 0 3 3 33 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
22 41 29 44 37 35 19 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1204;
}
);
note = u10342;
},
{
glyphname = u10343;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(817,117,o),
(598,-18,o),
(408,-18,qs),
(308,-18,o),
(59,104,o),
(59,199,qs),
(59,230,o),
(104,295,o),
(156,295,qs),
(289,295,o),
(369,61,o),
(475,61,qs),
(567,61,o),
(657,152,o),
(657,219,qs),
(657,266,o),
(573,383,o),
(254,453,o),
(121,612,o),
(121,719,qs),
(121,813,o),
(317,950,o),
(438,950,qs),
(504,950,o),
(571,924,o),
(588,924,qs),
(602,924,o),
(594,940,qs),
(584,958,ls),
(574,978,o),
(635,981,qs),
(698,981,o),
(707,961,q),
(725,910,o),
(807,727,o),
(836,668,q),
(836,656,o),
(780,653,qs),
(725,653,o),
(721,668,q),
(674,772,o),
(549,881,o),
(477,881,qs),
(407,881,o),
(303,793,o),
(303,725,qs),
(303,674,o),
(418,573,o),
(653,537,o),
(817,387,o),
(817,244,q),
(817,244,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 6 5 1 5 6 1 131 0 1 0 5 1 0 129 0 5 5 7 97 0 7 7 33 77 0 3 3 32 77 0 0 0 4 97 0 4 4 32 77 0 2 2 34 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 1 5 6 1 131 0 1 0 5 1 0 129 0 3 0 4 0 3 4 131 0 2 4 2 137 0 0 0 4 2 0 4 109 0 5 5 7 97 0 7 7 33 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 33 41 33 35 37 20 39 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 897;
}
);
note = u10343;
},
{
glyphname = u10344;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,68,o),
(569,205,o),
(588,475,o),
(596,750,o),
(594,829,o),
(557,829,qs),
(442,829,o),
(322,815,o),
(268,709,o),
(184,639,o),
(135,639,qs),
(80,639,o),
(31,721,o),
(31,762,qs),
(31,836,o),
(129,932,o),
(229,932,qs),
(307,932,o),
(598,928,o),
(698,928,qs),
(798,928,o),
(1087,932,o),
(1165,932,qs),
(1265,932,o),
(1366,834,o),
(1366,762,qs),
(1366,721,o),
(1319,639,o),
(1264,639,qs),
(1215,639,o),
(1128,709,o),
(1077,815,o),
(946,829,o),
(842,829,qs),
(807,829,o),
(803,754,o),
(807,481,o),
(811,248,o),
(825,68,o),
(936,68,qs),
(950,68,o),
(948,-6,o),
(936,-6,q),
(899,0,o),
(666,0,qs),
(461,0,o),
(432,-6,q),
(416,-6,o),
(416,68,o),
(432,68,q),
(432,68,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
7 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
5 1 3 1 2 2 3 117 7 1 1 1 0 97 0 0 0 33 77 6 1 2 2 4 96 0 4 4 32 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
5 1 3 1 2 1 3 2 131 7 1 1 1 0 97 0 0 0 33 77 6 1 2 2 4 96 0 4 4 32 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
5 1 3 1 2 1 3 2 131 6 1 2 0 4 2 4 100 7 1 1 1 0 97 0 0 0 33 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 35 36 132 35 36 35 36 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1417;
}
);
note = u10344;
},
{
glyphname = u10345;
kernRight = u10345;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(696,705,o),
(604,793,o),
(604,840,qs),
(604,895,o),
(733,946,o),
(774,946,qs),
(846,946,o),
(907,848,o),
(936,702,o),
(936,674,qs),
(936,576,o),
(657,160,o),
(526,86,o),
(526,66,qs),
(526,41,o),
(555,-82,o),
(563,-236,o),
(627,-268,o),
(627,-283,qs),
(627,-295,o),
(561,-358,o),
(479,-358,qs),
(399,-358,o),
(350,-315,o),
(350,-291,qs),
(350,-17,o),
(256,258,o),
(59,586,o),
(59,856,qs),
(59,901,o),
(135,932,o),
(217,932,qs),
(315,932,o),
(348,903,qs),
(383,874,o),
(383,836,qs),
(383,803,o),
(303,721,o),
(303,698,qs),
(303,612,o),
(346,438,o),
(440,256,o),
(477,168,o),
(512,168,qs),
(532,168,o),
(633,336,o),
(696,539,o),
(696,670,q),
(696,670,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 0 1 2 0 109 0 1 1 32 77 0 3 3 32 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 0 1 3 131 0 3 3 132 0 2 0 0 2 93 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
46 40 42 35 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = u10345;
},
{
glyphname = u10346;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(354,166,l),
(453,166,ls),
(568,166,o),
(797,215,o),
(889,254,o),
(932,254,qs),
(985,254,o),
(985,209,qs),
(985,168,o),
(860,-39,o),
(778,-39,o),
(612,55,o),
(440,70,qs),
(356,76,l),
(362,14,ls),
(378,-162,o),
(338,-256,o),
(256,-362,o),
(156,-362,qs),
(33,-362,o),
(33,-326,qs),
(33,-285,o),
(72,-152,o),
(127,133,o),
(145,459,o),
(127,893,o),
(70,944,o),
(31,944,qs),
(21,944,o),
(20,1020,o),
(31,1020,qs),
(224,1020,o),
(311,1053,q),
(319,1055,o),
(334,1055,qs),
(385,1055,o),
(385,989,qs),
(385,946,o),
(360,772,o),
(356,721,q),
(453,721,ls),
(568,721,o),
(797,772,o),
(889,811,o),
(932,811,qs),
(985,811,o),
(985,766,qs),
(985,725,o),
(860,516,o),
(778,516,o),
(612,612,o),
(440,627,qs),
(356,633,l),
(352,633,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
39 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 7 8 7 136 0 10 8 9 8 10 9 131 0 9 1 8 9 1 129 0 1 0 8 1 0 129 0 2 3 6 3 2 6 131 0 4 5 4 137 11 1 0 0 3 2 0 3 109 0 8 8 33 77 0 6 6 5 98 0 5 5 34 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 7 8 7 136 0 10 8 9 8 10 9 131 0 9 1 8 9 1 129 0 1 0 8 1 0 129 0 2 3 6 3 2 6 131 0 4 5 4 137 11 1 0 0 3 2 0 3 109 0 6 0 5 4 6 5 110 0 8 8 33 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 8 7 136 0 8 10 8 136 0 10 9 10 136 0 9 1 9 136 0 1 0 1 136 0 2 3 6 3 2 6 131 0 4 5 4 137 11 1 0 0 3 2 0 3 109 0 6 5 5 6 93 0 6 6 5 98 0 5 6 5 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 52 50 48 46 43 42 35 33 26 24 22 21 18 17 13 11 9 7 4 3 0 53 1 53 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1062;
}
);
note = u10346;
},
{
glyphname = u10347;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1116,82,o),
(1059,37,qs),
(1000,-8,o),
(965,-8,qs),
(940,-8,o),
(928,8,qs),
(856,106,o),
(733,244,o),
(639,352,o),
(621,352,qs),
(598,352,o),
(530,285,o),
(303,14,o),
(215,-147,o),
(188,-147,qs),
(172,-147,o),
(102,-74,qs),
(59,-29,o),
(59,2,qs),
(59,18,o),
(76,29,qs),
(142,72,o),
(279,190,qs),
(406,299,o),
(520,418,o),
(520,446,qs),
(520,466,o),
(217,725,o),
(76,813,o),
(76,885,qs),
(76,922,o),
(133,977,o),
(229,977,qs),
(387,977,o),
(399,944,qs),
(415,901,o),
(455,836,o),
(563,676,o),
(631,590,o),
(643,590,qs),
(663,590,o),
(741,700,o),
(793,797,o),
(793,825,qs),
(793,835,o),
(784,872,o),
(784,893,qs),
(784,950,o),
(868,981,o),
(987,995,o),
(1047,995,qs),
(1092,995,o),
(1118,932,o),
(1118,895,qs),
(1118,807,o),
(915,666,o),
(741,500,o),
(741,477,qs),
(741,454,o),
(840,350,o),
(1044,172,o),
(1069,172,qs),
(1098,172,o),
(1116,146,o),
(1116,121,q),
(1116,121,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 6 5 6 0 5 131 0 5 2 6 5 2 129 0 2 3 6 2 3 129 0 6 6 33 77 0 4 4 3 97 0 3 3 34 77 0 1 1 34 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 6 5 6 0 5 131 0 5 2 6 5 2 129 0 2 3 6 2 3 129 0 4 0 3 1 4 3 109 0 1 1 6 97 0 6 6 33 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
62 60 55 54 51 49 38 25 41 34 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1196;
}
);
note = u10347;
},
{
glyphname = u10348;
kernLeft = u10334;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,491,o),
(518,563,o),
(618,563,o),
(688,494,o),
(688,393,o),
(618,324,o),
(518,324,o),
(449,393,o),
(449,442,q),
(449,442,l)
);
},
{
closed = 1;
nodes = (
(59,594,o),
(197,829,o),
(430,967,o),
(707,967,o),
(942,829,o),
(1077,596,o),
(1077,319,o),
(942,86,o),
(707,-51,o),
(430,-51,o),
(197,86,o),
(59,320,o),
(59,457,q),
(59,457,l)
);
},
{
closed = 1;
nodes = (
(254,351,o),
(338,172,o),
(483,68,o),
(655,68,o),
(801,172,o),
(885,352,o),
(885,563,o),
(801,743,o),
(655,848,o),
(483,848,o),
(338,743,o),
(254,563,o),
(254,457,q),
(254,457,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 4 0 1 109 0 5 5 2 97 0 2 2 33 77 0 4 4 3 97 0 3 3 34 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 5 0 2 5 109 0 0 0 1 4 0 1 109 0 4 4 3 97 0 3 3 34 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 5 0 2 5 109 0 0 0 1 4 0 1 109 0 4 3 3 4 93 0 4 4 3 97 0 3 4 3 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
21 23 21 22 19 18 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1155;
}
);
note = u10348;
},
{
glyphname = u10349;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,844,o),
(309,727,o),
(309,676,qs),
(309,610,o),
(406,492,o),
(487,385,o),
(518,385,qs),
(538,385,o),
(629,502,o),
(723,647,o),
(723,778,o),
(622,844,o),
(524,844,q),
(524,844,l)
);
},
{
closed = 1;
nodes = (
(-63,-279,o),
(-63,-215,qs),
(-63,-174,o),
(31,-123,o),
(283,70,o),
(383,170,o),
(383,205,qs),
(383,236,o),
(244,340,o),
(61,590,o),
(61,676,qs),
(61,834,o),
(344,946,o),
(514,946,qs),
(694,946,o),
(942,858,o),
(942,717,qs),
(942,615,o),
(762,365,o),
(684,256,o),
(684,236,qs),
(684,218,o),
(760,160,o),
(1061,0,o),
(1061,-49,qs),
(1061,-74,o),
(938,-186,o),
(885,-186,o),
(764,-104,o),
(623,16,o),
(565,102,o),
(543,102,qs),
(535,102,o),
(436,-27,o),
(186,-238,o),
(72,-279,o),
(37,-279,q),
(37,-279,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 2 4 2 136 0 4 3 4 136 0 3 1 3 136 0 1 0 1 136 6 1 0 0 5 98 0 5 5 32 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
7 1 2 4 2 136 0 4 3 4 136 0 3 1 3 136 0 1 0 1 136 6 1 0 5 5 0 93 6 1 0 0 5 98 0 5 0 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
15 14 1 0 38 36 24 23 20 18 14 51 15 50 7 5 0 13 1 12 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1021;
}
);
note = u10349;
},
{
glyphname = u1034A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(584,463,o),
(571,193,o),
(567,80,o),
(524,-133,o),
(469,-244,o),
(412,-244,qs),
(351,-244,o),
(336,-197,qs),
(330,-172,o),
(330,-76,o),
(336,-4,qs),
(348,137,o),
(360,442,qs),
(366,643,o),
(367,760,qs),
(367,852,o),
(365,889,q),
(131,719,ls),
(113,707,o),
(74,725,o),
(59,768,o),
(59,786,qs),
(59,802,o),
(74,844,o),
(88,854,qs),
(475,1135,ls),
(485,1143,o),
(498,1143,qs),
(508,1143,o),
(518,1137,qs),
(905,874,ls),
(921,864,o),
(934,819,o),
(934,807,qs),
(934,793,o),
(922,748,o),
(883,725,o),
(864,737,qs),
(602,915,l),
(596,854,o),
(590,674,q),
(590,674,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
24 13 2 3 0 74 0 0 0 118 36 34 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = u1034A;
},
{
glyphname = uni16A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1147,l),
(684,1491,l),
(807,1360,l),
(336,887,l),
(336,651,l),
(694,1004,l),
(815,885,l),
(336,412,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
11 6 4 3 2 1 6 1 0 1 76 5 1 0 74 0 0 1 0 133 0 1 1 118 17 23 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni16A0;
unicode = 5792;
},
{
glyphname = uni16A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(627,1346,o),
(559,1286,o),
(461,1286,o),
(391,1354,o),
(391,1448,o),
(453,1516,o),
(567,1516,o),
(627,1442,o),
(627,1389,q),
(627,1389,l)
);
},
{
closed = 1;
nodes = (
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,973,l),
(684,1317,l),
(807,1186,l),
(336,713,l),
(336,541,l),
(694,891,l),
(815,772,l),
(336,299,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
15 1 1 2 21 16 14 13 12 11 6 3 1 2 76 0 2 0 1 0 2 1 128 0 3 1 3 134 0 0 2 1 0 89 0 0 0 1 97 0 1 0 1 81 17 26 19 18 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 921;
}
);
note = uni16A1;
unicode = 5793;
},
{
glyphname = uni16A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1067,80,l),
(879,-20,l),
(336,1018,l),
(336,0,l),
(106,0,l),
(106,1470,l),
(330,1493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
5 3 0 3 0 74 4 1 0 73 0 0 0 118 17 1 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1171;
}
);
note = uni16A2;
unicode = 5794;
},
{
glyphname = uni16A3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1067,80,l),
(879,-20,l),
(336,1018,l),
(336,0,l),
(106,0,l),
(106,1470,l),
(330,1493,l)
);
},
{
closed = 1;
nodes = (
(629,0,l),
(455,0,l),
(455,276,l),
(629,276,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 1 0 2 1 76 3 0 2 2 74 4 1 0 73 3 1 2 0 0 2 87 3 1 2 2 0 95 1 1 0 2 0 79 7 7 7 10 7 10 22 17 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1171;
}
);
note = uni16A3;
unicode = 5795;
},
{
glyphname = uni16A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,90,o),
(612,57,qs),
(585,41,o),
(551,43,qs),
(477,43,o),
(442,98,qs),
(424,127,o),
(424,164,qs),
(424,203,o),
(449,236,qs),
(482,279,o),
(551,279,qs),
(598,279,o),
(666,211,o),
(666,156,q),
(666,156,l)
);
},
{
closed = 1;
nodes = (
(1067,80,l),
(879,-20,l),
(336,1018,l),
(336,0,l),
(106,0,l),
(106,1470,l),
(330,1493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
21 1 1 0 1 76 19 16 2 0 74 20 1 2 73 0 2 1 2 134 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 21 38 34 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 1171;
}
);
note = uni16A4;
unicode = 5796;
},
{
glyphname = uni16A5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1139,80,l),
(950,-20,l),
(336,1018,l),
(336,727,l),
(707,80,l),
(518,-20,l),
(336,289,l),
(336,0,l),
(106,0,l),
(106,1470,l),
(330,1493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
9 7 6 5 3 0 6 0 74 8 4 2 0 73 0 0 0 118 17 1 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1243;
}
);
note = uni16A5;
unicode = 5797;
},
{
glyphname = uni16A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1163,l),
(854,852,l),
(854,631,l),
(336,299,l),
(336,0,l)
);
},
{
closed = 1;
nodes = (
(336,944,l),
(336,522,l),
(696,727,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
10 9 8 3 2 1 0 7 1 0 1 76 0 0 1 0 133 0 1 1 118 17 20 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 958;
}
);
note = uni16A6;
unicode = 5798;
},
{
glyphname = uni16A7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,686,o),
(512,662,qs),
(494,652,o),
(471,651,qs),
(416,651,o),
(391,694,qs),
(379,714,o),
(381,739,qs),
(381,768,o),
(397,791,qs),
(422,824,o),
(471,821,qs),
(506,821,o),
(530,799,qs),
(555,774,o),
(555,733,q),
(555,733,l)
);
},
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1202,l),
(895,852,l),
(895,631,l),
(336,270,l),
(336,0,l)
);
},
{
closed = 1;
nodes = (
(336,983,l),
(336,492,l),
(739,727,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
26 20 19 3 0 2 27 8 2 1 0 25 18 17 3 3 1 3 76 0 2 0 2 133 0 3 1 3 134 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 17 24 38 35 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 999;
}
);
note = uni16A7;
unicode = 5799;
},
{
glyphname = uni16A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,819,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(670,1212,l),
(578,1079,l),
(336,1270,l),
(336,1053,l),
(678,772,l),
(578,627,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
10 9 4 3 2 1 6 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 782;
}
);
note = uni16A8;
unicode = 5800;
},
{
glyphname = uni16A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1485,l),
(600,1266,l),
(784,1491,l),
(918,1399,l),
(633,1036,l),
(336,1266,l),
(336,1053,l),
(608,829,l),
(784,1044,l),
(918,952,l),
(633,592,l),
(336,819,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
10 8 7 6 5 4 3 2 1 0 10 1 0 1 76 9 1 0 74 0 0 1 0 133 0 1 1 118 17 43 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = uni16A9;
unicode = 5801;
},
{
glyphname = uni16AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1485,l),
(600,1266,l),
(784,1491,l),
(918,1399,l),
(633,1036,l),
(336,1266,l),
(336,1053,l),
(750,741,l),
(633,592,l),
(336,819,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
8 6 5 4 3 2 1 0 8 1 0 1 76 7 1 0 74 0 0 1 0 133 0 1 1 118 17 41 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = uni16AA;
unicode = 5802;
},
{
glyphname = uni16AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,819,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1485,l),
(846,1071,l),
(754,938,l),
(336,1266,l),
(336,1053,l),
(844,641,l),
(743,496,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
11 10 4 3 2 1 6 1 0 1 76 0 0 1 0 133 0 1 1 118 17 37 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uni16AB;
unicode = 5803;
},
{
glyphname = uni16AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(897,362,l),
(655,451,l),
(655,0,l),
(426,0,l),
(426,537,l),
(106,653,l),
(172,799,l),
(426,702,l),
(426,911,l),
(113,1032,l),
(170,1180,l),
(426,1083,l),
(426,1487,l),
(655,1487,l),
(655,995,l),
(956,883,l),
(897,733,l),
(655,825,l),
(655,618,l),
(963,508,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
19 18 17 14 13 12 11 10 9 8 7 4 3 2 1 0 16 1 0 1 76 0 0 1 0 133 0 1 1 118 25 21 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1067;
}
);
note = uni16AC;
unicode = 5804;
},
{
glyphname = uni16AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,504,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1167,l),
(670,893,l),
(578,760,l),
(336,948,l),
(336,735,l),
(678,457,l),
(578,309,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
11 10 5 4 3 2 1 7 1 0 1 76 0 0 1 0 133 0 1 1 118 17 22 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 782;
}
);
note = uni16AD;
unicode = 5805;
},
{
glyphname = uni16AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,0,l),
(449,504,l),
(207,309,l),
(106,457,l),
(449,735,l),
(449,948,l),
(207,760,l),
(115,893,l),
(449,1167,l),
(449,1487,l),
(678,1487,l),
(678,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 8 7 6 5 4 3 2 8 1 0 1 76 0 0 1 0 133 0 1 1 118 25 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 782;
}
);
note = uni16AE;
unicode = 5806;
},
{
glyphname = uni16AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,0,l),
(414,451,l),
(172,362,l),
(106,508,l),
(414,618,l),
(414,825,l),
(170,733,l),
(113,883,l),
(414,995,l),
(414,1487,l),
(641,1487,l),
(641,1083,l),
(897,1180,l),
(956,1032,l),
(641,911,l),
(641,702,l),
(897,799,l),
(963,653,l),
(641,537,l),
(641,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
17 16 15 14 13 12 11 10 7 6 5 4 3 2 1 0 16 1 0 1 76 0 0 1 0 133 0 1 1 118 25 24 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1067;
}
);
note = uni16AF;
unicode = 5807;
},
{
glyphname = uni16B0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,0,l),
(414,451,l),
(172,362,l),
(106,508,l),
(414,618,l),
(414,825,l),
(170,733,l),
(113,883,l),
(414,995,l),
(414,1487,l),
(641,1487,l),
(641,1083,l),
(897,1180,l),
(956,1032,l),
(641,911,l),
(641,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
13 12 11 10 9 8 7 6 3 2 1 0 12 1 0 1 76 0 0 1 0 133 0 1 1 118 25 20 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1060;
}
);
note = uni16B0;
unicode = 5808;
},
{
glyphname = uni16B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(854,1176,l),
(854,952,l),
(459,702,l),
(922,104,l),
(780,-18,l),
(336,559,l),
(336,0,l)
);
},
{
closed = 1;
nodes = (
(336,1268,l),
(336,846,l),
(696,1051,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
12 11 10 5 4 3 2 0 8 1 0 1 76 1 1 1 73 0 0 1 0 133 0 1 1 118 17 22 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = uni16B1;
unicode = 5809;
},
{
glyphname = uni16B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(549,166,l),
(106,612,l),
(106,793,l),
(549,1235,l),
(719,1079,l),
(330,702,l),
(696,322,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 823;
}
);
note = uni16B2;
unicode = 5810;
},
{
glyphname = uni16B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,788,l),
(934,182,l),
(782,31,l),
(336,471,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 5 4 3 4 0 1 1 76 2 1 1 0 1 133 0 0 0 118 0 0 0 7 0 7 17 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1038;
}
);
note = uni16B3;
unicode = 5811;
},
{
glyphname = uni16B4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1147,l),
(684,1491,l),
(807,1360,l),
(336,887,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 0 3 1 0 1 76 2 1 0 74 0 0 1 0 133 0 1 1 118 17 20 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 911;
}
);
note = uni16B4;
unicode = 5812;
},
{
glyphname = uni16B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(604,1295,o),
(557,1272,qs),
(537,1262,o),
(512,1260,q),
(449,1260,o),
(424,1309,qs),
(412,1329,o),
(412,1356,qs),
(412,1385,o),
(430,1413,q),
(457,1448,o),
(512,1448,qs),
(549,1448,o),
(578,1421,qs),
(604,1393,o),
(604,1350,q),
(604,1350,l)
);
},
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,944,l),
(770,1376,l),
(893,1245,l),
(336,684,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
19 1 1 0 20 18 17 3 3 1 2 76 0 2 0 2 133 0 3 1 3 134 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 17 25 22 35 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 997;
}
);
note = uni16B5;
unicode = 5813;
},
{
glyphname = uni16B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,0,l),
(274,508,l),
(196,539,o),
(106,670,o),
(106,752,qs),
(106,836,o),
(195,977,o),
(274,1004,q),
(274,1487,l),
(504,1487,l),
(504,997,l),
(522,989,o),
(537,979,q),
(938,1376,l),
(1061,1245,l),
(643,821,l),
(655,776,o),
(655,723,qs),
(655,653,o),
(573,539,o),
(504,510,q),
(504,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
19 13 10 7 6 0 6 1 0 1 76 0 0 1 0 133 0 1 1 118 24 27 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1165;
}
);
note = uni16B6;
unicode = 5814;
},
{
glyphname = uni16B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(797,-47,l),
(557,485,l),
(309,-47,l),
(119,43,l),
(434,737,l),
(106,1448,l),
(309,1536,l),
(553,1004,l),
(797,1536,l),
(1001,1450,l),
(676,739,l),
(999,41,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 1105;
}
);
note = uni16B7;
unicode = 5815;
},
{
glyphname = uni16B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(797,-47,l),
(557,485,l),
(309,-47,l),
(119,43,l),
(342,530,l),
(129,743,l),
(336,948,l),
(106,1448,l),
(309,1536,l),
(551,1004,l),
(797,1536,l),
(999,1448,l),
(774,956,l),
(981,743,l),
(774,526,l),
(999,41,l)
);
},
{
closed = 1;
nodes = (
(299,743,l),
(395,649,l),
(434,737,l),
(389,834,l)
);
},
{
closed = 1;
nodes = (
(809,743,l),
(717,834,l),
(674,739,l),
(717,651,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
23 21 19 17 12 4 3 50 
CALL[ ]	/* CallFunction */";
};
width = 1103;
}
);
note = uni16B8;
unicode = 5816;
},
{
glyphname = uni16B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(854,1176,l),
(854,952,l),
(336,623,l),
(336,0,l)
);
},
{
closed = 1;
nodes = (
(336,1268,l),
(336,846,l),
(696,1051,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
9 8 7 2 1 0 6 1 0 1 76 0 0 1 0 133 0 1 1 118 17 19 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 958;
}
);
note = uni16B9;
unicode = 5817;
},
{
glyphname = uni16BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(829,0,l),
(829,387,l),
(336,772,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1030,l),
(829,645,l),
(829,1487,l),
(1059,1487,l),
(1059,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 8 3 2 4 2 0 1 76 1 1 0 2 0 133 3 1 2 2 118 19 17 19 16 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1163;
}
);
note = uni16BA;
unicode = 5818;
},
{
glyphname = uni16BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(829,0,l),
(829,141,l),
(336,526,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1317,l),
(829,934,l),
(829,1487,l),
(1059,1487,l),
(1059,0,l)
);
},
{
closed = 1;
nodes = (
(336,782,l),
(829,399,l),
(829,676,l),
(336,1061,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
15 14 13 12 9 8 3 2 8 2 0 1 76 1 1 0 2 0 133 3 1 2 2 118 19 17 19 16 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1163;
}
);
note = uni16BB;
unicode = 5819;
},
{
glyphname = uni16BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,0,l),
(348,532,l),
(215,410,l),
(109,526,l),
(348,750,l),
(106,971,l),
(213,1085,l),
(348,963,l),
(348,1487,l),
(578,1487,l),
(578,961,l),
(719,1090,l),
(825,973,l),
(584,750,l),
(827,528,l),
(721,412,l),
(578,541,l),
(578,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 0 14 1 0 1 76 0 0 1 0 133 0 1 1 118 24 23 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 931;
}
);
note = uni16BC;
unicode = 5820;
},
{
glyphname = uni16BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,0,l),
(229,455,l),
(168,488,o),
(106,592,o),
(106,653,qs),
(106,716,o),
(168,831,o),
(229,860,q),
(229,1487,l),
(461,1487,l),
(461,858,l),
(520,825,o),
(578,698,o),
(578,629,qs),
(578,570,o),
(512,477,o),
(461,453,q),
(461,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
15 9 6 0 4 1 0 1 76 0 0 1 0 133 0 1 1 118 24 23 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = uni16BD;
unicode = 5821;
},
{
glyphname = uni16BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(897,582,l),
(655,670,l),
(655,0,l),
(426,0,l),
(426,754,l),
(106,872,l),
(172,1016,l),
(426,922,l),
(426,1487,l),
(655,1487,l),
(655,836,l),
(963,725,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
11 10 9 6 5 4 3 0 8 1 0 1 76 0 0 1 0 133 0 1 1 118 21 17 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1067;
}
);
note = uni16BE;
unicode = 5822;
},
{
glyphname = uni16BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(575,582,l),
(336,670,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,836,l),
(641,725,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
7 6 5 0 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 17 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni16BF;
unicode = 5823;
},
{
glyphname = uni16C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(897,582,l),
(743,637,l),
(729,619,o),
(684,578,o),
(655,563,q),
(655,0,l),
(426,0,l),
(426,555,l),
(350,586,o),
(266,709,o),
(266,784,qs),
(266,798,o),
(268,811,q),
(106,872,l),
(172,1016,l),
(330,956,l),
(371,1001,o),
(426,1024,q),
(426,1487,l),
(655,1487,l),
(655,1010,l),
(706,981,o),
(776,862,o),
(782,791,q),
(963,725,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
24 23 22 19 16 13 10 9 8 6 3 11 1 0 1 76 0 0 1 0 133 0 1 1 118 28 20 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1067;
}
);
note = uni16C0;
unicode = 5824;
},
{
glyphname = uni16C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = uni16C1;
unicode = 5825;
},
{
glyphname = uni16C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,0,l),
(229,457,l),
(168,490,o),
(106,596,o),
(106,655,qs),
(106,718,o),
(137,778,qs),
(168,835,o),
(229,864,q),
(229,1487,l),
(461,1487,l),
(461,860,l),
(520,827,o),
(578,702,o),
(578,633,qs),
(578,574,o),
(512,481,o),
(461,455,q),
(461,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
16 9 6 0 4 1 0 1 76 0 0 1 0 133 0 1 1 118 25 23 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = uni16C2;
unicode = 5826;
},
{
glyphname = uni16C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(549,387,l),
(106,836,l),
(106,1016,l),
(549,1458,l),
(719,1303,l),
(330,926,l),
(696,545,l)
);
},
{
closed = 1;
nodes = (
(981,549,l),
(592,926,l),
(762,1081,l),
(1202,639,l),
(1202,459,l),
(762,10,l),
(612,168,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 7 5 2 2 50 
CALL[ ]	/* CallFunction */";
};
width = 1306;
}
);
note = uni16C3;
unicode = 5827;
},
{
glyphname = uni16C4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,424,l),
(618,0,l),
(389,0,l),
(389,426,l),
(106,707,l),
(106,778,l),
(389,1059,l),
(389,1487,l),
(618,1487,l),
(618,1059,l),
(901,778,l),
(901,707,l)
);
},
{
closed = 1;
nodes = (
(389,879,l),
(252,741,l),
(389,606,l)
);
},
{
closed = 1;
nodes = (
(618,879,l),
(618,606,l),
(756,741,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
17 16 15 14 13 11 10 7 6 5 4 1 0 13 1 0 1 76 0 0 1 0 133 0 1 1 118 21 18 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uni16C4;
unicode = 5828;
},
{
glyphname = uni16C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,0,l),
(414,670,l),
(172,582,l),
(106,725,l),
(414,836,l),
(414,1487,l),
(641,1487,l),
(641,922,l),
(897,1016,l),
(963,872,l),
(641,754,l),
(641,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 1 0 133 0 1 1 118 21 20 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1067;
}
);
note = uni16C5;
unicode = 5829;
},
{
glyphname = uni16C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,0,l),
(414,670,l),
(172,582,l),
(106,725,l),
(414,836,l),
(414,1487,l),
(641,1487,l),
(641,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
5 4 3 2 4 1 0 1 76 0 0 1 0 133 0 1 1 118 21 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni16C6;
unicode = 5830;
},
{
glyphname = uni16C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,1079,l),
(670,1270,l),
(670,0,l),
(440,0,l),
(106,274,l),
(199,410,l),
(440,217,l),
(440,1487,l),
(670,1487,l),
(1006,1212,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
9 8 7 4 3 2 6 1 0 1 76 0 0 1 0 133 0 1 1 118 20 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1110;
}
);
note = uni16C7;
unicode = 5831;
},
{
glyphname = uni16C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(733,-12,l),
(524,158,l),
(336,2,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1485,l),
(524,1329,l),
(733,1499,l),
(838,1372,l),
(524,1116,l),
(336,1268,l),
(336,219,l),
(524,371,l),
(838,113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
15 13 6 4 3 2 1 7 1 0 1 76 5 1 0 74 14 1 1 73 0 0 1 0 133 0 1 1 118 17 39 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 942;
}
);
note = uni16C8;
unicode = 5832;
},
{
glyphname = uni16C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,0,l),
(578,887,l),
(106,1360,l),
(227,1491,l),
(578,1147,l),
(578,1487,l),
(807,1487,l),
(807,1147,l),
(1157,1491,l),
(1280,1360,l),
(807,887,l),
(807,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
9 8 6 3 1 0 6 1 0 1 76 7 2 2 0 74 0 0 1 0 133 0 1 1 118 21 20 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1384;
}
);
note = uni16C9;
unicode = 5833;
},
{
glyphname = uni16CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,-14,l),
(106,307,l),
(106,510,l),
(391,733,l),
(106,954,l),
(106,1159,l),
(524,1485,l),
(645,1323,l),
(303,1057,l),
(616,815,l),
(616,649,l),
(305,410,l),
(645,147,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 751;
}
);
note = uni16CA;
unicode = 5834;
},
{
glyphname = uni16CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,1487,l),
(336,1487,l),
(336,645,l),
(829,1030,l),
(1059,1030,l),
(1059,0,l),
(829,0,l),
(829,772,l),
(336,387,l),
(106,387,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
6 1 2 3 1 1 76 0 2 1 2 133 0 1 3 1 133 4 1 3 0 3 133 0 0 0 118 0 0 0 9 0 9 18 17 18 5 6 25 
CALL[ ]	/* CallFunction */";
};
width = 1163;
}
);
note = uni16CB;
unicode = 5835;
},
{
glyphname = uni16CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,700,l),
(106,1487,l),
(336,1487,l),
(336,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = uni16CC;
unicode = 5836;
},
{
glyphname = uni16CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,674,o),
(442,555,o),
(344,555,qs),
(246,555,o),
(106,686,o),
(106,780,qs),
(106,843,o),
(168,961,o),
(227,987,q),
(227,1487,l),
(457,1487,l),
(457,987,l),
(516,956,o),
(578,834,o),
(578,758,q),
(578,758,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
6 3 2 1 0 1 76 0 0 1 0 133 0 1 1 118 38 20 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = uni16CD;
unicode = 5837;
},
{
glyphname = uni16CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,741,l),
(1157,1085,l),
(1280,954,l),
(807,481,l),
(578,481,l),
(106,954,l),
(227,1085,l),
(578,741,l),
(578,1491,l),
(807,1491,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
8 7 6 3 2 1 6 0 1 1 76 2 1 1 0 1 133 0 0 0 118 0 0 0 9 0 9 20 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1384;
}
);
note = uni16CE;
unicode = 5838;
},
{
glyphname = uni16CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,4,l),
(578,1231,l),
(227,887,l),
(106,1018,l),
(578,1491,l),
(807,1491,l),
(1280,1018,l),
(1157,887,l),
(807,1231,l),
(807,4,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
7 6 5 2 1 0 6 1 0 1 76 0 0 1 0 133 0 1 1 118 20 19 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1384;
}
);
note = uni16CF;
unicode = 5839;
},
{
glyphname = uni16D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,1266,l),
(199,938,l),
(106,1071,l),
(616,1485,l),
(616,1487,l),
(846,1487,l),
(846,0,l),
(616,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
6 5 4 3 1 0 1 76 0 0 1 0 133 2 1 1 1 118 0 0 0 7 0 7 17 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uni16D0;
unicode = 5840;
},
{
glyphname = uni16D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,516,o),
(903,455,q),
(876,430,o),
(846,416,q),
(846,0,l),
(616,0,l),
(616,416,l),
(579,432,o),
(549,461,qs),
(473,531,o),
(473,735,o),
(541,807,qs),
(574,842,o),
(616,858,q),
(616,1266,l),
(199,938,l),
(106,1071,l),
(616,1485,l),
(616,1487,l),
(846,1487,l),
(846,854,l),
(887,834,o),
(913,799,qs),
(977,721,o),
(977,606,q),
(977,606,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
21 18 11 10 9 8 4 7 1 0 1 76 0 0 1 0 133 0 1 1 118 29 21 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1081;
}
);
note = uni16D1;
unicode = 5841;
},
{
glyphname = uni16D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(854,1176,l),
(854,952,l),
(524,743,l),
(854,535,l),
(854,311,l),
(336,0,l)
);
},
{
closed = 1;
nodes = (
(336,1268,l),
(336,846,l),
(696,1051,l)
);
},
{
closed = 1;
nodes = (
(696,436,l),
(336,641,l),
(336,219,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
14 13 12 11 10 9 4 3 2 1 0 11 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 958;
}
);
note = uni16D2;
unicode = 5842;
},
{
glyphname = uni16D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1083,l),
(592,1180,l),
(649,1032,l),
(336,911,l),
(336,702,l),
(590,799,l),
(655,653,l),
(336,537,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 6 5 4 3 2 1 0 8 1 0 1 76 0 0 1 0 133 0 1 1 118 17 24 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni16D3;
unicode = 5843;
},
{
glyphname = uni16D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(549,1009,o),
(494,963,o),
(416,963,o),
(360,1016,o),
(360,1092,o),
(410,1147,o),
(500,1147,o),
(549,1087,o),
(549,1044,q),
(549,1044,l)
);
},
{
closed = 1;
nodes = (
(549,385,o),
(494,338,o),
(416,340,o),
(360,391,o),
(360,467,o),
(410,520,o),
(500,520,o),
(549,463,o),
(549,420,q),
(549,420,l)
);
},
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(854,1176,l),
(854,952,l),
(524,743,l),
(854,535,l),
(854,311,l),
(336,0,l)
);
},
{
closed = 1;
nodes = (
(336,1268,l),
(336,846,l),
(696,1051,l)
);
},
{
closed = 1;
nodes = (
(696,436,l),
(336,641,l),
(336,219,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
30 24 2 0 4 31 1 1 0 32 29 23 22 21 5 2 1 33 1 3 2 34 20 2 5 3 5 76 0 4 0 4 133 0 5 3 5 134 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 17 24 19 21 19 18 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 958;
}
);
note = uni16D4;
unicode = 5844;
},
{
glyphname = uni16D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1090,l),
(621,1509,l),
(807,1389,l),
(358,743,l),
(811,92,l),
(627,-27,l),
(336,393,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
6 4 3 2 0 5 1 0 1 76 5 1 0 74 1 1 1 73 0 0 1 0 133 0 1 1 118 17 23 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 917;
}
);
note = uni16D5;
unicode = 5845;
},
{
glyphname = uni16D6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1034,0,l),
(1034,1233,l),
(684,883,l),
(336,1233,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(684,1143,l),
(1034,1487,l),
(1264,1487,l),
(1264,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 8 7 2 4 2 0 1 76 1 1 0 2 0 133 3 1 2 2 118 20 17 18 16 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1368;
}
);
note = uni16D6;
unicode = 5846;
},
{
glyphname = uni16D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1034,0,l),
(1034,532,l),
(684,883,l),
(336,530,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(684,1143,l),
(1034,1487,l),
(1264,1487,l),
(1264,0,l)
);
},
{
closed = 1;
nodes = (
(336,1233,l),
(336,797,l),
(555,1014,l)
);
},
{
closed = 1;
nodes = (
(1034,1233,l),
(815,1014,l),
(1034,797,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
17 16 14 13 12 9 8 7 2 9 2 0 1 76 1 1 0 2 0 133 3 1 2 2 118 20 17 18 16 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1368;
}
);
note = uni16D7;
unicode = 5847;
},
{
glyphname = uni16D8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1159,1344,o),
(1020,1102,o),
(897,1030,qs),
(825,987,o),
(748,973,q),
(748,0,l),
(518,0,l),
(518,973,l),
(440,989,o),
(369,1030,qs),
(248,1102,o),
(106,1343,o),
(106,1487,q),
(303,1487,l),
(303,1352,o),
(401,1253,qs),
(454,1200,o),
(518,1178,q),
(518,1487,l),
(748,1487,l),
(748,1178,l),
(814,1203,o),
(866,1255,qs),
(962,1351,o),
(963,1487,q),
(1159,1487,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
20 17 7 4 4 2 0 1 76 4 3 1 3 0 2 0 133 0 2 2 118 0 0 0 25 0 25 22 21 21 5 6 25 
CALL[ ]	/* CallFunction */";
};
width = 1265;
}
);
note = uni16D8;
unicode = 5848;
},
{
glyphname = uni16D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,0,l),
(227,1073,l),
(166,1106,o),
(106,1210,o),
(106,1270,qs),
(106,1364,o),
(229,1501,o),
(344,1501,qs),
(459,1501,o),
(578,1354,o),
(578,1245,qs),
(578,1192,o),
(516,1098,o),
(457,1069,q),
(457,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
12 0 2 1 0 1 76 0 0 1 0 133 0 1 1 118 22 37 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = uni16D9;
unicode = 5849;
},
{
glyphname = uni16DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,1487,l),
(336,1487,l),
(336,1485,l),
(846,1071,l),
(754,938,l),
(336,1266,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 0 3 1 0 1 76 0 0 1 0 133 0 1 1 118 17 35 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uni16DA;
unicode = 5850;
},
{
glyphname = uni16DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,0,l),
(248,418,l),
(213,434,o),
(180,463,qs),
(104,533,o),
(106,733,o),
(172,807,qs),
(203,842,o),
(248,858,q),
(248,1487,l),
(475,1487,l),
(475,1485,l),
(987,1071,l),
(895,938,l),
(475,1266,l),
(475,854,l),
(516,834,o),
(545,801,qs),
(608,721,o),
(608,606,qs),
(608,516,o),
(537,455,qs),
(508,430,o),
(475,416,q),
(475,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
22 15 11 10 9 8 0 7 1 0 1 76 0 0 1 0 133 0 1 1 118 25 44 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1091;
}
);
note = uni16DB;
unicode = 5851;
},
{
glyphname = uni16DC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(627,229,l),
(549,229,l),
(106,676,l),
(106,856,l),
(549,1298,l),
(627,1298,l),
(1069,856,l),
(1069,676,l)
);
},
{
closed = 1;
nodes = (
(588,1018,l),
(330,768,l),
(588,500,l),
(846,768,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
11 10 9 7 4 3 0 7 1 0 1 76 0 0 1 0 133 0 1 1 118 19 17 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1173;
}
);
note = uni16DC;
unicode = 5852;
},
{
glyphname = uni16DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,1286,l),
(266,1460,l),
(604,1186,l),
(944,1456,l),
(1081,1303,l),
(774,1047,l),
(1094,788,l),
(1094,598,l),
(774,342,l),
(1087,80,l),
(948,-84,l),
(602,203,l),
(256,-78,l),
(115,98,l),
(426,346,l),
(119,598,l),
(119,799,l),
(422,1038,l)
);
},
{
closed = 1;
nodes = (
(600,483,l),
(862,692,l),
(600,897,l),
(352,690,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 18 15 6 2 50 
CALL[ ]	/* CallFunction */";
};
width = 1198;
}
);
note = uni16DD;
unicode = 5853;
},
{
glyphname = uni16DE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1098,0,l),
(717,555,l),
(336,0,l),
(106,0,l),
(106,1487,l),
(336,1487,l),
(717,932,l),
(1098,1487,l),
(1327,1487,l),
(1327,0,l)
);
},
{
closed = 1;
nodes = (
(336,375,l),
(584,739,l),
(336,1100,l)
);
},
{
closed = 1;
nodes = (
(1098,1096,l),
(852,735,l),
(1098,387,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 14 12 11 7 2 6 2 0 1 76 1 1 0 2 0 133 3 1 2 2 118 18 17 18 16 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1431;
}
);
note = uni16DE;
unicode = 5854;
},
{
glyphname = uni16DF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1010,-72,l),
(629,334,l),
(254,-63,l),
(121,76,l),
(498,473,l),
(106,889,l),
(631,1446,l),
(1157,891,l),
(762,471,l),
(1149,63,l)
);
},
{
closed = 1;
nodes = (
(631,1165,l),
(367,887,l),
(629,612,l),
(891,891,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 10 8 2 2 50 
CALL[ ]	/* CallFunction */";
};
width = 1261;
}
);
note = uni16DF;
unicode = 5855;
},
{
glyphname = uni16E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(606,0,l),
(606,1264,l),
(418,1112,l),
(106,1370,l),
(211,1495,l),
(418,1325,l),
(606,1489,l),
(836,1487,l),
(1026,1325,l),
(1235,1495,l),
(1339,1370,l),
(1026,1112,l),
(836,1264,l),
(836,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
11 10 9 7 4 2 1 0 8 1 0 1 76 8 3 2 0 74 0 0 1 0 133 0 1 1 118 22 21 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1443;
}
);
note = uni16E0;
unicode = 5856;
},
{
glyphname = uni16E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(686,1012,l),
(915,1235,l),
(1036,1104,l),
(698,764,l),
(1038,424,l),
(915,293,l),
(686,514,l),
(686,0,l),
(459,0,l),
(459,514,l),
(227,291,l),
(106,422,l),
(446,764,l),
(106,1104,l),
(229,1237,l),
(459,1012,l),
(459,1491,l),
(686,1491,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
16 15 14 13 12 11 10 7 6 5 4 3 2 1 14 0 1 1 76 2 1 1 0 1 133 0 0 0 118 0 0 0 17 0 17 24 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1142;
}
);
note = uni16E1;
unicode = 5857;
},
{
glyphname = uni16E2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(608,0,l),
(418,158,l),
(211,-12,l),
(106,113,l),
(418,371,l),
(608,219,l),
(608,1491,l),
(838,1491,l),
(1028,1329,l),
(1237,1499,l),
(1339,1372,l),
(1028,1116,l),
(838,1268,l),
(838,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 9 8 7 4 2 1 0 8 1 0 1 76 3 1 0 74 10 1 1 73 0 0 1 0 133 0 1 1 118 22 21 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1443;
}
);
note = uni16E2;
unicode = 5858;
},
{
glyphname = uni16E3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,604,l),
(1280,131,l),
(1157,0,l),
(807,344,l),
(807,4,l),
(578,4,l),
(578,344,l),
(227,0,l),
(106,131,l),
(578,604,l),
(578,1491,l),
(807,1491,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
10 9 7 4 2 1 6 0 1 1 76 8 3 2 0 73 2 1 1 0 1 133 0 0 0 118 0 0 0 11 0 11 21 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1384;
}
);
note = uni16E3;
unicode = 5859;
},
{
glyphname = uni16E4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1143,-63,l),
(823,395,l),
(823,0,l),
(596,0,l),
(596,377,l),
(291,-63,l),
(119,59,l),
(457,553,l),
(268,743,l),
(455,928,l),
(106,1427,l),
(291,1548,l),
(596,1112,l),
(596,1487,l),
(823,1487,l),
(823,1090,l),
(1139,1548,l),
(1323,1427,l),
(983,938,l),
(1171,743,l),
(985,549,l),
(1327,57,l)
);
},
{
closed = 1;
nodes = (
(852,743,l),
(911,655,l),
(999,743,l),
(911,831,l)
);
},
{
closed = 1;
nodes = (
(586,739,l),
(522,827,l),
(438,743,l),
(526,655,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
29 28 27 25 24 23 21 19 16 14 13 12 11 10 8 5 3 2 1 19 1 0 1 76 9 4 2 0 74 20 15 2 1 73 0 0 1 0 133 0 1 1 118 26 22 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1431;
}
);
note = uni16E4;
unicode = 5860;
},
{
glyphname = uni16E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1264,1491,l),
(1264,0,l),
(1034,0,l),
(684,248,l),
(336,0,l),
(106,0,l),
(106,1491,l),
(336,1491,l),
(684,1243,l),
(1034,1491,l)
);
},
{
closed = 1;
nodes = (
(336,993,l),
(555,1151,l),
(336,1309,l)
);
},
{
closed = 1;
nodes = (
(815,1151,l),
(1034,993,l),
(1034,1309,l)
);
},
{
closed = 1;
nodes = (
(684,1057,l),
(336,803,l),
(336,688,l),
(684,436,l),
(1034,688,l),
(1034,803,l)
);
},
{
closed = 1;
nodes = (
(555,342,l),
(336,498,l),
(336,182,l)
);
},
{
closed = 1;
nodes = (
(1034,498,l),
(815,342,l),
(1034,182,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
27 26 24 23 22 21 20 19 18 17 16 15 14 13 12 11 5 17 1 0 1 76 3 1 0 1 0 133 2 1 1 1 118 17 18 17 17 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1368;
}
);
note = uni16E5;
unicode = 5861;
},
{
glyphname = uni16E6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(963,0,l),
(963,135,o),
(866,231,qs),
(813,284,o),
(748,309,q),
(748,0,l),
(518,0,l),
(518,309,l),
(452,284,o),
(401,233,qs),
(305,137,o),
(303,0,q),
(106,0,l),
(106,143,o),
(248,385,o),
(369,457,qs),
(441,498,o),
(518,514,q),
(518,1487,l),
(748,1487,l),
(748,514,l),
(828,498,o),
(897,457,qs),
(1018,385,o),
(1159,143,o),
(1159,0,q),
(1159,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
21 18 8 5 4 1 0 1 76 0 0 1 0 133 3 2 2 1 1 118 21 21 22 22 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1265;
}
);
note = uni16E6;
unicode = 5862;
},
{
glyphname = uni16E7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,l),
(106,700,l),
(336,700,l),
(336,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = uni16E7;
unicode = 5863;
},
{
glyphname = uni16E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,887,l),
(106,1018,l),
(578,1491,l),
(807,1491,l),
(1280,1018,l),
(1157,887,l),
(807,1231,l),
(807,264,l),
(1157,608,l),
(1280,477,l),
(807,4,l),
(578,4,l),
(106,477,l),
(227,608,l),
(578,264,l),
(578,1231,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
15 14 13 10 9 8 7 6 5 2 1 0 12 0 1 1 76 0 1 0 1 133 0 0 0 118 23 19 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1384;
}
);
note = uni16E8;
unicode = 5864;
},
{
glyphname = uni16E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(854,0,l),
(625,0,l),
(625,575,l),
(106,905,l),
(106,1176,l),
(625,1487,l),
(854,1487,l)
);
},
{
closed = 1;
nodes = (
(262,1051,l),
(625,846,l),
(625,1268,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
9 8 7 3 2 1 6 0 1 1 76 2 1 1 0 1 133 0 0 0 118 0 0 0 6 0 6 20 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 958;
}
);
note = uni16E9;
unicode = 5865;
},
{
glyphname = uni16EA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1214,201,l),
(1214,0,l),
(985,0,l),
(985,201,l),
(817,201,l),
(817,428,l),
(985,428,l),
(985,772,l),
(492,387,l),
(262,387,l),
(262,1075,l),
(106,1075,l),
(106,1305,l),
(262,1305,l),
(262,1487,l),
(492,1487,l),
(492,1305,l),
(649,1305,l),
(649,1075,l),
(492,1075,l),
(492,645,l),
(985,1030,l),
(1214,1030,l),
(1214,428,l),
(1362,428,l),
(1362,201,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
17 4 2 0 1 1 76 0 4 3 4 133 0 1 2 0 2 1 0 128 0 7 0 9 0 7 9 128 0 10 9 10 134 5 1 3 6 1 2 1 3 2 103 8 1 0 7 9 0 87 8 1 0 0 9 95 11 1 9 0 9 79 25 24 23 22 21 20 18 17 17 17 17 17 18 17 16 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 1466;
}
);
note = uni16EA;
unicode = 5866;
},
{
glyphname = uni16EB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,498,o),
(330,418,o),
(201,418,o),
(106,506,o),
(106,631,o),
(188,723,o),
(342,723,o),
(420,625,o),
(420,553,q),
(420,553,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 19 18 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uni16EB;
unicode = 5867;
},
{
glyphname = uni16EC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,627,o),
(330,549,o),
(201,549,o),
(106,635,o),
(106,762,o),
(188,852,o),
(342,852,o),
(420,754,o),
(420,682,q),
(420,682,l)
);
},
{
closed = 1;
nodes = (
(420,54,o),
(330,-27,o),
(201,-25,o),
(106,61,o),
(106,188,o),
(188,279,o),
(342,279,o),
(420,181,o),
(420,109,q),
(420,109,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 19 21 19 18 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uni16EC;
unicode = 5868;
},
{
glyphname = uni16ED;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(942,557,l),
(942,279,l),
(625,317,l),
(664,0,l),
(385,0,l),
(424,317,l),
(106,279,l),
(106,557,l),
(424,518,l),
(385,836,l),
(664,836,l),
(625,518,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
11 10 9 8 5 4 3 2 8 1 0 1 76 0 0 1 0 133 0 1 1 118 21 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1046;
}
);
note = uni16ED;
unicode = 5869;
},
{
glyphname = uni16EE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,0,l),
(414,670,l),
(172,582,l),
(106,725,l),
(414,836,l),
(414,1487,l),
(641,1487,l),
(641,1485,l),
(1151,1071,l),
(1061,938,l),
(641,1266,l),
(641,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
9 8 7 6 2 1 0 7 1 0 1 76 0 0 1 0 133 0 1 1 118 21 35 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1257;
}
);
note = uni16EE;
unicode = 5870;
},
{
glyphname = uni16EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1073,1487,l),
(1073,1286,o),
(932,1145,qs),
(832,1047,o),
(705,1016,q),
(705,471,l),
(834,440,o),
(932,342,qs),
(1073,201,o),
(1073,0,q),
(920,0,l),
(920,135,o),
(821,231,qs),
(768,284,o),
(705,309,q),
(705,0,l),
(475,0,l),
(475,309,l),
(409,284,o),
(356,231,qs),
(260,135,o),
(260,0,q),
(106,0,l),
(106,201,o),
(248,342,qs),
(346,440,o),
(475,471,q),
(475,1016,l),
(348,1047,o),
(248,1145,qs),
(107,1286,o),
(106,1487,q),
(260,1487,l),
(260,1352,o),
(356,1253,qs),
(409,1200,o),
(475,1178,q),
(475,1487,l),
(705,1487,l),
(705,1178,l),
(771,1203,o),
(821,1255,qs),
(920,1352,o),
(920,1487,q),
(920,1487,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
39 38 29 26 17 16 7 4 8 2 0 1 76 5 1 2 0 2 0 133 4 3 2 2 2 118 25 21 21 25 21 21 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 1177;
}
);
note = uni16EF;
unicode = 5871;
},
{
glyphname = uni16F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,864,o),
(856,1047,o),
(750,1073,q),
(750,414,l),
(838,443,o),
(991,604,o),
(991,737,q),
(991,737,l)
);
},
{
closed = 1;
nodes = (
(1169,626,o),
(1085,430,o),
(938,285,o),
(799,227,o),
(750,217,q),
(750,0,l),
(520,0,l),
(520,217,l),
(475,227,o),
(332,291,o),
(190,430,o),
(106,629,o),
(106,735,qs),
(106,844,o),
(190,1040,o),
(328,1178,o),
(471,1245,o),
(520,1255,q),
(520,1487,l),
(750,1487,l),
(750,1255,l),
(801,1245,o),
(946,1178,o),
(1085,1040,o),
(1169,844,o),
(1169,735,q),
(1169,735,l)
);
},
{
closed = 1;
nodes = (
(432,1038,o),
(293,842,o),
(293,737,qs),
(293,612,o),
(446,436,o),
(520,414,q),
(520,1073,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
41 35 29 26 16 13 4 3 8 1 0 1 76 0 0 1 0 133 0 1 1 118 28 30 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1275;
}
);
note = uni16F0;
unicode = 5872;
},
{
glyphname = uniE0D1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (219,0);
ref = uni030B.case;
},
{
ref = E;
}
);
width = 1249;
}
);
note = uniE0D1;
unicode = 57553;
},
{
glyphname = uniE120;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1284,0);
ref = uni0331;
},
{
ref = H;
}
);
width = 1685;
}
);
note = uniE120;
unicode = 57632;
},
{
glyphname = uniE18A;
layers = (
{
layerId = m01;
shapes = (
{
ref = f_j;
}
);
width = 1087;
}
);
note = uniE18A;
unicode = 57738;
},
{
glyphname = uniE1A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(164,778,o),
(164,891,qs),
(164,1172,o),
(469,1487,o),
(674,1487,qs),
(797,1487,o),
(918,1370,o),
(918,1286,qs),
(918,840,ls),
(918,811,o),
(934,811,qs),
(942,811,o),
(952,819,qs),
(1026,870,o),
(1120,870,qs),
(1296,870,o),
(1540,627,o),
(1540,440,qs),
(1540,233,o),
(1319,-23,o),
(1098,-23,qs),
(1041,-23,o),
(911,31,o),
(862,31,qs),
(850,31,o),
(809,-2,qs),
(788,-18,l),
(784,-20,o),
(776,-20,qs),
(745,-20,o),
(702,12,qs),
(682,28,o),
(682,35,q),
(688,74,o),
(688,279,qs),
(688,1161,ls),
(688,1290,o),
(629,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1200,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(489,68,qs),
(505,68,o),
(506,-8,o),
(489,-8,q),
(407,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
},
{
closed = 1;
nodes = (
(918,188,o),
(1040,57,o),
(1124,57,qs),
(1286,57,o),
(1286,428,qs),
(1286,582,o),
(1161,770,o),
(1063,770,qs),
(991,770,o),
(948,727,qs),
(917,696,o),
(918,647,qs),
(918,297,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
47 45 23 8 4 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 0 9 7 10 9 109 0 11 0 7 3 11 7 109 0 3 0 8 3 8 102 0 5 5 33 77 0 12 12 4 97 6 1 4 4 33 77 2 1 0 0 1 97 0 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 5 1 0 1 5 0 131 0 10 0 9 7 10 9 109 0 11 0 7 3 11 7 109 0 3 0 8 3 8 102 12 2 2 0 0 4 97 6 1 4 4 33 77 12 2 2 0 0 1 97 0 1 1 33 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 0 9 7 10 9 109 0 11 0 7 3 11 7 109 0 3 0 8 3 8 102 0 5 5 33 77 0 12 12 4 97 6 1 4 4 33 77 2 1 0 0 1 97 0 1 1 33 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 5 1 12 1 5 12 131 0 10 0 9 7 10 9 109 0 11 0 7 3 11 7 109 0 3 0 8 3 8 102 0 12 12 4 97 6 1 4 4 33 77 2 1 0 0 1 97 0 1 1 33 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
74 72 69 67 61 58 56 55 40 36 33 36 24 36 35 20 17 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1609;
}
);
note = uniE1A6;
unicode = 57766;
},
{
glyphname = uniE1A7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1487,65,o),
(1606,68,qs),
(1620,68,o),
(1622,-8,o),
(1606,-8,q),
(1512,0,o),
(1255,0,o),
(1155,-8,q),
(1141,-8,o),
(1141,68,o),
(1155,68,qs),
(1257,68,o),
(1257,143,qs),
(1257,555,ls),
(1257,641,o),
(1157,762,o),
(1092,762,qs),
(1031,762,o),
(954,717,o),
(918,655,o),
(918,627,qs),
(918,143,ls),
(918,67,o),
(1020,68,qs),
(1034,68,o),
(1034,-8,o),
(1020,-8,q),
(926,0,o),
(696,0,o),
(596,-8,q),
(582,-8,o),
(582,68,o),
(596,68,qs),
(688,68,o),
(688,143,qs),
(688,1161,ls),
(688,1294,o),
(625,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1200,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(489,68,qs),
(505,68,o),
(506,-8,o),
(489,-8,q),
(407,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(164,778,o),
(164,891,qs),
(164,1172,o),
(469,1487,o),
(674,1487,qs),
(799,1487,o),
(918,1378,o),
(918,1286,qs),
(918,821,ls),
(918,784,o),
(950,809,qs),
(1030,870,o),
(1161,870,qs),
(1267,870,o),
(1409,782,o),
(1487,629,o),
(1487,557,qs),
(1487,143,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
75 53 32 3 5 73 0 1 0 7 0 1 7 105 0 0 0 11 3 0 11 105 0 2 0 3 4 2 3 105 14 12 10 8 6 5 4 5 5 4 89 14 12 10 8 6 5 4 4 5 97 13 9 2 5 4 5 81 79 77 74 71 69 68 64 62 57 55 52 49 20 36 35 20 19 50 19 38 35 15 6 31 
CALL[ ]	/* CallFunction */";
};
width = 1617;
}
);
note = uniE1A7;
unicode = 57767;
},
{
glyphname = uniE1A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(56,705,o),
(55,778,o),
(72,778,qs),
(119,778,o),
(164,850,o),
(164,891,qs),
(164,1176,o),
(471,1487,o),
(674,1487,qs),
(819,1487,o),
(938,1405,o),
(938,1339,qs),
(938,1292,o),
(858,1223,o),
(823,1223,qs),
(747,1223,o),
(639,1374,o),
(578,1374,qs),
(488,1374,o),
(393,1196,o),
(393,1049,qs),
(393,143,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(139,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
},
{
closed = 1;
nodes = (
(729,557,ls),
(729,682,o),
(637,682,qs),
(621,682,o),
(621,756,o),
(637,756,qs),
(686,756,o),
(823,823,qs),
(886,854,o),
(907,872,qs),
(919,882,o),
(938,883,qs),
(967,883,o),
(965,856,qs),
(959,772,o),
(958,682,qs),
(958,143,ls),
(958,67,o),
(1061,68,qs),
(1075,68,o),
(1075,-8,o),
(1061,-8,q),
(977,0,o),
(852,0,qs),
(709,0,o),
(625,-8,q),
(611,-8,o),
(608,68,o),
(625,68,qs),
(729,67,o),
(729,143,q),
(729,143,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
49 8 2 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 11 6 4 6 11 4 131 0 4 3 3 4 115 0 13 0 12 6 13 12 109 0 7 0 6 11 7 6 109 0 3 0 5 3 5 102 10 8 2 3 0 0 1 97 9 1 1 1 33 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 11 6 4 6 11 4 131 0 4 3 6 4 3 129 0 13 0 12 6 13 12 109 0 7 0 6 11 7 6 109 0 3 0 5 3 5 102 10 8 2 3 0 0 1 97 9 1 1 1 33 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
69 67 65 64 60 58 53 51 48 46 20 50 20 36 33 36 35 20 17 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1087;
}
);
note = uniE1A8;
unicode = 57768;
},
{
glyphname = uniE1A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(164,778,o),
(164,891,qs),
(164,1172,o),
(469,1487,o),
(674,1487,qs),
(795,1487,o),
(918,1380,o),
(918,1286,qs),
(918,528,ls),
(918,491,o),
(938,492,qs),
(983,492,o),
(1018,530,qs),
(1174,700,ls),
(1250,784,o),
(1120,784,qs),
(1104,784,o),
(1106,856,o),
(1120,856,q),
(1181,850,o),
(1481,850,o),
(1542,856,q),
(1556,856,o),
(1556,784,o),
(1542,784,qs),
(1450,784,o),
(1391,737,qs),
(1373,723,o),
(1360,713,q),
(1151,524,ls),
(1128,504,o),
(1151,479,qs),
(1481,121,ls),
(1530,68,o),
(1606,68,qs),
(1620,68,o),
(1622,-8,o),
(1606,-8,q),
(1524,0,o),
(1223,0,o),
(1141,-8,q),
(1127,-8,o),
(1126,68,o),
(1141,68,qs),
(1256,68,o),
(1194,137,qs),
(993,369,ls),
(966,400,o),
(930,399,qs),
(918,399,o),
(918,365,qs),
(918,143,ls),
(918,67,o),
(1028,68,qs),
(1042,68,o),
(1042,-8,o),
(1028,-8,q),
(946,0,o),
(674,0,o),
(592,-8,q),
(578,-8,o),
(578,68,o),
(592,68,qs),
(688,68,o),
(688,143,qs),
(688,1161,ls),
(688,1306,o),
(621,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1200,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(489,68,qs),
(505,68,o),
(506,-8,o),
(489,-8,q),
(407,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
67 48 29 8 4 15 73 0 7 0 14 17 7 14 109 0 17 0 16 11 17 16 109 13 1 11 0 12 3 11 12 109 0 3 0 15 3 15 101 10 8 6 4 2 5 0 0 1 97 9 5 2 1 1 33 0 78 91 88 86 85 82 80 76 74 71 69 66 65 61 60 52 50 47 46 19 35 35 20 20 36 35 20 17 18 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1597;
}
);
note = uniE1A9;
unicode = 57769;
},
{
glyphname = uniE1AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(164,778,o),
(164,891,qs),
(164,1172,o),
(471,1487,o),
(674,1487,qs),
(789,1487,o),
(918,1376,o),
(918,1286,qs),
(918,143,ls),
(918,67,o),
(1020,68,qs),
(1034,68,o),
(1034,-8,o),
(1020,-8,q),
(938,0,o),
(686,0,o),
(604,-8,q),
(590,-8,o),
(590,68,o),
(604,68,qs),
(688,68,o),
(688,143,qs),
(688,1161,ls),
(688,1374,o),
(559,1374,qs),
(489,1374,o),
(393,1200,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(489,68,qs),
(505,68,o),
(506,-8,o),
(489,-8,q),
(407,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
28 8 2 7 73 0 9 0 8 3 9 8 109 0 3 0 7 3 7 101 6 4 2 3 0 0 1 97 5 1 1 1 33 0 78 47 44 19 36 35 20 19 36 35 20 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = uniE1AA;
unicode = 57770;
},
{
glyphname = uniE1AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(119,778,o),
(164,844,o),
(164,891,qs),
(164,1172,o),
(463,1475,o),
(639,1475,qs),
(811,1475,o),
(891,1376,q),
(1026,1487,o),
(1198,1487,qs),
(1270,1487,o),
(1366,1450,o),
(1421,1384,o),
(1421,1343,qs),
(1421,1294,o),
(1343,1223,o),
(1309,1223,qs),
(1221,1223,o),
(1186,1274,qs),
(1133,1352,ls),
(1119,1375,o),
(1083,1374,qs),
(1013,1374,o),
(918,1192,o),
(918,989,qs),
(918,143,ls),
(918,67,o),
(1053,68,qs),
(1067,68,o),
(1067,-8,o),
(1053,-8,q),
(971,0,o),
(688,0,o),
(606,-8,q),
(592,-8,o),
(592,68,o),
(606,68,qs),
(688,68,o),
(688,143,qs),
(688,670,ls),
(688,705,o),
(659,705,qs),
(598,705,ls),
(584,705,o),
(584,778,o),
(598,778,qs),
(641,778,o),
(688,842,o),
(688,891,qs),
(688,1088,o),
(764,1223,q),
(694,1321,o),
(616,1374,o),
(489,1374,o),
(393,1194,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(494,68,qs),
(508,68,o),
(510,-8,o),
(494,-8,q),
(412,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
62 39 19 8 4 11 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 4 3 3 10 117 14 1 5 13 1 4 10 5 4 109 0 12 11 3 12 94 9 1 3 0 11 3 11 102 8 6 2 3 0 0 1 97 7 1 1 1 33 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 4 3 4 10 3 131 14 1 5 13 1 4 10 5 4 109 0 12 11 3 12 94 9 1 3 0 11 3 11 102 8 6 2 3 0 0 1 97 7 1 1 1 33 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
75 72 70 69 65 63 61 59 54 52 49 47 35 20 19 50 22 20 35 20 17 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1085;
}
);
note = uniE1AB;
unicode = 57771;
},
{
glyphname = uniE1AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(119,778,o),
(164,844,o),
(164,891,qs),
(164,1172,o),
(463,1475,o),
(639,1475,qs),
(811,1475,o),
(891,1376,q),
(1026,1487,o),
(1198,1487,qs),
(1298,1487,o),
(1409,1448,o),
(1460,1384,o),
(1460,1343,qs),
(1460,1294,o),
(1382,1223,o),
(1348,1223,qs),
(1282,1223,o),
(1239,1274,qs),
(1184,1339,ls),
(1155,1374,o),
(1100,1374,qs),
(1010,1374,o),
(918,1198,o),
(918,1055,qs),
(918,143,ls),
(918,67,o),
(1053,68,qs),
(1067,68,o),
(1067,-8,o),
(1053,-8,q),
(971,0,o),
(688,0,o),
(606,-8,q),
(592,-8,o),
(592,68,o),
(606,68,qs),
(688,68,o),
(688,143,qs),
(688,670,ls),
(688,705,o),
(659,705,qs),
(598,705,ls),
(584,705,o),
(584,778,o),
(598,778,qs),
(641,778,o),
(688,842,o),
(688,891,qs),
(688,1088,o),
(764,1223,q),
(694,1321,o),
(616,1374,o),
(489,1374,o),
(393,1194,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(494,68,qs),
(508,68,o),
(510,-8,o),
(494,-8,q),
(412,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
},
{
closed = 1;
nodes = (
(1249,557,ls),
(1249,682,o),
(1157,682,qs),
(1141,682,o),
(1143,756,o),
(1157,756,qs),
(1206,756,o),
(1346,823,qs),
(1409,854,o),
(1427,872,qs),
(1439,882,o),
(1458,883,qs),
(1487,883,o),
(1485,856,qs),
(1479,772,o),
(1479,682,qs),
(1479,143,ls),
(1479,67,o),
(1581,68,qs),
(1595,68,o),
(1597,-8,o),
(1581,-8,q),
(1497,0,o),
(1229,0,o),
(1145,-8,q),
(1131,-8,o),
(1130,68,o),
(1145,68,qs),
(1249,67,o),
(1249,143,q),
(1249,143,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
86 62 39 19 8 5 11 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 18 4 10 4 18 10 131 0 10 3 3 10 115 0 20 0 19 4 20 19 109 14 1 5 13 1 4 18 5 4 109 0 12 11 3 12 94 9 1 3 0 11 3 11 102 17 15 8 6 2 5 0 0 1 97 16 7 2 1 1 33 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 18 4 10 4 18 10 131 0 10 3 4 10 3 129 0 20 0 19 4 20 19 109 14 1 5 13 1 4 18 5 4 109 0 12 11 3 12 94 9 1 3 0 11 3 11 102 17 15 8 6 2 5 0 0 1 97 16 7 2 1 1 33 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
106 104 102 101 97 95 90 88 85 84 80 79 75 72 70 69 65 63 61 59 54 52 49 47 35 20 19 50 22 20 35 20 17 21 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1609;
}
);
note = uniE1AC;
unicode = 57772;
},
{
glyphname = uniE1AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(119,778,o),
(164,844,o),
(164,891,qs),
(164,1172,o),
(463,1475,o),
(639,1475,qs),
(811,1475,o),
(891,1376,q),
(1028,1487,o),
(1196,1487,qs),
(1313,1487,o),
(1442,1374,o),
(1442,1286,qs),
(1442,143,ls),
(1442,67,o),
(1542,68,qs),
(1556,68,o),
(1559,-8,o),
(1542,-8,q),
(1448,0,o),
(1229,0,o),
(1126,-8,q),
(1112,-8,o),
(1112,68,o),
(1126,68,qs),
(1210,68,o),
(1210,143,qs),
(1210,1161,ls),
(1210,1374,o),
(1081,1374,qs),
(1011,1374,o),
(915,1194,o),
(915,1004,qs),
(915,143,ls),
(915,67,o),
(1014,68,qs),
(1028,68,o),
(1028,-8,o),
(1014,-8,q),
(920,0,o),
(680,0,o),
(578,-8,q),
(564,-8,o),
(563,68,o),
(578,68,qs),
(687,68,o),
(686,143,qs),
(686,670,ls),
(686,705,o),
(655,705,qs),
(596,705,ls),
(582,705,o),
(580,778,o),
(596,778,qs),
(688,778,o),
(686,891,qs),
(686,1094,o),
(762,1227,q),
(694,1323,o),
(616,1374,o),
(553,1374,qs),
(490,1374,o),
(393,1194,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(494,68,qs),
(508,68,o),
(510,-8,o),
(494,-8,q),
(412,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,67,o),
(164,143,q),
(164,143,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
70 59 39 20 8 5 13 73 16 1 5 15 1 4 3 5 4 109 0 14 13 3 14 93 9 1 3 0 13 3 13 101 12 10 8 6 2 5 0 0 1 97 11 7 2 1 1 33 0 78 83 80 78 77 73 71 69 67 63 61 58 55 53 52 49 47 35 50 19 50 21 36 35 20 17 17 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1572;
}
);
note = uniE1AD;
unicode = 57773;
},
{
glyphname = uniE4D1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (31,0);
ref = hungarumlaut;
},
{
ref = e;
}
);
width = 874;
}
);
note = uniE4D1;
unicode = 58577;
},
{
glyphname = uniEBA1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1487,65,o),
(1606,68,qs),
(1620,68,o),
(1622,-8,o),
(1606,-8,q),
(1512,0,o),
(1255,0,o),
(1155,-8,q),
(1141,-8,o),
(1141,68,o),
(1155,68,qs),
(1257,68,o),
(1257,143,qs),
(1257,555,ls),
(1257,641,o),
(1157,762,o),
(1092,762,qs),
(1031,762,o),
(954,717,o),
(918,655,o),
(918,627,qs),
(918,143,ls),
(918,67,o),
(1020,68,qs),
(1034,68,o),
(1034,-8,o),
(1020,-8,q),
(926,0,o),
(696,0,o),
(596,-8,q),
(582,-8,o),
(582,68,o),
(596,68,qs),
(688,68,o),
(688,143,qs),
(688,1161,ls),
(688,1294,o),
(625,1374,o),
(559,1374,qs),
(487,1374,o),
(393,1200,o),
(393,1004,qs),
(393,143,ls),
(393,67,o),
(489,68,qs),
(505,68,o),
(506,-8,o),
(489,-8,q),
(407,0,o),
(137,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,143,qs),
(164,670,ls),
(164,705,o),
(133,705,qs),
(72,705,ls),
(58,705,o),
(57,778,o),
(72,778,qs),
(164,778,o),
(164,891,qs),
(164,1172,o),
(469,1487,o),
(674,1487,qs),
(799,1487,o),
(918,1378,o),
(918,1286,qs),
(918,821,ls),
(918,784,o),
(950,809,qs),
(1030,870,o),
(1161,870,qs),
(1267,870,o),
(1409,782,o),
(1487,629,o),
(1487,557,qs),
(1487,143,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
75 53 32 3 1 73 0 3 0 2 0 3 2 109 0 11 0 0 7 11 0 109 0 7 0 1 7 1 101 14 12 10 8 6 5 4 4 5 97 13 9 2 5 5 33 4 78 79 77 74 71 69 68 64 62 57 55 52 49 20 36 35 20 19 50 19 38 35 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1617;
}
);
note = uniEBA1;
unicode = 60321;
},
{
glyphname = uniF106;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1126,12,l),
(1124,-4,o),
(1069,-6,qs),
(1038,-6,l),
(473,0,l),
(354,0,ls),
(293,0,o),
(82,-6,qs),
(78,-6,ls),
(64,-6,o),
(63,39,qs),
(63,62,o),
(68,76,qs),
(72,86,o),
(78,86,qs),
(191,86,o),
(225,147,qs),
(237,167,o),
(238,195,qs),
(238,1155,ls),
(238,1253,o),
(98,1264,q),
(82,1264,o),
(66,1266,qs),
(52,1266,o),
(51,1311,qs),
(51,1334,o),
(55,1348,qs),
(59,1358,o),
(66,1358,qs),
(209,1352,o),
(354,1352,qs),
(514,1352,o),
(926,1358,qs),
(946,1358,ls),
(1005,1358,o),
(1012,1356,qs),
(1016,1354,o),
(1020,1341,o),
(1022,1296,qs),
(1022,1106,ls),
(1022,1088,o),
(977,1085,q),
(944,1087,ls),
(917,1091,o),
(920,1106,q),
(920,1192,o),
(862,1237,qs),
(844,1251,o),
(825,1253,qs),
(714,1265,o),
(573,1266,qs),
(506,1266,ls),
(481,1266,o),
(481,1227,qs),
(481,268,ls),
(481,100,o),
(596,82,qs),
(625,78,l),
(778,78,ls),
(864,78,o),
(938,150,qs),
(1024,234,o),
(1022,358,qs),
(1022,374,o),
(1069,377,q),
(1102,375,l),
(1125,371,o),
(1122,358,q),
(1122,55,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
58 43 23 0 4 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 1 0 1 6 117 0 0 3 1 0 115 0 3 2 2 3 115 5 1 2 0 4 2 4 100 0 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 3 1 0 3 131 0 3 2 2 3 115 5 1 2 0 4 2 4 100 6 1 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 1 0 1 6 117 0 0 3 1 0 3 129 0 3 2 2 3 115 5 1 2 0 4 2 4 100 0 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 3 1 0 3 131 0 3 2 2 3 115 5 1 2 0 4 2 4 100 6 1 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 3 1 0 3 131 0 3 2 1 3 2 129 5 1 2 0 4 2 4 100 6 1 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 1 0 1 6 117 0 0 3 1 0 3 129 0 3 2 1 3 2 129 5 1 2 0 4 2 4 100 0 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 3 1 0 3 131 0 3 2 1 3 2 129 5 1 2 0 4 2 4 100 6 1 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 1 0 1 6 117 0 0 3 1 0 3 129 0 3 2 1 3 2 129 5 1 2 0 4 2 4 100 0 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 3 1 0 3 131 0 3 2 1 3 2 129 5 1 2 0 4 2 4 100 6 1 1 1 7 95 0 7 7 33 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
133 21 69 117 39 53 36 34 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1202;
}
);
note = uniF106;
unicode = 61702;
},
{
glyphname = uniF10A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1042,45,o),
(922,4,qs),
(830,-27,o),
(727,-27,qs),
(567,-27,o),
(414,47,qs),
(168,166,o),
(88,422,qs),
(53,533,o),
(55,668,qs),
(55,908,o),
(193,1100,qs),
(322,1282,o),
(522,1350,qs),
(622,1385,o),
(731,1384,qs),
(866,1384,o),
(1008,1333,qs),
(1108,1296,o),
(1165,1245,qs),
(1226,1190,o),
(1227,1139,qs),
(1227,1082,o),
(1167,1047,qs),
(1134,1029,o),
(1098,1028,qs),
(1039,1028,o),
(1004,1069,qs),
(996,1079,o),
(936,1165,qs),
(879,1247,o),
(825,1276,qs),
(782,1299,o),
(725,1296,q),
(530,1296,o),
(420,1092,qs),
(352,969,o),
(330,801,q),
(332,786,l),
(336,774,o),
(352,774,qs),
(1118,774,ls),
(1132,774,o),
(1135,729,q),
(1130,698,l),
(1124,684,l),
(1118,682,l),
(352,682,ls),
(336,682,o),
(332,659,qs),
(332,657,o),
(330,653,q),
(330,420,o),
(459,262,qs),
(557,141,o),
(684,113,qs),
(715,107,o),
(745,106,qs),
(892,106,o),
(1018,170,qs),
(1069,195,o),
(1139,240,qs),
(1143,242,o),
(1149,242,qs),
(1174,242,o),
(1194,211,qs),
(1204,195,o),
(1206,182,q),
(1204,172,o),
(1198,168,q),
(1198,168,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
26 18 2 3 6 73 0 0 1 2 1 0 2 131 0 5 3 4 3 5 4 131 0 2 0 3 5 2 3 107 0 4 0 6 4 6 101 0 1 1 7 97 0 7 7 33 1 78 42 40 38 38 36 40 37 21 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1292;
}
);
note = uniF10A;
unicode = 61706;
},
{
glyphname = uniF10E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1169,637,o),
(1169,526,qs),
(1169,55,ls),
(1169,18,o),
(1147,6,q),
(1120,-2,l),
(1075,-6,l),
(1059,-6,l),
(481,0,l),
(354,0,ls),
(293,0,o),
(82,-6,qs),
(76,-6,ls),
(62,-6,o),
(61,39,qs),
(61,62,o),
(66,76,qs),
(70,86,o),
(76,86,qs),
(205,86,o),
(231,168,qs),
(237,186,o),
(238,207,qs),
(238,1155,ls),
(238,1259,o),
(80,1266,qs),
(66,1266,ls),
(52,1266,o),
(51,1311,qs),
(51,1334,o),
(55,1348,qs),
(59,1358,o),
(66,1358,qs),
(209,1352,o),
(354,1352,qs),
(471,1352,o),
(1008,1358,qs),
(1042,1358,ls),
(1114,1358,o),
(1122,1337,q),
(1124,1321,l),
(1122,1296,l),
(1122,1122,ls),
(1122,1106,o),
(1075,1108,qs),
(1042,1110,l),
(1022,1114,o),
(1022,1122,qs),
(1022,1226,o),
(952,1245,qs),
(942,1247,o),
(928,1251,q),
(805,1263,o),
(602,1264,qs),
(514,1264,ls),
(481,1264,o),
(481,1204,qs),
(481,252,ls),
(481,129,o),
(559,92,qs),
(586,80,o),
(621,80,qs),
(774,80,ls),
(840,80,o),
(883,119,qs),
(924,156,o),
(924,221,qs),
(924,657,ls),
(924,716,o),
(936,725,qs),
(942,729,o),
(954,729,qs),
(1047,725,l),
(1051,725,l),
(1284,729,l),
(1286,729,ls),
(1300,729,o),
(1303,682,q),
(1298,651,l),
(1292,639,l),
(1286,637,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
65 51 39 38 32 2 6 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 2 3 117 0 8 0 0 3 8 0 107 5 1 2 0 4 2 4 100 6 1 1 1 7 95 0 7 7 33 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 2 0 3 2 131 0 8 0 0 3 8 0 107 5 1 2 0 4 2 4 100 6 1 1 1 7 95 0 7 7 33 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 133 21 53 101 39 53 56 83 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1357;
}
);
note = uniF10E;
unicode = 61710;
},
{
glyphname = uniF110;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1288,313,o),
(1094,123,q),
(1049,84,l),
(934,-6,o),
(813,-25,qs),
(795,-27,o),
(778,-27,qs),
(745,-27,o),
(692,47,qs),
(645,117,o),
(635,127,q),
(621,137,l),
(617,139,o),
(610,139,qs),
(573,139,o),
(518,-61,qs),
(514,-75,o),
(512,-86,qs),
(510,-98,o),
(483,-98,qs),
(463,-98,o),
(446,-92,q),
(430,-84,o),
(430,-68,q),
(461,133,o),
(504,215,qs),
(553,309,o),
(633,309,qs),
(711,309,o),
(797,203,qs),
(856,127,l),
(872,111,o),
(883,111,qs),
(926,111,o),
(969,221,qs),
(1030,375,o),
(1038,575,qs),
(1038,621,ls),
(1038,791,o),
(961,915,qs),
(865,1073,o),
(686,1073,qs),
(600,1073,o),
(518,985,qs),
(500,965,o),
(485,944,qs),
(469,917,o),
(469,885,qs),
(469,492,ls),
(469,295,o),
(369,166,qs),
(328,113,o),
(231,27,qs),
(200,0,o),
(188,-8,q),
(182,-14,o),
(162,-14,o),
(152,-8,q),
(117,8,o),
(92,49,qs),
(82,67,o),
(82,80,qs),
(82,86,o),
(86,90,qs),
(162,162,o),
(203,285,qs),
(223,344,o),
(221,389,q),
(221,1087,ls),
(221,1175,o),
(139,1210,qs),
(104,1224,o),
(66,1225,qs),
(52,1225,o),
(51,1272,qs),
(51,1295,o),
(55,1307,qs),
(59,1317,o),
(66,1319,q),
(189,1319,o),
(360,1366,qs),
(385,1372,o),
(397,1376,qs),
(424,1384,o),
(436,1384,qs),
(475,1384,o),
(475,1346,qs),
(475,1335,l),
(467,1251,o),
(469,1118,qs),
(469,1093,o),
(479,1094,q),
(492,1098,l),
(496,1100,ls),
(602,1168,o),
(756,1167,qs),
(924,1167,o),
(1063,1073,qs),
(1151,1014,o),
(1206,930,qs),
(1288,803,o),
(1288,639,q),
(1288,639,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
78 27 14 12 10 5 1 73 0 5 9 8 9 5 8 131 0 8 0 6 4 8 6 109 0 4 0 0 3 4 0 110 0 3 0 2 1 3 2 109 0 7 0 1 7 1 101 0 9 9 33 9 78 97 94 88 87 83 81 75 73 69 68 61 59 37 21 25 37 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1380;
}
);
note = uniF110;
unicode = 61712;
},
{
glyphname = uniF11A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1898,353,o),
(1659,131,qs),
(1512,-8,o),
(1438,-6,qs),
(1387,-6,o),
(1372,57,q),
(1364,113,l),
(1362,121,o),
(1354,123,q),
(1321,123,o),
(1276,-45,qs),
(1272,-63,o),
(1268,-74,qs),
(1264,-90,o),
(1235,-90,q),
(1208,-86,l),
(1190,-78,ls),
(1176,-70,o),
(1176,-55,q),
(1196,90,o),
(1245,209,qs),
(1263,252,o),
(1280,274,qs),
(1327,335,o),
(1368,338,q),
(1427,338,o),
(1473,256,qs),
(1505,193,l),
(1513,181,o),
(1522,180,q),
(1551,180,o),
(1585,342,qs),
(1626,532,o),
(1626,705,qs),
(1626,904,o),
(1563,1063,qs),
(1495,1231,o),
(1389,1247,qs),
(1366,1249,l),
(1241,1249,o),
(1143,1126,qs),
(1120,1100,l),
(1104,1075,o),
(1102,1063,qs),
(1098,1030,l),
(1098,1028,l),
(1098,297,ls),
(1098,209,o),
(1069,23,qs),
(1065,0,o),
(987,-2,q),
(934,0,l),
(885,6,o),
(883,23,qs),
(858,197,ls),
(852,252,o),
(854,297,q),
(854,930,ls),
(854,1024,o),
(778,1130,qs),
(702,1239,o),
(608,1270,qs),
(579,1278,o),
(553,1278,qs),
(463,1278,o),
(403,1161,qs),
(327,1011,o),
(328,698,qs),
(328,397,o),
(440,246,qs),
(473,201,o),
(520,164,qs),
(528,158,o),
(545,156,qs),
(557,156,o),
(610,172,qs),
(628,176,o),
(649,176,o),
(655,172,qs),
(659,170,o),
(659,162,q),
(653,133,l),
(633,72,o),
(590,20,qs),
(580,8,o),
(567,0,q),
(553,-12,o),
(543,-12,qs),
(539,-12,o),
(535,-10,qs),
(248,129,o),
(129,371,qs),
(57,521,o),
(57,700,qs),
(57,919,o),
(172,1110,qs),
(276,1280,o),
(428,1350,qs),
(508,1387,o),
(592,1384,qs),
(742,1384,o),
(883,1274,qs),
(908,1254,o),
(993,1178,qs),
(1007,1166,o),
(1020,1163,q),
(1032,1163,o),
(1044,1180,q),
(1116,1256,o),
(1130,1268,qs),
(1261,1389,o),
(1411,1386,qs),
(1640,1386,o),
(1774,1182,qs),
(1885,1012,o),
(1898,760,q),
(1898,705,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
97 70 35 3 0 73 0 9 5 9 136 0 10 5 3 5 10 3 131 0 3 2 5 3 2 129 7 1 2 8 5 2 8 129 0 6 4 0 6 93 0 4 1 1 0 4 0 101 0 8 8 5 97 11 1 5 5 33 8 78 113 111 107 106 102 101 91 90 86 85 77 76 66 64 53 51 43 41 39 38 42 35 12 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1988;
}
);
note = uniF11A;
unicode = 61722;
},
{
glyphname = uniF126;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,223,o),
(870,102,qs),
(751,-27,o),
(555,-27,qs),
(297,-27,o),
(162,123,qs),
(78,215,o),
(72,326,qs),
(72,340,ls),
(72,444,o),
(168,545,qs),
(231,611,o),
(326,657,q),
(242,702,o),
(207,737,qs),
(105,839,o),
(104,1032,qs),
(104,1153,o),
(209,1266,qs),
(233,1290,ls),
(337,1384,o),
(524,1384,qs),
(645,1384,o),
(737,1364,qs),
(790,1352,o),
(801,1352,qs),
(836,1354,l),
(838,1354,l),
(875,1235,o),
(887,1083,q),
(883,1071,l),
(874,1063,l),
(856,1051,o),
(823,1051,qs),
(794,1051,o),
(791,1063,q),
(781,1129,o),
(735,1194,qs),
(717,1221,o),
(692,1239,q),
(620,1300,o),
(506,1300,qs),
(397,1300,o),
(342,1202,qs),
(311,1145,o),
(311,1075,qs),
(311,983,o),
(358,934,qs),
(419,875,o),
(559,834,q),
(563,834,l),
(739,783,o),
(815,731,qs),
(856,704,o),
(887,672,qs),
(977,574,o),
(981,414,qs),
(981,403,ls)
);
},
{
closed = 1;
nodes = (
(770,442,o),
(653,516,qs),
(604,547,o),
(502,584,qs),
(451,600,l),
(430,600,l),
(420,598,o),
(412,594,q),
(320,522,o),
(315,362,qs),
(315,342,ls),
(315,242,o),
(381,162,qs),
(459,68,o),
(584,68,qs),
(656,66,o),
(711,127,qs),
(770,192,o),
(770,307,q),
(770,307,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
44 27 2 3 73 0 6 5 1 5 6 1 131 0 1 0 2 3 1 2 107 0 0 0 3 0 3 102 0 5 5 4 97 0 4 4 33 5 78 72 71 63 61 54 52 35 37 23 46 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1075;
}
);
note = uniF126;
unicode = 61734;
},
{
glyphname = uniF127;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,-448,o),
(317,-483,qs),
(303,-493,o),
(285,-500,qs),
(111,-557,l),
(96,-557,ls),
(76,-557,o),
(57,-518,q),
(51,-502,o),
(49,-489,q),
(49,-473,o),
(61,-465,qs),
(123,-422,l),
(137,-414,o),
(137,-391,qs),
(137,670,ls),
(137,705,o),
(106,705,qs),
(45,705,ls),
(29,705,o),
(29,778,o),
(45,778,qs),
(92,778,o),
(137,850,o),
(137,891,qs),
(137,1176,o),
(444,1487,o),
(647,1487,qs),
(753,1487,o),
(870,1405,o),
(870,1339,qs),
(870,1292,o),
(791,1223,o),
(758,1223,qs),
(662,1223,o),
(582,1374,o),
(532,1374,qs),
(460,1374,o),
(367,1196,o),
(367,1049,qs),
(367,-393,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 3 0 1 114 0 5 4 5 134 0 2 0 0 1 2 0 105 0 3 4 4 3 89 0 3 3 4 97 0 4 3 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 5 4 5 134 0 2 0 0 1 2 0 105 0 3 4 4 3 89 0 3 3 4 97 0 4 3 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
26 50 20 36 33 34 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = uniF127;
unicode = 61735;
},
{
glyphname = uniF13C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (741,465);
ref = breve;
},
{
ref = AE;
}
);
width = 1847;
}
);
note = uniF13C;
unicode = 61756;
},
{
glyphname = uniF13D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (252,0);
ref = breve;
},
{
ref = ae;
}
);
width = 1236;
}
);
note = uniF13D;
unicode = 61757;
},
{
glyphname = uniF140;
layers = (
{
layerId = m01;
shapes = (
{
pos = (319,465);
ref = breve;
},
{
ref = Y;
}
);
width = 1323;
}
);
note = uniF140;
unicode = 61760;
},
{
glyphname = uniF141;
layers = (
{
layerId = m01;
shapes = (
{
pos = (92,0);
ref = breve;
},
{
ref = y;
}
);
width = 882;
}
);
note = uniF141;
unicode = 61761;
},
{
glyphname = uniF149;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(862,258,o),
(651,106,qs),
(551,34,o),
(391,-12,qs),
(366,-18,o),
(367,-45,qs),
(367,-393,ls),
(367,-473,o),
(285,-500,qs),
(111,-557,l),
(100,-557,ls),
(71,-557,o),
(57,-518,qs),
(51,-504,o),
(49,-489,q),
(49,-473,o),
(61,-465,qs),
(123,-422,ls),
(137,-412,o),
(137,-391,qs),
(137,907,ls),
(137,942,o),
(113,926,qs),
(-10,846,ls),
(-14,844,o),
(-18,844,qs),
(-34,846,o),
(-70,903,qs),
(-90,936,o),
(-90,946,qs),
(-90,958,o),
(-72,958,qs),
(-14,954,ls),
(6,954,o),
(25,967,qs),
(117,1026,ls),
(137,1038,o),
(137,1065,qs),
(137,1153,ls),
(137,1286,o),
(45,1286,qs),
(31,1286,o),
(31,1360,o),
(45,1360,qs),
(102,1360,o),
(231,1427,qs),
(288,1458,o),
(317,1477,qs),
(331,1487,o),
(346,1487,qs),
(375,1487,o),
(375,1458,qs),
(367,1231,ls),
(367,1198,o),
(377,1198,qs),
(385,1198,o),
(395,1206,q),
(598,1337,l),
(600,1339,o),
(604,1337,q),
(612,1335,o),
(629,1315,q),
(660,1272,o),
(676,1233,qs),
(680,1221,o),
(659,1223,qs),
(592,1229,l),
(569,1229,o),
(553,1219,qs),
(393,1112,l),
(366,1096,o),
(367,1065,qs),
(367,825,l),
(369,802,o),
(385,803,qs),
(393,803,o),
(399,811,qs),
(448,870,o),
(532,870,qs),
(688,870,o),
(778,766,qs),
(862,668,o),
(862,504,q),
(862,504,l)
);
},
{
closed = 1;
nodes = (
(631,668,o),
(561,745,qs),
(530,778,o),
(489,778,qs),
(430,778,o),
(379,688,q),
(367,663,o),
(367,625,qs),
(367,100,ls),
(367,82,o),
(385,82,qs),
(395,82,l),
(506,121,o),
(573,244,qs),
(631,347,o),
(631,453,q),
(631,453,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
30 1 1 4 28 1 5 1 53 1 0 5 10 8 2 8 0 4 76 0 2 3 2 133 0 1 4 5 4 1 5 128 0 5 0 4 5 0 126 0 7 8 6 8 7 6 128 0 6 6 132 0 3 0 4 1 3 4 105 0 0 8 8 0 89 0 0 0 8 97 0 8 0 8 81 97 95 90 88 72 71 51 49 43 41 39 38 33 32 26 35 9 6 24 
CALL[ ]	/* CallFunction */";
};
width = 903;
}
);
note = uniF149;
unicode = 61769;
},
{
glyphname = uniF150;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(729,244,o),
(659,266,qs),
(596,286,o),
(432,348,qs),
(303,397,o),
(248,397,qs),
(160,397,o),
(109,342,qs),
(82,313,o),
(74,272,qs),
(70,254,o),
(43,254,q),
(23,256,l),
(5,262,o),
(4,279,qs),
(4,410,o),
(92,487,qs),
(160,546,o),
(250,547,qs),
(342,547,o),
(520,475,qs),
(592,446,o),
(594,446,q),
(735,389,o),
(795,389,qs),
(871,389,o),
(926,432,qs),
(967,465,o),
(969,512,qs),
(969,528,o),
(1001,530,qs),
(1026,530,o),
(1036,518,qs),
(1042,512,l),
(1042,510,ls),
(1042,383,o),
(954,305,qs),
(882,244,o),
(782,244,q),
(782,244,l)
);
},
{
closed = 1;
nodes = (
(662,698,o),
(594,657,qs),
(557,637,o),
(510,637,qs),
(438,637,o),
(391,682,qs),
(348,725,o),
(348,795,qs),
(348,848,o),
(387,893,qs),
(430,940,o),
(510,940,qs),
(584,940,o),
(629,883,q),
(645,856,l),
(657,823,l),
(662,786,l),
(662,782,ls)
);
},
{
closed = 1;
nodes = (
(664,-66,o),
(596,-106,qs),
(559,-126,o),
(512,-127,qs),
(440,-127,o),
(393,-82,qs),
(350,-39,o),
(350,31,qs),
(350,82,o),
(389,127,qs),
(432,174,o),
(512,176,qs),
(586,176,o),
(631,119,qs),
(664,77,o),
(664,18,q),
(664,18,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 4 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 4 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 4 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 4 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 4 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 0 2 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
57 1 7 6 4 1 5 1 24 1 4 2 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 5 3 1 5 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 4 10 2 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 3 5 3 1 5 128 0 4 2 0 2 4 0 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 10 1 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 5 3 1 5 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 4 10 2 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 3 5 3 1 5 128 0 4 2 0 2 4 0 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 10 1 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 5 3 1 5 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 4 10 2 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 3 5 3 1 5 128 0 4 2 0 2 4 0 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 10 1 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 5 3 1 5 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 4 10 2 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 3 5 3 1 5 128 0 4 2 0 2 4 0 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 10 1 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 5 3 1 5 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 4 10 2 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 3 5 3 1 5 128 0 4 2 0 2 4 0 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 10 1 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 5 3 1 5 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 4 10 2 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 3 5 3 1 5 128 0 4 2 0 2 4 0 128 0 6 0 7 3 6 7 105 0 3 0 5 2 3 5 105 0 2 10 1 0 8 2 0 105 0 8 9 9 8 89 0 8 8 9 97 0 9 8 9 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 71 69 63 61 54 52 46 44 34 32 28 27 21 19 15 13 9 7 0 39 1 38 11 6 22 
CALL[ ]	/* CallFunction */";
};
width = 1017;
}
);
note = uniF150;
unicode = 61776;
},
{
glyphname = uniF153;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-137,1268,o),
(-135,1253,q),
(-141,1219,ls),
(-157,1149,o),
(-176,1130,qs),
(-178,1128,o),
(-182,1128,qs),
(-596,1128,l),
(-641,1126,o),
(-653,1151,q),
(-657,1165,l),
(-657,1183,o),
(-631,1204,qs),
(-451,1356,o),
(-451,1501,qs),
(-451,1599,o),
(-514,1645,qs),
(-547,1668,o),
(-592,1667,qs),
(-684,1667,o),
(-750,1585,qs),
(-758,1575,o),
(-766,1563,qs),
(-770,1557,o),
(-778,1554,q),
(-792,1554,o),
(-811,1567,qs),
(-825,1577,o),
(-823,1589,q),
(-792,1663,o),
(-717,1722,qs),
(-627,1792,o),
(-524,1792,qs),
(-385,1792,o),
(-311,1706,q),
(-291,1675,ls),
(-264,1628,o),
(-264,1569,qs),
(-264,1467,o),
(-367,1360,qs),
(-432,1296,l),
(-455,1276,o),
(-465,1268,q),
(-141,1268,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
14 1 3 1 41 1 2 3 2 76 0 0 0 1 3 0 1 105 4 1 3 2 2 3 87 4 1 3 3 2 95 0 2 3 2 79 0 0 0 43 0 43 41 44 41 5 6 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniF153;
unicode = 61779;
},
{
glyphname = uniF160;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,37,o),
(424,-2,qs),
(387,-25,o),
(340,-25,qs),
(268,-25,o),
(221,20,qs),
(178,63,o),
(178,133,qs),
(178,184,o),
(215,227,qs),
(258,278,o),
(340,279,qs),
(416,279,o),
(461,219,qs),
(492,178,o),
(492,121,q),
(492,121,l)
);
},
{
closed = 1;
nodes = (
(1024,997,o),
(954,895,qs),
(841,735,o),
(729,735,qs),
(641,735,o),
(578,795,qs),
(520,852,l),
(477,889,o),
(426,889,qs),
(371,889,o),
(350,848,q),
(342,823,l),
(342,811,ls),
(342,752,o),
(399,705,qs),
(467,649,ls),
(496,624,o),
(506,598,qs),
(512,580,o),
(512,559,qs),
(512,496,o),
(469,455,q),
(446,436,l),
(409,420,o),
(373,418,q),
(254,418,o),
(193,518,qs),
(150,586,o),
(150,672,qs),
(150,817,o),
(254,915,qs),
(354,1011,o),
(500,1014,qs),
(592,1014,o),
(672,973,qs),
(731,946,o),
(752,944,q),
(822,944,o),
(909,1032,qs),
(952,1075,o),
(975,1118,qs),
(979,1126,o),
(995,1128,q),
(1016,1124,l),
(1047,1114,o),
(1053,1092,q),
(1053,1087,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
50 1 6 5 1 76 63 20 2 3 74 0 4 6 0 6 4 0 128 0 3 0 5 6 3 5 105 0 2 0 6 4 2 6 105 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 35 46 38 35 28 38 35 7 6 29 
CALL[ ]	/* CallFunction */";
};
width = 899;
}
);
note = uniF160;
unicode = 61792;
},
{
glyphname = uniF161;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,37,o),
(424,-2,qs),
(387,-25,o),
(340,-25,qs),
(268,-25,o),
(221,20,qs),
(178,63,o),
(178,133,qs),
(178,184,o),
(215,227,qs),
(258,278,o),
(340,279,qs),
(416,279,o),
(461,219,qs),
(492,178,o),
(492,121,q),
(492,121,l)
);
},
{
closed = 1;
nodes = (
(680,741,o),
(590,629,qs),
(510,529,o),
(395,528,qs),
(291,528,o),
(229,602,qs),
(192,647,o),
(193,698,qs),
(193,768,o),
(256,801,qs),
(289,817,o),
(328,817,qs),
(379,817,o),
(428,774,qs),
(459,749,o),
(471,750,qs),
(539,750,o),
(616,877,qs),
(645,922,o),
(662,963,qs),
(666,973,o),
(680,975,q),
(696,971,l),
(710,965,o),
(711,950,qs),
(711,946,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
42 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 2 3 112 0 2 0 4 0 2 4 106 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 3 133 0 2 0 4 0 2 4 106 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 35 28 38 35 5 6 27 
CALL[ ]	/* CallFunction */";
};
width = 630;
}
);
note = uniF161;
unicode = 61793;
},
{
glyphname = uniF162;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1010,354,o),
(946,317,qs),
(918,303,l),
(893,295,o),
(868,295,qs),
(794,295,o),
(752,340,qs),
(713,379,o),
(713,442,qs),
(713,495,o),
(752,537,qs),
(795,582,o),
(868,582,qs),
(936,582,o),
(979,526,qs),
(1010,487,o),
(1010,432,q),
(1010,432,l)
);
},
{
closed = 1;
nodes = (
(481,629,o),
(422,590,qs),
(385,565,o),
(340,565,qs),
(277,565,o),
(229,606,qs),
(186,647,o),
(186,713,qs),
(186,772,o),
(268,854,o),
(412,854,o),
(453,799,qs),
(481,758,o),
(481,707,q),
(481,707,l)
);
},
{
closed = 1;
nodes = (
(481,35,o),
(420,-4,qs),
(385,-27,o),
(340,-27,qs),
(272,-27,o),
(227,16,qs),
(184,57,o),
(186,123,qs),
(186,176,o),
(225,217,qs),
(266,260,o),
(340,260,qs),
(412,260,o),
(453,205,qs),
(481,164,o),
(481,113,q),
(481,113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 0 3 1 2 3 105 0 0 0 1 4 0 1 105 0 4 5 5 4 89 0 4 4 5 97 0 5 4 5 81 38 39 37 24 38 35 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = uniF162;
unicode = 61794;
},
{
glyphname = uniF193;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,694,ls),
(674,737,o),
(670,745,qs),
(666,755,o),
(653,764,qs),
(606,793,o),
(541,793,qs),
(408,793,o),
(344,649,qs),
(305,561,o),
(307,444,qs),
(307,251,o),
(385,141,qs),
(444,59,o),
(530,61,qs),
(616,61,o),
(659,113,qs),
(674,131,o),
(674,141,q),
(674,141,l)
);
},
{
closed = 1;
nodes = (
(993,19,o),
(866,-4,q),
(764,-31,o),
(735,-35,q),
(723,-35,ls),
(713,-35,o),
(713,10,qs),
(713,39,ls),
(713,62,o),
(702,61,qs),
(690,61,o),
(674,47,q),
(580,-23,o),
(479,-23,qs),
(235,-23,o),
(125,152,qs),
(53,263,o),
(53,418,qs),
(53,594,o),
(174,721,qs),
(321,871,o),
(567,870,qs),
(616,870,o),
(647,866,qs),
(674,864,o),
(674,889,qs),
(674,1161,ls),
(674,1286,o),
(582,1286,qs),
(566,1286,o),
(565,1323,qs),
(565,1362,o),
(582,1360,q),
(631,1360,o),
(768,1427,qs),
(834,1460,o),
(852,1477,qs),
(864,1487,o),
(879,1487,qs),
(910,1487,o),
(909,1454,qs),
(903,1384,o),
(903,1286,qs),
(903,846,l),
(1438,846,ls),
(1495,846,o),
(1493,827,qs),
(1493,807,o),
(1417,760,qs),
(1362,727,o),
(1229,537,o),
(1229,434,qs),
(1229,313,o),
(1327,213,o),
(1399,213,qs),
(1551,213,o),
(1647,305,qs),
(1659,315,o),
(1679,297,qs),
(1695,283,o),
(1696,276,qs),
(1696,274,o),
(1694,272,qs),
(1553,96,o),
(1356,96,qs),
(1215,96,o),
(1085,248,o),
(1085,473,o),
(1200,670,o),
(1278,723,q),
(903,723,l),
(903,256,ls),
(903,166,o),
(913,139,qs),
(927,98,o),
(967,98,qs),
(979,98,o),
(999,104,qs),
(1015,108,o),
(1026,74,q),
(1034,35,o),
(1022,31,q),
(1022,31,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
71 61 55 39 22 19 6 7 73 0 12 0 4 0 12 4 131 0 2 4 5 4 2 5 131 0 7 8 7 137 0 4 0 5 3 4 5 109 0 3 0 6 10 3 6 107 0 1 0 10 9 1 10 109 0 9 0 8 7 9 8 109 0 13 13 33 77 0 0 0 11 97 0 11 11 33 0 78 98 96 93 91 89 87 81 79 74 72 21 20 40 40 36 20 44 38 35 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1714;
}
);
note = uniF193;
unicode = 61843;
},
{
glyphname = uniF194;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(743,317,o),
(844,217,o),
(913,217,qs),
(1065,217,o),
(1161,309,qs),
(1173,319,o),
(1194,303,qs),
(1210,289,o),
(1210,281,qs),
(1210,276,l),
(1063,100,o),
(872,100,qs),
(731,100,o),
(600,254,o),
(600,367,qs),
(600,480,o),
(733,690,o),
(813,745,q),
(430,745,ls),
(393,745,o),
(393,709,qs),
(393,135,ls),
(393,67,o),
(526,68,qs),
(542,68,o),
(543,-8,o),
(526,-8,q),
(446,0,o),
(287,0,qs),
(140,0,o),
(55,-8,q),
(41,-8,o),
(41,68,o),
(55,68,qs),
(164,68,o),
(164,135,qs),
(164,709,ls),
(164,746,o),
(127,745,qs),
(72,745,ls),
(56,745,o),
(55,819,o),
(72,819,qs),
(119,819,o),
(164,885,o),
(164,932,qs),
(164,1077,o),
(231,1210,qs),
(264,1276,o),
(309,1321,qs),
(467,1487,o),
(674,1487,qs),
(797,1487,o),
(858,1427,qs),
(897,1390,o),
(897,1343,qs),
(897,1288,o),
(844,1247,qs),
(813,1222,o),
(784,1223,qs),
(684,1223,o),
(637,1313,qs),
(608,1374,o),
(559,1374,qs),
(502,1374,o),
(463,1321,qs),
(393,1225,o),
(393,1049,qs),
(393,887,ls),
(393,850,o),
(430,850,qs),
(952,850,ls),
(1009,850,o),
(1010,831,qs),
(1010,811,o),
(934,764,qs),
(879,731,o),
(743,540,o),
(743,438,q),
(743,438,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
69 52 2 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 1 1 2 117 0 10 0 11 5 10 11 109 0 4 0 5 4 93 9 1 5 0 0 2 5 0 107 0 1 0 3 1 3 102 8 1 6 6 7 97 0 7 7 33 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 0 1 0 2 1 131 0 10 0 11 5 10 11 109 0 4 0 5 4 93 9 1 5 0 0 2 5 0 107 0 1 0 3 1 3 102 8 1 6 6 7 97 0 7 7 33 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
77 75 68 66 61 59 35 36 19 50 23 38 34 37 54 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1236;
}
);
note = uniF194;
unicode = 61844;
},
{
glyphname = uniF195;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(782,-70,o),
(868,-168,o),
(938,-168,qs),
(1055,-168,o),
(1155,-66,qs),
(1165,-56,o),
(1188,-74,qs),
(1204,-88,o),
(1204,-94,qs),
(1204,-96,o),
(1202,-98,qs),
(1034,-284,o),
(897,-287,qs),
(756,-287,o),
(639,-133,o),
(639,-20,qs),
(639,93,o),
(727,268,o),
(823,358,q),
(440,358,ls),
(393,358,o),
(393,303,qs),
(393,143,ls),
(393,67,o),
(502,68,qs),
(516,68,o),
(516,-8,o),
(502,-8,q),
(418,0,o),
(287,0,qs),
(133,0,o),
(49,-8,q),
(35,-8,o),
(35,68,o),
(49,68,qs),
(164,68,o),
(164,139,qs),
(164,1161,ls),
(164,1280,o),
(72,1286,qs),
(56,1288,o),
(55,1323,qs),
(55,1360,o),
(72,1360,qs),
(121,1360,o),
(256,1427,qs),
(311,1454,o),
(342,1477,qs),
(354,1487,o),
(371,1487,qs),
(400,1487,o),
(399,1460,qs),
(393,1323,o),
(393,1286,qs),
(393,528,ls),
(393,491,o),
(414,492,qs),
(459,492,o),
(494,530,qs),
(647,700,ls),
(680,735,o),
(680,754,qs),
(680,785,o),
(596,784,qs),
(580,784,o),
(580,856,o),
(596,856,q),
(655,850,o),
(813,850,qs),
(952,850,o),
(1016,856,q),
(1030,856,o),
(1030,784,o),
(1016,784,qs),
(912,784,o),
(834,713,qs),
(625,524,ls),
(615,514,o),
(614,494,qs),
(614,463,o),
(662,463,qs),
(991,463,ls),
(1048,463,o),
(1047,444,qs),
(1047,424,o),
(971,379,qs),
(916,346,o),
(848,250,qs),
(782,153,o),
(782,51,q),
(782,51,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
79 62 48 28 23 5 5 73 0 4 0 1 0 4 117 0 6 2 5 2 6 5 131 0 5 5 132 0 11 0 12 8 11 12 109 0 10 0 0 4 10 0 107 3 1 1 0 2 6 1 2 109 9 1 7 7 8 97 0 8 8 33 7 78 88 86 78 76 71 69 66 64 36 24 21 21 37 35 36 21 55 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1071;
}
);
note = uniF195;
unicode = 61845;
},
{
glyphname = uniF196;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(811,-111,o),
(575,-111,qs),
(362,-111,ls),
(342,-111,o),
(322,-125,qs),
(259,-170,o),
(258,-248,qs),
(258,-324,o),
(317,-379,qs),
(385,-440,o),
(504,-440,qs),
(756,-440,o),
(803,-299,qs),
(811,-273,o),
(811,-242,q),
(811,-242,l)
);
},
{
closed = 1;
nodes = (
(592,698,o),
(520,764,qs),
(489,793,o),
(446,793,qs),
(374,793,o),
(328,707,qs),
(289,637,o),
(289,549,qs),
(289,428,o),
(348,352,qs),
(393,295,o),
(461,295,qs),
(549,295,o),
(580,414,qs),
(592,463,o),
(592,522,q),
(592,522,l)
);
},
{
closed = 1;
nodes = (
(981,-303,o),
(834,-422,qs),
(662,-559,o),
(412,-559,qs),
(113,-559,o),
(41,-412,qs),
(21,-371,o),
(20,-319,qs),
(20,-237,o),
(123,-154,qs),
(158,-125,o),
(203,-102,qs),
(217,-96,o),
(217,-88,qs),
(217,-84,o),
(201,-76,q),
(68,-21,o),
(68,98,qs),
(68,174,o),
(213,236,qs),
(229,242,o),
(229,250,qs),
(229,254,o),
(211,266,qs),
(57,362,o),
(57,528,qs),
(57,669,o),
(166,768,qs),
(279,870,o),
(442,870,qs),
(553,870,o),
(664,827,q),
(734,796,o),
(764,797,qs),
(1286,797,ls),
(1343,797,o),
(1343,778,qs),
(1343,755,o),
(1268,711,qs),
(1213,678,o),
(1145,582,qs),
(1079,486,o),
(1079,385,qs),
(1079,264,o),
(1178,164,o),
(1247,164,qs),
(1399,164,o),
(1495,254,qs),
(1507,264,o),
(1530,248,q),
(1546,234,o),
(1546,227,qs),
(1546,225,o),
(1544,223,qs),
(1397,47,o),
(1206,47,qs),
(1065,47,o),
(934,199,o),
(934,311,qs),
(934,424,o),
(1067,629,o),
(1147,682,q),
(856,682,ls),
(825,682,o),
(825,653,qs),
(825,575,ls),
(825,405,o),
(707,305,qs),
(603,217,o),
(430,217,qs),
(381,217,o),
(324,223,q),
(312,223,o),
(301,217,q),
(264,186,o),
(264,160,qs),
(264,127,o),
(303,109,qs),
(336,93,o),
(391,92,qs),
(645,92,ls),
(774,92,o),
(838,72,qs),
(981,25,o),
(981,-141,q),
(981,-141,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
81 64 46 3 10 73 0 11 0 0 1 11 0 109 0 1 0 4 8 1 4 107 0 7 0 8 5 7 8 109 0 5 0 2 6 5 2 109 0 3 9 10 3 93 0 6 0 9 10 6 9 107 0 3 3 10 97 0 10 3 10 81 115 113 89 87 85 83 40 37 37 40 55 38 37 54 35 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1579;
}
);
note = uniF196;
unicode = 61846;
},
{
glyphname = uniF198;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1014,291,o),
(1112,190,o),
(1184,190,qs),
(1336,190,o),
(1432,283,q),
(1444,293,o),
(1464,274,qs),
(1480,260,o),
(1481,254,qs),
(1481,252,o),
(1479,250,qs),
(1332,74,o),
(1141,74,qs),
(1000,74,o),
(870,227,o),
(870,338,qs),
(870,451,o),
(1001,664,o),
(1081,717,q),
(803,717,l),
(797,680,o),
(774,655,qs),
(739,620,o),
(709,621,qs),
(672,621,o),
(653,649,q),
(614,715,ls),
(575,774,o),
(502,774,qs),
(420,774,o),
(360,682,qs),
(294,580,o),
(295,436,qs),
(295,303,o),
(463,125,o),
(563,125,qs),
(672,125,o),
(750,180,qs),
(766,192,o),
(797,150,q),
(824,107,o),
(805,96,qs),
(723,43,l),
(606,-23,o),
(457,-23,qs),
(318,-23,o),
(66,199,o),
(66,387,qs),
(66,557,o),
(172,694,qs),
(307,870,o),
(522,870,qs),
(661,870,o),
(750,823,q),
(1223,823,ls),
(1280,823,o),
(1278,805,qs),
(1278,785,o),
(1147,705,o),
(1014,514,o),
(1014,412,q),
(1014,412,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
50 4 2 1 73 0 5 8 6 8 5 6 131 0 7 0 8 5 7 8 109 0 6 0 0 1 6 0 107 0 4 0 1 4 1 101 0 3 3 2 97 0 2 2 33 3 78 40 37 19 35 37 39 37 33 37 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1503;
}
);
note = uniF198;
unicode = 61848;
},
{
glyphname = uniF199;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(846,317,o),
(944,217,o),
(1014,217,qs),
(1166,217,o),
(1264,309,qs),
(1276,319,o),
(1296,303,qs),
(1312,289,o),
(1313,281,qs),
(1313,279,o),
(1311,276,qs),
(1164,100,o),
(973,100,qs),
(832,100,o),
(700,254,o),
(700,367,qs),
(700,480,o),
(834,690,o),
(913,745,q),
(416,745,ls),
(385,745,o),
(385,715,qs),
(385,299,ls),
(385,178,o),
(420,139,qs),
(447,108,o),
(506,109,qs),
(557,109,o),
(633,156,q),
(643,164,o),
(672,131,qs),
(690,108,o),
(688,96,qs),
(688,92,o),
(686,90,qs),
(577,-23,o),
(412,-23,qs),
(193,-21,o),
(160,160,qs),
(154,193,o),
(154,233,qs),
(154,715,ls),
(154,746,o),
(123,745,qs),
(68,745,ls),
(52,745,o),
(51,819,o),
(68,819,qs),
(129,819,o),
(201,879,qs),
(271,936,o),
(293,1004,qs),
(297,1016,o),
(336,1006,qs),
(379,994,o),
(385,975,q),
(385,881,ls),
(385,850,o),
(416,850,qs),
(1053,850,ls),
(1110,850,o),
(1110,831,qs),
(1110,811,o),
(979,731,o),
(846,540,o),
(846,438,q),
(846,438,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
10 1 3 74 55 4 2 0 73 0 6 0 7 2 6 7 109 0 1 0 2 1 93 5 1 2 0 0 2 0 99 0 4 4 3 97 0 3 3 33 4 78 40 37 37 40 37 50 25 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1329;
}
);
note = uniF199;
unicode = 61849;
},
{
glyphname = uniF19A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1726,328,o),
(1315,0,o),
(1053,0,qs),
(858,0,ls),
(735,0,o),
(633,-8,q),
(619,-8,o),
(618,68,o),
(633,68,qs),
(733,68,o),
(733,129,qs),
(733,537,ls),
(733,687,o),
(676,737,qs),
(647,762,o),
(580,762,qs),
(519,762,o),
(461,713,qs),
(393,656,o),
(393,592,qs),
(393,143,ls),
(393,67,o),
(492,68,qs),
(506,68,o),
(508,-8,o),
(492,-8,q),
(408,0,o),
(276,0,qs),
(141,0,o),
(57,-8,q),
(43,-8,o),
(43,68,o),
(57,68,qs),
(163,68,o),
(164,143,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(121,756,o),
(258,823,qs),
(321,854,o),
(342,872,qs),
(354,882,o),
(369,883,qs),
(398,883,o),
(399,856,q),
(393,788,l),
(393,770,o),
(412,768,o),
(420,778,qs),
(463,833,o),
(557,858,qs),
(598,868,o),
(653,870,qs),
(841,870,o),
(928,684,qs),
(965,610,o),
(963,465,qs),
(963,135,ls),
(963,72,o),
(1053,68,q),
(1246,127,o),
(1528,393,o),
(1528,635,qs),
(1528,926,o),
(1194,1321,o),
(915,1321,qs),
(733,1321,o),
(618,1245,qs),
(612,1241,o),
(586,1292,o),
(596,1298,q),
(739,1417,o),
(918,1417,qs),
(1336,1417,o),
(1726,936,o),
(1726,633,q),
(1726,633,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
54 5 2 0 73 0 4 3 1 3 4 1 131 0 6 0 5 10 6 5 109 0 10 0 3 4 10 3 109 0 1 0 0 1 0 101 11 9 7 3 2 2 8 97 12 1 8 8 33 2 78 78 73 71 70 65 63 58 56 36 19 34 21 24 37 21 37 34 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1763;
}
);
note = uniF19A;
unicode = 61850;
},
{
glyphname = uniF19B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(686,907,o),
(684,973,qs),
(684,1110,o),
(551,1268,o),
(438,1268,qs),
(280,1268,o),
(152,1182,qs),
(146,1178,o),
(117,1227,o),
(127,1233,q),
(295,1364,o),
(440,1364,qs),
(628,1364,o),
(823,1124,o),
(823,963,qs),
(823,832,o),
(745,696,q),
(735,673,o),
(715,657,qs),
(688,632,o),
(653,633,qs),
(602,633,o),
(551,684,qs),
(528,707,o),
(502,707,qs),
(459,707,o),
(426,649,qs),
(393,594,o),
(393,522,qs),
(393,143,ls),
(393,67,o),
(496,68,qs),
(510,68,o),
(512,-8,o),
(496,-8,q),
(412,0,o),
(287,0,qs),
(144,0,o),
(59,-8,q),
(45,-8,o),
(43,68,o),
(59,68,qs),
(163,68,o),
(164,143,qs),
(164,549,ls),
(164,682,o),
(72,682,qs),
(56,682,o),
(55,756,o),
(72,756,qs),
(123,756,o),
(262,825,qs),
(321,856,o),
(342,872,qs),
(354,882,o),
(371,883,qs),
(396,883,o),
(399,862,q),
(393,788,l),
(393,765,o),
(420,766,o),
(442,791,qs),
(510,871,o),
(610,870,qs),
(649,868,o),
(680,856,q),
(680,856,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 31 8 7 4 10 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 3 9 8 117 0 1 3 0 3 1 0 131 0 2 0 11 0 2 11 131 0 4 0 3 1 4 3 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 4 1 9 8 117 0 2 0 11 0 2 11 131 0 4 3 1 1 0 4 1 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 3 9 8 117 0 1 3 0 3 1 0 131 0 2 0 11 0 2 11 131 0 4 0 3 1 4 3 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 4 1 9 8 117 0 2 0 11 0 2 11 131 0 4 3 1 1 0 4 1 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 3 9 8 117 0 1 3 0 3 1 0 131 0 2 0 11 0 2 11 131 0 4 0 3 1 4 3 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 4 1 9 8 117 0 2 0 11 0 2 11 131 0 4 3 1 1 0 4 1 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 3 9 8 117 0 1 3 0 3 1 0 131 0 2 0 11 0 2 11 131 0 4 0 3 1 4 3 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 4 1 9 8 117 0 2 0 11 0 2 11 131 0 4 3 1 1 0 4 1 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 3 9 8 117 0 1 3 0 3 1 0 131 0 2 0 11 0 2 11 131 0 4 0 3 1 4 3 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 8 4 3 4 8 3 131 0 1 3 0 3 1 0 131 0 2 0 11 0 2 11 131 0 4 0 3 1 4 3 109 0 9 0 0 2 9 0 109 0 11 0 10 11 10 101 7 1 5 5 6 97 0 6 6 33 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
62 60 55 53 46 44 37 35 36 19 34 21 19 18 33 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uniF19B;
unicode = 61851;
},
{
glyphname = uniF1A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,-410,o),
(530,-467,qs),
(456,-514,o),
(358,-514,qs),
(233,-514,o),
(207,-453,qs),
(201,-441,o),
(201,-424,qs),
(201,-381,o),
(238,-362,qs),
(250,-356,o),
(266,-356,qs),
(297,-356,o),
(342,-395,qs),
(387,-430,o),
(406,-432,q),
(437,-432,o),
(453,-408,q),
(459,-396,o),
(459,-381,qs),
(459,-303,o),
(317,-240,qs),
(303,-233,l),
(297,-217,l),
(383,-94,l),
(526,-151,o),
(578,-213,qs),
(618,-261,o),
(618,-324,q),
(618,-324,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
21 9 2 0 1 1 76 5 4 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 1 0 0 1 112 0 0 0 2 98 0 2 2 73 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 0 1 112 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
39 19 28 3 11 25 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uniF1A0;
unicode = 61856;
},
{
glyphname = uniF6BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,711,o),
(367,682,qs),
(367,139,ls),
(367,-47,o),
(356,-129,qs),
(331,-303,o),
(248,-416,qs),
(172,-518,o),
(41,-547,qs),
(4,-555,o),
(-33,-555,qs),
(-45,-555,ls),
(-100,-553,o),
(-150,-512,qs),
(-193,-473,o),
(-193,-426,qs),
(-193,-369,o),
(-141,-340,qs),
(-114,-326,o),
(-84,-324,qs),
(-41,-324,o),
(-4,-377,qs),
(31,-424,o),
(35,-426,q),
(55,-449,o),
(76,-449,qs),
(121,-449,o),
(131,-358,qs),
(135,-315,o),
(137,-229,qs),
(137,557,ls),
(137,682,o),
(45,682,qs),
(31,682,o),
(31,756,o),
(45,756,qs),
(96,756,o),
(233,823,qs),
(296,854,o),
(317,872,qs),
(331,882,o),
(346,883,qs),
(375,883,o),
(375,856,qs),
(375,850,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 133 0 3 4 5 4 3 5 128 0 1 0 2 4 1 2 105 0 4 3 5 4 89 0 4 4 5 97 0 5 4 5 81 54 36 37 34 21 17 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniF6BE;
unicode = 63166;
},
{
glyphname = uniF701;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(358,-262,o),
(500,-262,qs),
(514,-262,o),
(514,-338,o),
(500,-338,q),
(416,-330,o),
(248,-330,qs),
(105,-330,o),
(25,-338,q),
(9,-338,o),
(8,-262,o),
(25,-262,qs),
(127,-262,o),
(129,-178,qs),
(129,862,ls),
(129,1040,o),
(279,1208,qs),
(392,1333,o),
(590,1331,qs),
(787,1331,o),
(858,1231,qs),
(915,1149,o),
(915,1077,qs),
(915,895,o),
(725,782,qs),
(692,764,o),
(692,758,qs),
(692,748,o),
(721,741,qs),
(981,690,o),
(981,412,qs),
(981,234,o),
(864,98,qs),
(762,-23,o),
(526,-23,qs),
(430,-23,o),
(358,6,q),
(358,-176,ls)
);
},
{
closed = 1;
nodes = (
(727,575,o),
(684,637,qs),
(641,694,o),
(571,694,qs),
(514,694,o),
(457,678,qs),
(443,674,o),
(442,719,qs),
(442,758,o),
(457,758,qs),
(510,762,l),
(614,778,o),
(659,825,qs),
(716,886,o),
(713,1055,qs),
(711,1133,o),
(653,1188,qs),
(614,1229,o),
(526,1229,qs),
(465,1229,o),
(414,1180,qs),
(359,1127,o),
(358,1026,qs),
(358,121,l),
(415,58,o),
(571,57,qs),
(639,57,o),
(680,139,qs),
(727,235,o),
(727,389,q),
(727,389,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
60 1 7 6 44 1 5 7 0 1 0 5 3 76 32 1 3 73 0 7 6 5 6 7 5 128 0 1 0 6 7 1 6 105 0 5 0 0 2 5 0 105 4 1 2 3 3 2 89 4 1 2 2 3 97 0 3 2 3 81 45 37 37 35 36 21 46 33 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 1048;
}
);
note = uniF701;
unicode = 63233;
},
{
glyphname = uniF702;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(924,440,o),
(854,270,qs),
(737,-17,o),
(477,-16,qs),
(209,-16,o),
(96,274,qs),
(33,442,o),
(33,668,qs),
(33,899,o),
(111,1071,qs),
(228,1331,o),
(479,1333,qs),
(741,1333,o),
(854,1049,qs),
(924,874,o),
(924,643,q),
(924,643,l)
);
},
{
closed = 1;
nodes = (
(283,571,l),
(287,393,o),
(309,297,qs),
(360,76,o),
(475,76,qs),
(672,75,o),
(672,571,q),
(672,571,l)
);
},
{
closed = 1;
nodes = (
(672,711,l),
(668,930,o),
(633,1069,qs),
(592,1243,o),
(481,1243,qs),
(323,1243,o),
(289,889,qs),
(281,813,o),
(281,711,q),
(281,711,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 4 5 0 4 105 0 5 0 3 2 5 3 103 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 19 36 19 37 38 35 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 954;
}
);
note = uniF702;
unicode = 63234;
},
{
glyphname = uniF721;
layers = (
{
layerId = m01;
shapes = (
{
ref = exclam.sc;
}
);
width = 581;
}
);
note = uniF721;
unicode = 63265;
},
{
glyphname = uniF726;
layers = (
{
layerId = m01;
shapes = (
{
ref = ampersand.sc;
}
);
width = 1214;
}
);
note = uniF726;
unicode = 63270;
},
{
glyphname = uniF730;
layers = (
{
layerId = m01;
shapes = (
{
ref = zero.oldstyle;
}
);
width = 1089;
}
);
note = uniF730;
unicode = 63280;
},
{
glyphname = uniF731;
layers = (
{
layerId = m01;
shapes = (
{
ref = one.oldstyle;
}
);
width = 686;
}
);
note = uniF731;
unicode = 63281;
},
{
glyphname = uniF732;
layers = (
{
layerId = m01;
shapes = (
{
ref = two.oldstyle;
}
);
width = 940;
}
);
note = uniF732;
unicode = 63282;
},
{
glyphname = uniF733;
layers = (
{
layerId = m01;
shapes = (
{
ref = three.oldstyle;
}
);
width = 786;
}
);
note = uniF733;
unicode = 63283;
},
{
glyphname = uniF734;
layers = (
{
layerId = m01;
shapes = (
{
ref = four.oldstyle;
}
);
width = 942;
}
);
note = uniF734;
unicode = 63284;
},
{
glyphname = uniF735;
layers = (
{
layerId = m01;
shapes = (
{
ref = five.oldstyle;
}
);
width = 776;
}
);
note = uniF735;
unicode = 63285;
},
{
glyphname = uniF736;
layers = (
{
layerId = m01;
shapes = (
{
ref = six.oldstyle;
}
);
width = 1054;
}
);
note = uniF736;
unicode = 63286;
},
{
glyphname = uniF737;
layers = (
{
layerId = m01;
shapes = (
{
ref = seven.oldstyle;
}
);
width = 835;
}
);
note = uniF737;
unicode = 63287;
},
{
glyphname = uniF738;
layers = (
{
layerId = m01;
shapes = (
{
ref = eight.oldstyle;
}
);
width = 849;
}
);
note = uniF738;
unicode = 63288;
},
{
glyphname = uniF739;
layers = (
{
layerId = m01;
shapes = (
{
ref = nine.oldstsyle;
}
);
width = 1009;
}
);
note = uniF739;
unicode = 63289;
},
{
glyphname = uniF73F;
layers = (
{
layerId = m01;
shapes = (
{
ref = question.sc;
}
);
width = 585;
}
);
note = uniF73F;
unicode = 63295;
},
{
glyphname = uniF761;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
}
);
width = 1052;
}
);
note = uniF761;
unicode = 63329;
},
{
glyphname = uniF762;
layers = (
{
layerId = m01;
shapes = (
{
ref = b.sc;
}
);
width = 1007;
}
);
note = uniF762;
unicode = 63330;
},
{
glyphname = uniF763;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
}
);
width = 1013;
}
);
note = uniF763;
unicode = 63331;
},
{
glyphname = uniF764;
layers = (
{
layerId = m01;
shapes = (
{
ref = d.sc;
}
);
width = 1177;
}
);
note = uniF764;
unicode = 63332;
},
{
glyphname = uniF765;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
}
);
width = 958;
}
);
note = uniF765;
unicode = 63333;
},
{
glyphname = uniF766;
layers = (
{
layerId = m01;
shapes = (
{
ref = f.sc;
}
);
width = 921;
}
);
note = uniF766;
unicode = 63334;
},
{
glyphname = uniF767;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
}
);
width = 1067;
}
);
note = uniF767;
unicode = 63335;
},
{
glyphname = uniF768;
layers = (
{
layerId = m01;
shapes = (
{
ref = h.sc;
}
);
width = 1265;
}
);
note = uniF768;
unicode = 63336;
},
{
glyphname = uniF769;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
}
);
width = 624;
}
);
note = uniF769;
unicode = 63337;
},
{
glyphname = uniF76A;
layers = (
{
layerId = m01;
shapes = (
{
ref = j.sc;
}
);
width = 628;
}
);
note = uniF76A;
unicode = 63338;
},
{
glyphname = uniF76B;
layers = (
{
layerId = m01;
shapes = (
{
ref = k.sc;
}
);
width = 1122;
}
);
note = uniF76B;
unicode = 63339;
},
{
glyphname = uniF76C;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
}
);
width = 1019;
}
);
note = uniF76C;
unicode = 63340;
},
{
glyphname = uniF76D;
layers = (
{
layerId = m01;
shapes = (
{
ref = m.sc;
}
);
width = 1366;
}
);
note = uniF76D;
unicode = 63341;
},
{
glyphname = uniF76E;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
}
);
width = 1060;
}
);
note = uniF76E;
unicode = 63342;
},
{
glyphname = uniF76F;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
}
);
width = 1060;
}
);
note = uniF76F;
unicode = 63343;
},
{
glyphname = uniF770;
layers = (
{
layerId = m01;
shapes = (
{
ref = p.sc;
}
);
width = 954;
}
);
note = uniF770;
unicode = 63344;
},
{
glyphname = uniF771;
layers = (
{
layerId = m01;
shapes = (
{
ref = q.sc;
}
);
width = 1060;
}
);
note = uniF771;
unicode = 63345;
},
{
glyphname = uniF772;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
}
);
width = 1095;
}
);
note = uniF772;
unicode = 63346;
},
{
glyphname = uniF773;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
}
);
width = 808;
}
);
note = uniF773;
unicode = 63347;
},
{
glyphname = uniF774;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
}
);
width = 1034;
}
);
note = uniF774;
unicode = 63348;
},
{
glyphname = uniF775;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
}
);
width = 1159;
}
);
note = uniF775;
unicode = 63349;
},
{
glyphname = uniF776;
layers = (
{
layerId = m01;
shapes = (
{
ref = v.sc;
}
);
width = 970;
}
);
note = uniF776;
unicode = 63350;
},
{
glyphname = uniF777;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc;
}
);
width = 1464;
}
);
note = uniF777;
unicode = 63351;
},
{
glyphname = uniF778;
layers = (
{
layerId = m01;
shapes = (
{
ref = x.sc;
}
);
width = 1044;
}
);
note = uniF778;
unicode = 63352;
},
{
glyphname = uniF779;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
}
);
width = 1009;
}
);
note = uniF779;
unicode = 63353;
},
{
glyphname = uniF77A;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
}
);
width = 950;
}
);
note = uniF77A;
unicode = 63354;
},
{
glyphname = uniF7A1;
layers = (
{
layerId = m01;
shapes = (
{
ref = exclamdown.sc;
}
);
width = 581;
}
);
note = uniF7A1;
unicode = 63393;
},
{
glyphname = uniF7E0;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (790,0);
ref = gravecomb.sc;
}
);
width = 1052;
}
);
note = uniF7E0;
unicode = 63456;
},
{
glyphname = uniF7E1;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (827,0);
ref = acutecomb.sc;
}
);
width = 1052;
}
);
note = uniF7E1;
unicode = 63457;
},
{
glyphname = uniF7E2;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (918,0);
ref = uni0302.sc;
}
);
width = 1052;
}
);
note = uniF7E2;
unicode = 63458;
},
{
glyphname = uniF7E3;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (881,0);
ref = tildecomb.sc;
}
);
width = 1052;
}
);
note = uniF7E3;
unicode = 63459;
},
{
glyphname = uniF7E4;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (969,0);
ref = uni0308.sc;
}
);
width = 1052;
}
);
note = uniF7E4;
unicode = 63460;
},
{
glyphname = uniF7E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,813,ls),
(407,836,o),
(408,840,q),
(408,846,o),
(401,852,qs),
(376,877,o),
(451,895,o),
(575,952,o),
(616,952,o),
(627,911,qs),
(647,841,o),
(659,807,qs),
(893,147,ls),
(922,67,o),
(1030,68,qs),
(1040,68,o),
(1044,-6,o),
(1030,-6,q),
(969,0,o),
(680,0,o),
(618,-6,q),
(604,-6,o),
(602,68,o),
(618,68,qs),
(700,68,o),
(674,147,qs),
(616,324,l),
(612,340,o),
(592,340,qs),
(342,340,ls),
(328,340,o),
(319,322,q),
(254,145,ls),
(225,67,o),
(344,68,qs),
(358,68,o),
(358,-6,o),
(344,-6,q),
(283,0,o),
(68,0,o),
(6,-6,q),
(-8,-6,o),
(-6,68,o),
(6,68,qs),
(106,70,o),
(143,160,q),
(143,160,l)
);
},
{
closed = 1;
nodes = (
(365,432,o),
(385,432,qs),
(555,432,ls),
(582,432,o),
(573,457,qs),
(496,698,ls),
(492,712,o),
(467,713,o),
(461,698,qs),
(371,455,l)
);
},
{
closed = 1;
nodes = (
(756,1145,o),
(664,1077,qs),
(613,1040,o),
(535,1042,qs),
(422,1042,o),
(356,1122,qs),
(311,1175,o),
(311,1245,qs),
(311,1331,o),
(379,1391,qs),
(440,1446,o),
(535,1446,qs),
(650,1446,o),
(713,1366,qs),
(756,1313,o),
(756,1245,q),
(756,1245,l)
);
},
{
closed = 1;
nodes = (
(633,1315,o),
(584,1356,qs),
(564,1372,o),
(535,1374,qs),
(478,1374,o),
(449,1307,qs),
(439,1280,o),
(436,1245,q),
(436,1167,o),
(483,1135,qs),
(506,1121,o),
(535,1120,qs),
(596,1120,o),
(621,1182,qs),
(633,1210,o),
(633,1245,q),
(633,1245,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
82 1 12 13 1 76 28 8 2 1 73 0 7 11 8 11 7 8 128 0 8 9 11 8 9 126 0 10 0 13 12 10 13 105 0 12 0 11 7 12 11 105 0 9 0 3 0 9 3 103 6 4 2 3 0 1 1 0 89 6 4 2 3 0 0 1 97 5 1 1 0 1 81 87 85 79 77 70 68 62 60 55 52 26 21 35 20 19 51 35 20 17 14 6 31 
CALL[ ]	/* CallFunction */";
};
width = 1052;
}
);
note = uniF7E5;
unicode = 63461;
},
{
glyphname = uniF7E6;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae.sc;
}
);
width = 1353;
}
);
note = uniF7E6;
unicode = 63462;
},
{
glyphname = uniF7E7;
layers = (
{
layerId = m01;
shapes = (
{
ref = ccedilla.sc;
}
);
width = 1013;
}
);
note = uniF7E7;
unicode = 63463;
},
{
glyphname = uniF7E8;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (773,0);
ref = gravecomb.sc;
}
);
width = 958;
}
);
note = uniF7E8;
unicode = 63464;
},
{
glyphname = uniF7E9;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (810,0);
ref = acutecomb.sc;
}
);
width = 958;
}
);
note = uniF7E9;
unicode = 63465;
},
{
glyphname = uniF7EA;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (901,0);
ref = uni0302.sc;
}
);
width = 958;
}
);
note = uniF7EA;
unicode = 63466;
},
{
glyphname = uniF7EB;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (952,0);
ref = uni0308.sc;
}
);
width = 958;
}
);
note = uniF7EB;
unicode = 63467;
},
{
glyphname = uniF7EC;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (576,0);
ref = gravecomb.sc;
}
);
width = 624;
}
);
note = uniF7EC;
unicode = 63468;
},
{
glyphname = uniF7ED;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (613,0);
ref = acutecomb.sc;
}
);
width = 624;
}
);
note = uniF7ED;
unicode = 63469;
},
{
glyphname = uniF7EE;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (704,0);
ref = uni0302.sc;
}
);
width = 624;
}
);
note = uniF7EE;
unicode = 63470;
},
{
glyphname = uniF7EF;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (755,0);
ref = uni0308.sc;
}
);
width = 624;
}
);
note = uniF7EF;
unicode = 63471;
},
{
glyphname = uniF7F0;
layers = (
{
layerId = m01;
shapes = (
{
ref = eth.sc;
}
);
width = 1177;
}
);
note = uniF7F0;
unicode = 63472;
},
{
glyphname = uniF7F1;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (885,0);
ref = tildecomb.sc;
}
);
width = 1060;
}
);
note = uniF7F1;
unicode = 63473;
},
{
glyphname = uniF7F2;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (794,0);
ref = gravecomb.sc;
}
);
width = 1060;
}
);
note = uniF7F2;
unicode = 63474;
},
{
glyphname = uniF7F3;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (831,0);
ref = acutecomb.sc;
}
);
width = 1060;
}
);
note = uniF7F3;
unicode = 63475;
},
{
glyphname = uniF7F4;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (922,0);
ref = uni0302.sc;
}
);
width = 1060;
}
);
note = uniF7F4;
unicode = 63476;
},
{
glyphname = uniF7F5;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (885,0);
ref = tildecomb.sc;
}
);
width = 1060;
}
);
note = uniF7F5;
unicode = 63477;
},
{
glyphname = uniF7F6;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (973,0);
ref = uni0308.sc;
}
);
width = 1060;
}
);
note = uniF7F6;
unicode = 63478;
},
{
glyphname = uniF7F8;
layers = (
{
layerId = m01;
shapes = (
{
ref = oslash.sc;
}
);
width = 1060;
}
);
note = uniF7F8;
unicode = 63480;
},
{
glyphname = uniF7F9;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (884,0);
ref = gravecomb.sc;
}
);
width = 1159;
}
);
note = uniF7F9;
unicode = 63481;
},
{
glyphname = uniF7FA;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (921,0);
ref = acutecomb.sc;
}
);
width = 1159;
}
);
note = uniF7FA;
unicode = 63482;
},
{
glyphname = uniF7FB;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (1012,0);
ref = uni0302.sc;
}
);
width = 1159;
}
);
note = uniF7FB;
unicode = 63483;
},
{
glyphname = uniF7FC;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (1063,0);
ref = uni0308.sc;
}
);
width = 1159;
}
);
note = uniF7FC;
unicode = 63484;
},
{
glyphname = uniF7FD;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (836,0);
ref = acutecomb.sc;
}
);
width = 1009;
}
);
note = uniF7FD;
unicode = 63485;
},
{
glyphname = uniF7FE;
layers = (
{
layerId = m01;
shapes = (
{
ref = thorn.sc;
}
);
width = 980;
}
);
note = uniF7FE;
unicode = 63486;
},
{
glyphname = uniF7FF;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (978,0);
ref = uni0308.sc;
}
);
width = 1009;
}
);
note = uniF7FF;
unicode = 63487;
},
{
glyphname = uniE499.alt;
layers = (
{
layerId = m01;
shapes = (
{
pos = (266,0);
ref = acute;
},
{
ref = eogonek.alt;
}
);
width = 874;
}
);
note = uniE499.alt;
},
{
glyphname = uniE49E.alt;
layers = (
{
layerId = m01;
shapes = (
{
pos = (76,0);
ref = circumflex;
},
{
ref = eogonek.alt;
}
);
width = 874;
}
);
note = uniE49E.alt;
},
{
glyphname = uniE4BC.alt;
layers = (
{
layerId = m01;
shapes = (
{
pos = (176,0);
ref = macron;
},
{
ref = eogonek.alt;
}
);
width = 874;
}
);
note = uniE4BC.alt;
},
{
glyphname = uniE4E8.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,702,o),
(508,791,o),
(463,791,qs),
(400,791,o),
(309,709,o),
(309,653,qs),
(309,626,o),
(346,627,qs),
(549,627,ls),
(586,626,o),
(586,651,q),
(586,651,l)
);
},
{
closed = 1;
nodes = (
(809,536,o),
(719,537,qs),
(334,537,ls),
(297,537,o),
(297,510,qs),
(297,395,o),
(348,231,o),
(469,123,o),
(561,123,qs),
(645,123,o),
(727,178,qs),
(745,190,o),
(803,117,o),
(791,106,qs),
(736,57,o),
(549,-37,o),
(430,-164,o),
(432,-246,qs),
(432,-367,o),
(555,-367,qs),
(616,-367,o),
(657,-336,q),
(677,-342,o),
(678,-375,q),
(602,-488,o),
(461,-487,qs),
(256,-487,o),
(256,-303,qs),
(256,-168,o),
(401,-45,qs),
(428,-22,o),
(399,-18,qs),
(297,0,o),
(139,158,o),
(68,334,o),
(68,436,qs),
(68,606,o),
(301,870,o),
(461,870,qs),
(633,870,o),
(809,678,o),
(809,612,q),
(809,612,l)
);
},
{
closed = 1;
nodes = (
(745,-247,o),
(696,-279,q),
(667,-293,o),
(637,-293,qs),
(586,-293,o),
(553,-260,qs),
(520,-229,o),
(520,-178,qs),
(520,-137,o),
(549,-109,q),
(580,-74,o),
(637,-76,qs),
(690,-76,o),
(723,-117,qs),
(745,-145,o),
(745,-188,q),
(745,-188,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
32 1 4 8 30 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 7 7 5 114 0 2 0 1 0 2 1 105 0 0 0 6 5 0 6 103 0 7 0 8 4 7 8 106 0 4 3 3 4 89 0 4 4 3 97 0 3 4 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 7 6 5 7 128 0 2 0 1 0 2 1 105 0 0 0 6 5 0 6 103 0 7 0 8 4 7 8 106 0 4 3 3 4 89 0 4 4 3 97 0 3 4 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
38 37 52 41 36 43 37 35 49 9 6 31 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uniE4E8.alt;
},
{
glyphname = uniE4EA.alt;
layers = (
{
layerId = m01;
shapes = (
{
ref = eogonek.alt;
},
{
pos = (910,0);
ref = uni030B;
}
);
width = 874;
}
);
note = uniE4EA.alt;
},
{
glyphname = uniE4EB.alt;
layers = (
{
layerId = m01;
shapes = (
{
ref = eogonek.alt;
},
{
pos = (935,0);
ref = uni0307;
}
);
width = 874;
}
);
note = uniE4EB.alt;
},
{
glyphname = uniE4EC.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,1245,o),
(283,1327,o),
(340,1327,qs),
(397,1327,o),
(481,1245,o),
(481,1188,qs),
(481,1131,o),
(399,1049,o),
(340,1049,qs),
(283,1049,o),
(201,1131,o),
(201,1188,q),
(201,1188,l)
);
},
{
closed = 1;
nodes = (
(567,1020,o),
(567,1073,qs),
(567,1093,o),
(576,1114,qs),
(696,1415,ls),
(702,1431,o),
(723,1434,q),
(756,1434,o),
(819,1391,qs),
(858,1364,o),
(856,1343,qs),
(856,1337,o),
(854,1331,q),
(678,1069,ls),
(647,1020,o),
(610,1020,q),
(610,1020,l)
);
},
{
closed = 1;
nodes = (
(586,702,o),
(508,791,o),
(463,791,qs),
(400,791,o),
(309,709,o),
(309,653,qs),
(309,626,o),
(346,627,qs),
(549,627,ls),
(586,626,o),
(586,651,q),
(586,651,l)
);
},
{
closed = 1;
nodes = (
(809,536,o),
(719,537,qs),
(334,537,ls),
(297,537,o),
(297,510,qs),
(297,395,o),
(348,231,o),
(469,123,o),
(561,123,qs),
(645,123,o),
(727,178,qs),
(745,190,o),
(803,117,o),
(791,106,qs),
(736,57,o),
(549,-37,o),
(430,-164,o),
(432,-246,qs),
(432,-367,o),
(555,-367,qs),
(616,-367,o),
(657,-336,q),
(677,-342,o),
(678,-375,q),
(602,-488,o),
(461,-487,qs),
(256,-487,o),
(256,-303,qs),
(256,-168,o),
(401,-45,qs),
(428,-22,o),
(399,-18,qs),
(297,0,o),
(139,158,o),
(68,334,o),
(68,436,qs),
(68,606,o),
(301,870,o),
(461,870,qs),
(633,870,o),
(809,678,o),
(809,612,q),
(809,612,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
62 1 8 9 60 1 7 8 2 76 0 3 1 3 133 11 1 2 0 6 0 2 6 128 0 9 10 8 10 9 8 128 0 1 0 0 2 1 0 105 0 6 0 5 4 6 5 105 0 4 0 10 9 4 10 103 0 8 7 7 8 89 0 8 8 7 97 0 7 8 7 81 14 13 83 80 76 74 65 63 59 57 46 44 39 37 34 31 22 21 13 29 14 28 36 34 12 6 24 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uniE4EC.alt;
},
{
glyphname = uniEBF3.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(809,536,o),
(719,537,qs),
(334,537,ls),
(297,537,o),
(297,510,qs),
(297,395,o),
(348,231,o),
(469,123,o),
(561,123,qs),
(645,123,o),
(727,178,qs),
(745,190,o),
(803,117,o),
(791,106,qs),
(736,57,o),
(549,-37,o),
(430,-164,o),
(432,-246,qs),
(432,-367,o),
(555,-367,qs),
(616,-367,o),
(657,-336,q),
(677,-342,o),
(678,-375,q),
(602,-488,o),
(461,-487,qs),
(256,-487,o),
(256,-303,qs),
(256,-168,o),
(401,-45,qs),
(428,-22,o),
(399,-18,qs),
(297,0,o),
(139,158,o),
(68,334,o),
(68,436,qs),
(68,606,o),
(184,737,qs),
(268,829,o),
(371,858,q),
(523,1020,o),
(522,1135,qs),
(522,1256,o),
(399,1255,qs),
(338,1255,o),
(297,1225,q),
(277,1231,o),
(276,1264,q),
(352,1377,o),
(494,1376,qs),
(699,1376,o),
(698,1194,qs),
(698,1042,o),
(494,868,q),
(641,862,o),
(721,774,qs),
(809,678,o),
(809,612,q),
(809,612,l)
);
},
{
closed = 1;
nodes = (
(586,702,o),
(508,791,o),
(463,791,qs),
(400,791,o),
(309,709,o),
(309,653,qs),
(309,626,o),
(346,627,qs),
(549,627,ls),
(586,626,o),
(586,651,q),
(586,651,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
10 1 2 1 12 1 0 2 36 1 4 5 34 1 3 4 4 76 0 5 6 4 6 5 4 128 0 1 0 2 0 1 2 105 0 0 0 8 7 0 8 105 0 7 0 6 5 7 6 103 0 4 3 3 4 89 0 4 4 3 97 0 3 4 3 81 68 66 63 60 57 54 50 48 39 37 33 31 36 35 19 9 6 25 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uniEBF3.alt;
},
{
glyphname = PoisonMark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(516,1069,l),
(315,1270,l),
(115,1069,l),
(51,1130,l),
(254,1331,l),
(51,1534,l),
(115,1595,l),
(315,1395,l),
(516,1595,l),
(578,1534,l),
(377,1331,l),
(578,1130,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = PoisonMark;
},
{
glyphname = longbackslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(801,-122,o),
(733,-148,qs),
(665,-175,o),
(654,-151,qs),
(-71,1572,ls),
(-83,1601,o),
(-14,1630,qs),
(56,1658,o),
(68,1628,qs),
(791,-103,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = longbackslash;
},
{
glyphname = longslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,-162,ls),
(49,-188,o),
(-84,-127,o),
(-75,-105,qs),
(654,1617,ls),
(663,1640,o),
(801,1588,o),
(792,1561,q),
(792,1561,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = longslash;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
isBold = 1;
linkStyle = Regular;
name = Bold;
properties = (
{
key = styleNames;
values = (
{
language = ENG;
value = Bold;
}
);
}
);
weightClass = 700;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_C" = -59;
"@MMK_R_S" = -41;
"@MMK_R_T" = -184;
"@MMK_R_U" = -100;
"@MMK_R_V" = -246;
"@MMK_R_Y" = -195;
"@MMK_R_adieresis" = 115;
};
"@MMK_L_B" = {
"@MMK_R_A" = -59;
"@MMK_R_AE" = -41;
"@MMK_R_U" = -80;
"@MMK_R_V" = -125;
"@MMK_R_Y" = -125;
};
"@MMK_L_C" = {
"@MMK_R_AE" = 41;
"@MMK_R_adieresis" = 133;
};
"@MMK_L_D" = {
"@MMK_R_A" = -41;
"@MMK_R_AE" = -41;
"@MMK_R_U" = -20;
"@MMK_R_V" = -59;
"@MMK_R_Y" = -41;
"@MMK_R_period" = -80;
};
"@MMK_L_F" = {
"@MMK_R_A" = -125;
"@MMK_R_AE" = -125;
"@MMK_R_c" = -145;
"@MMK_R_m" = -90;
"@MMK_R_period" = -205;
};
"@MMK_L_G" = {
"@MMK_R_AE" = 45;
"@MMK_R_V" = -100;
"@MMK_R_Y" = -59;
};
"@MMK_L_J" = {
"@MMK_R_period" = -80;
};
"@MMK_L_K" = {
"@MMK_R_A" = -41;
"@MMK_R_C" = -100;
"@MMK_R_U" = -125;
"@MMK_R_V" = -100;
"@MMK_R_Y" = -80;
"@MMK_R_period" = 41;
};
"@MMK_L_L" = {
"@MMK_R_C" = -41;
"@MMK_R_U" = -125;
"@MMK_R_V" = -274;
"@MMK_R_Y" = -184;
};
"@MMK_L_O" = {
"@MMK_R_A" = -41;
"@MMK_R_AE" = -59;
"@MMK_R_T" = -41;
"@MMK_R_U" = -20;
"@MMK_R_V" = -59;
"@MMK_R_Y" = -59;
"@MMK_R_Z" = -41;
"@MMK_R_adieresis" = 121;
"@MMK_R_period" = -59;
};
"@MMK_L_P" = {
"@MMK_R_A" = -80;
"@MMK_R_AE" = -80;
"@MMK_R_V" = -41;
"@MMK_R_c" = -100;
"@MMK_R_m" = -59;
"@MMK_R_period" = -205;
};
"@MMK_L_R" = {
"@MMK_R_C" = -41;
"@MMK_R_U" = -80;
"@MMK_R_V" = -166;
"@MMK_R_Y" = -125;
};
"@MMK_L_S" = {
"@MMK_R_V" = -80;
"@MMK_R_Y" = -20;
};
"@MMK_L_T" = {
"@MMK_R_A" = -184;
"@MMK_R_AE" = -184;
"@MMK_R_C" = -41;
"@MMK_R_Y" = 31;
"@MMK_R_Z" = -121;
"@MMK_R_a" = -166;
"@MMK_R_a.sc" = -150;
"@MMK_R_aacute.sc" = -70;
"@MMK_R_adieresis" = 129;
"@MMK_R_c" = -184;
"@MMK_R_i" = -20;
"@MMK_R_m" = -125;
"@MMK_R_period" = -205;
"@MMK_R_u" = -135;
"@MMK_R_v" = -125;
"@MMK_R_y" = -184;
};
"@MMK_L_U" = {
"@MMK_R_A" = -41;
"@MMK_R_AE" = -59;
"@MMK_R_Z" = -100;
"@MMK_R_adieresis" = 27;
};
"@MMK_L_V" = {
"@MMK_R_A" = -166;
"@MMK_R_AE" = -166;
"@MMK_R_C" = -59;
"@MMK_R_T" = 41;
"@MMK_R_a" = -156;
"@MMK_R_adieresis" = 10;
"@MMK_R_c" = -166;
"@MMK_R_m" = -100;
"@MMK_R_period" = -264;
"@MMK_R_u" = -100;
"@MMK_R_y" = -41;
};
"@MMK_L_X" = {
"@MMK_R_A" = -41;
"@MMK_R_C" = -59;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -166;
"@MMK_R_AE" = -59;
"@MMK_R_C" = -80;
"@MMK_R_T" = 59;
"@MMK_R_a" = -100;
"@MMK_R_adieresis" = 25;
"@MMK_R_b" = 80;
"@MMK_R_bracketright" = 59;
"@MMK_R_c" = -145;
"@MMK_R_d" = -145;
"@MMK_R_f" = -41;
"@MMK_R_g" = -145;
"@MMK_R_k" = 20;
"@MMK_R_m" = -100;
"@MMK_R_p" = -100;
"@MMK_R_parenright" = 59;
"@MMK_R_period" = -205;
"@MMK_R_s" = -100;
"@MMK_R_t" = -100;
"@MMK_R_u" = -100;
"@MMK_R_v" = -100;
"@MMK_R_x" = -100;
};
"@MMK_L_a" = {
"@MMK_R_v" = -80;
};
"@MMK_L_a.sc" = {
"@MMK_R_c.sc" = -80;
"@MMK_R_v.sc" = -121;
"@MMK_R_y.sc" = -150;
};
"@MMK_L_bracketleft" = {
"@MMK_R_Y" = 41;
};
"@MMK_L_dcaron" = {
"@MMK_R_edieresis" = 49;
"@MMK_R_k" = 137;
};
"@MMK_L_e" = {
"@MMK_R_adieresis" = 156;
"@MMK_R_c" = -35;
};
"@MMK_L_f" = {
"@MMK_R_adieresis" = 283;
"@MMK_R_bracketright" = 285;
"@MMK_R_exclam" = 246;
"@MMK_R_question" = 190;
"@MMK_R_quotedbl" = 305;
"@MMK_R_quotedblright" = 375;
"@MMK_R_t" = 20;
"@MMK_R_y" = 90;
};
"@MMK_L_f.alt" = {
"@MMK_R_adieresis" = 80;
"@MMK_R_idieresis" = 246;
"@MMK_R_imacron" = 135;
};
"@MMK_L_f.sc" = {
"@MMK_R_aacute.sc" = -121;
};
"@MMK_L_g" = {
"@MMK_R_adieresis" = 160;
"@MMK_R_j.alt" = 59;
"@MMK_R_quotedblright" = 41;
"@MMK_R_y" = 90;
};
"@MMK_L_h" = {
"@MMK_R_v" = -80;
};
"@MMK_L_k" = {
"@MMK_R_quotedblright" = 41;
};
"@MMK_L_k.sc" = {
"@MMK_R_c.sc" = -80;
};
"@MMK_L_lcaron" = {
"@MMK_R_edieresis" = 49;
"@MMK_R_k" = 137;
};
"@MMK_L_m" = {
"@MMK_R_adieresis" = 115;
"@MMK_R_u" = -20;
"@MMK_R_x" = 41;
};
"@MMK_L_o" = {
"@MMK_R_quotedblright" = -41;
};
"@MMK_L_p" = {
"@MMK_R_quotedblright" = -41;
};
"@MMK_L_p.sc" = {
"@MMK_R_aacute.sc" = -121;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_A" = -184;
"@MMK_R_AE" = -184;
"@MMK_R_T" = 49;
"@MMK_R_V" = 49;
"@MMK_R_Y" = 100;
"@MMK_R_adieresis" = 61;
"@MMK_R_b" = 41;
"@MMK_R_c" = -41;
"@MMK_R_d" = -41;
"@MMK_R_v" = 41;
"@MMK_R_x" = 41;
"@MMK_R_y" = 80;
};
"@MMK_L_r.sc" = {
"@MMK_R_a.sc" = 41;
"@MMK_R_aacute.sc" = 41;
"@MMK_R_c.sc" = -59;
"@MMK_R_t.sc" = -59;
"@MMK_R_v.sc" = -59;
"@MMK_R_y.sc" = -111;
};
"@MMK_L_t" = {
"@MMK_R_quotedblright" = 49;
};
"@MMK_L_t.sc" = {
"@MMK_R_a.sc" = -111;
"@MMK_R_aacute.sc" = -111;
"@MMK_R_ae.sc" = -100;
};
"@MMK_L_thorn.sc" = {
"@MMK_R_aacute.sc" = -59;
"@MMK_R_v.sc" = -41;
"@MMK_R_y.sc" = -49;
};
"@MMK_L_u10330" = {
"@MMK_R_u10334" = -100;
};
"@MMK_L_u10332" = {
"@MMK_R_u10334" = -41;
};
"@MMK_L_u10333" = {
"@MMK_R_u10334" = -94;
};
"@MMK_L_u10336" = {
"@MMK_R_u10334" = -90;
};
"@MMK_L_u1033A" = {
"@MMK_R_u10334" = -90;
};
"@MMK_L_u1033B" = {
"@MMK_R_u10334" = -31;
};
"@MMK_L_u10342" = {
"@MMK_R_u10334" = -150;
};
"@MMK_L_u10345" = {
"@MMK_R_u10334" = -41;
};
"@MMK_L_v" = {
"@MMK_R_period" = -125;
"@MMK_R_quotedblright" = 100;
};
"@MMK_L_v.sc" = {
"@MMK_R_a.sc" = -121;
"@MMK_R_aacute.sc" = -121;
"@MMK_R_ae.sc" = -121;
"@MMK_R_c.sc" = -59;
};
"@MMK_L_x" = {
"@MMK_R_c" = -41;
"@MMK_R_m" = 20;
"@MMK_R_quotedblright" = 20;
};
"@MMK_L_y" = {
"@MMK_R_period" = -125;
"@MMK_R_quotedblright" = 90;
};
"@MMK_L_y.sc" = {
"@MMK_R_a.sc" = -150;
"@MMK_R_aacute.sc" = -150;
"@MMK_R_ae.sc" = -121;
};
B = {
T = -80;
X = -41;
Z = -80;
adieresis = 27;
};
D = {
X = -59;
Z = -41;
adieresis = 137;
};
F = {
Z = -100;
a = -145;
adieresis = 96;
i = -20;
u = -90;
y = -31;
};
G = {
T = -80;
Z = -59;
adieresis = 141;
};
J = {
adieresis = 18;
};
K = {
S = -41;
T = -80;
adieresis = 121;
};
L = {
S = -41;
T = -225;
Z = -80;
adieresis = 131;
};
P = {
X = -41;
Z = -41;
a = -59;
adieresis = 57;
s = -59;
};
R = {
S = -20;
T = -145;
adieresis = 80;
};
S = {
T = -80;
adieresis = 76;
};
X = {
adieresis = 119;
};
a = {
adieresis = 152;
u = -20;
x = 41;
};
bracketleft = {
J = 184;
adieresis = -88;
j = 205;
};
dcaron = {
adieresis = 80;
b = 158;
j = 80;
parenright = 137;
};
f.sc = {
a.sc = -121;
ae.sc = -121;
};
h = {
adieresis = 113;
u = -20;
};
i = {
adieresis = 111;
x = 41;
};
k = {
adieresis = 109;
u = -31;
};
l = {
adieresis = 111;
x = 41;
};
lcaron = {
b = 158;
j = 80;
parenright = 164;
};
o = {
adieresis = 129;
};
p = {
adieresis = 162;
};
p.sc = {
a.sc = -121;
ae.sc = -121;
};
quoteright = {
adieresis = 145;
s = -137;
};
t = {
adieresis = 174;
y = 49;
};
thorn.sc = {
a.sc = -59;
};
u = {
x = 59;
};
u10330 = {
u10333 = -100;
u10335 = -86;
u10338 = -150;
u10344 = -250;
u10345 = -215;
u10349 = -80;
};
u10332 = {
u10330 = -31;
u10333 = -129;
u1033B = -150;
};
u10333 = {
u10333 = -150;
u10335 = -80;
u10338 = -129;
u10344 = -250;
u10345 = -215;
u10349 = -80;
};
u10334 = {
u10336 = -49;
u10338 = -41;
u1033B = -90;
u10344 = -80;
};
u10336 = {
u10330 = 109;
u10333 = -139;
u10335 = -59;
u10338 = -111;
u10345 = -80;
u10349 = 41;
};
u10337 = {
u10344 = -139;
u10345 = -70;
};
u10338 = {
u1033B = -129;
};
u1033A = {
u10330 = 31;
u10333 = -121;
u10335 = -59;
u10338 = -100;
u10344 = -70;
u10345 = -80;
};
u1033B = {
u10333 = -80;
u10335 = -31;
u10338 = -70;
u10344 = -150;
u10345 = -100;
u10349 = -70;
};
u1033E = {
u10330 = 70;
u1033B = -80;
u10349 = -41;
};
u10342 = {
u10333 = -139;
u10335 = -121;
u10338 = -180;
u10344 = -160;
u10345 = -139;
u10349 = -129;
};
u10344 = {
u10330 = -49;
u10333 = -80;
u1033B = -250;
};
u10345 = {
u10333 = -70;
u1033B = -150;
};
u10349 = {
u10330 = 121;
u10333 = -41;
u10336 = 31;
u10338 = -41;
u10349 = 100;
};
v = {
adieresis = 57;
};
x = {
adieresis = 123;
};
y = {
adieresis = 72;
x = 70;
z = 41;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) 1998-2022 by Peter S. Baker";
}
);
},
{
key = familyNames;
values = (
{
language = ENG;
value = Junicode;
}
);
},
{
key = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
key = licenses;
values = (
{
language = ENG;
value = "Licensed under the SIL Open Font License, version 1.1";
}
);
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 1;
versionMinor = 4;
}
